------- FILE MDOIT.ASM LEVEL 1 PASS 2
      1  fffe					      processor	6502
      2  fffe ????				      SEG	ROM
      3  0000				   HEADER     ORG	$0000
      4  0000		       01		      DC.B	1	; 0   Header version	  - 1 byte
      5  0001		       41 54 41 52*	      DC.B	"ATARI7800"	; 1..16  "ATARI7800   "  - 16 bytes
      6  000a		       20 20 20 20*	      DS	7,32
      7  0011		       59 6f 75 72*	      DC.B	"Your Name Here"	; 17..48 Cart title	  - 32 bytes
      8  001f		       00 00 00 00*	      DS	HEADER+49-.,0
      9  0031							; Hack of changing the 256->code line to the $00,$00,$80,$00 code line
     10  0031							; added by Aaron Lanterman, 9/4/2020, to stop assembler from complaining...
     11  0031							; Basically, I'm telling it you have a 32K cartridge, but that doesn't
     12  0031							; seem to break the emulator (at least)
     13  0031		       00 00 80 00	      DC.B	$00,$00,$80,$00	;
     14  0035							;DC.B	  $00,$00,256->code,$00; 49..52 data length	 - 4 bytes
     15  0035		       00 00		      DC.B	$00,$00	; 53..54 cart type	 - 2 bytes
     16  0037							;    bit 0 - pokey at $4000
     17  0037							;    bit 1 - supergame bank switched
     18  0037							;    bit 2 - supergame ram at $4000
     19  0037							;    bit 3 - rom at $4000
     20  0037							;    bit 4 - bank 6 at $4000
     21  0037							;    bit 5 - supergame banked ram
     22  0037							;    bit 6 - pokey at $450
     23  0037							;    bit 7 - mirror ram at $4000
     24  0037							;    bit 8-15 - Special
     25  0037							;   0 = Normal cart
     26  0037		       01		      DC.B	1	; 55	controller 1 type  - 1 byte
     27  0038		       01		      DC.B	1	; 56	controller 2 type  - 1 byte
     28  0039							;    0 = None
     29  0039							;    1 = Joystick
     30  0039							;    2 = Light Gun
     31  0039		       00		      DC.B	0	; 57 0 = NTSC 1 = PA
     32  003a		       00		      DC.B	0	; 58	Save data peripheral - 1 byte (version 2)
     33  003b							;    0 = None / unknown (default)
     34  003b							;    1 = High Score Cart (HSC)
     35  003b							;    2 = SaveKey
     36  003f					      ORG	HEADER+63
     37  003f		       00		      DC.B	0	; 63	Expansion module
     38  0040							;    0 = No expansion module (default on all currently released games)
     39  0040							;    1 = Expansion module required
     40  0064					      ORG	HEADER+100	; 100..127 "ACTUAL CART DATA STARTS HERE" - 28 bytes
     41  0064		       41 43 54 55*	      DC.B	"ACTUAL CART DATA STARTS HERE"
     42  0080							; end of header code for the simulator added by Aaron Lanterman
------- FILE MARIAOS.ASM LEVEL 2 PASS 2
      0  0080					      include	"MARIAOS.ASM"
      1  0080					      processor	6502
      2  0080
      3  0080							;*  MARIAOS	    MARIA DATA LOCATION DEFINITIONS
      4  0080
      5  0080							;*  NOTE THE FOLLOWING WIERD THINGS ABOUT THE RAM:
      6  0080							;*	      $00-$3F <=> $100-$13F
      7  0080							;*	      $80-$FF <=> $180-$1FF
      8  0080							;*	      $40-$FF <=> $2040-$20FF
      9  0080							;*	    $140-$1FF <=> $2140-$21FF
     10  0080
     11  0080							;*  TIA REGISTERS
     12  0080		       00 01	   INPTCTRL   EQU	$01	;		      ;INPUT CONTROL
     13  0080		       00 0c	   INPT4      EQU	$0C	;		      ;BITS 7	     PLAYER 0 BUTTON
     14  0080		       00 0d	   INPT5      EQU	$0D	;		      ;BITS 7	     PLAYER 1 BUTTON
     15  0080		       00 15	   AUDC0      EQU	$15	;		      ;BITS	3210 AUDIO CONTROL 0
     16  0080		       00 16	   AUDC1      EQU	$16	;		      ;BITS	3210 AUDIO CONTROL 1
     17  0080		       00 17	   AUDF0      EQU	$17	;		      ;BITS    43210 AUDIO FREQUENCY 0
     18  0080		       00 18	   AUDF1      EQU	$18	;		      ;BITS    43210 AUDIO FREQUENCY 1
     19  0080		       00 19	   AUDV0      EQU	$19	;		      ;BITS	3210 AUDIO VOLUME 0
     20  0080		       00 1a	   AUDV1      EQU	$1A	;		      ;BITS	3210 AUDIO VOLUME 1
     21  0080
     22  0080							;*  MARIA REGISTERS
     23  0080		       00 20	   BACKGRND   EQU	$20	;		      ;BACKGROUND COLOR
     24  0080		       00 21	   Z0C1       EQU	$21	;		      ;PALETTE 0, COLOR 1
     25  0080		       00 22	   Z0C2       EQU	$22	;		      ;PALETTE 0, COLOR 2
     26  0080		       00 23	   Z0C3       EQU	$23	;		      ;PALETTE 0, COLOR 3
     27  0080		       00 24	   WSYNC      EQU	$24	;		      ;FAST MARIA WSYNC STROBE		   WO
     28  0080		       00 25	   Z1C1       EQU	$25	;		      ;PALETTE 1, COLOR 1
     29  0080		       00 26	   Z1C2       EQU	$26	;		      ;PALETTE 1, COLOR 2
     30  0080		       00 27	   Z1C3       EQU	$27	;		      ;PALETTE 1, COLOR 3
     31  0080		       00 28	   MSTAT      EQU	$28	;		      ;BIT 6 IN VBLANK, BIT ? IN DISPLAY   RO
     32  0080		       00 29	   Z2C1       EQU	$29	;		      ;PALETTE 2, COLOR 1
     33  0080		       00 2a	   Z2C2       EQU	$2A	;		      ;PALETTE 2, COLOR 2
     34  0080		       00 2b	   Z2C3       EQU	$2B	;		      ;PALETTE 2, COLOR 3
     35  0080		       00 2c	   DPPH       EQU	$2C	;		      ;DISPLAY LIST POINTER HIGH	   WO
     36  0080		       00 2d	   Z3C1       EQU	$2D	;		      ;PALETTE 3, COLOR 1
     37  0080		       00 2e	   Z3C2       EQU	$2E	;		      ;PALETTE 3, COLOR 2
     38  0080		       00 2f	   Z3C3       EQU	$2F	;		      ;PALETTE 3, COLOR 3
     39  0080		       00 30	   DPPL       EQU	$30	;		      ;DISPLAY LIST POINTER LOW 	   WO
     40  0080		       00 31	   Z4C1       EQU	$31	;		      ;PALETTE 4, COLOR 1
     41  0080		       00 32	   Z4C2       EQU	$32	;		      ;PALETTE 4, COLOR 2
     42  0080		       00 33	   Z4C3       EQU	$33	;		      ;PALETTE 4, COLOR 3
     43  0080		       00 34	   CHARBASE   EQU	$34	;		      ;CHARACTER MODE HIGH POINTER	   WO
     44  0080		       00 35	   Z5C1       EQU	$35	;		      ;PALETTE 5, COLOR 1
     45  0080		       00 36	   Z5C2       EQU	$36	;		      ;PALETTE 5, COLOR 2
     46  0080		       00 37	   Z5C3       EQU	$37	;		      ;PALETTE 5, COLOR 3
     47  0080		       00 38	   OFFSET     EQU	$38	;		      ;NOT USED ;*;*;*;*;*;*
     48  0080		       00 39	   Z6C1       EQU	$39	;		      ;PALETTE 6, COLOR 1
     49  0080		       00 3a	   Z6C2       EQU	$3A	;		      ;PALETTE 6, COLOR 2
     50  0080		       00 3b	   Z6C3       EQU	$3B	;		      ;PALETTE 6, COLOR 3
     51  0080		       00 3c	   CTRL       EQU	$3C	;		      ;BIT 7 CHARACTER WIDTH, BIT 6 BCNT   WO
     52  0080		       00 3d	   Z7C1       EQU	$3D	;		      ;PALETTE 7, COLOR 1
     53  0080		       00 3e	   Z7C2       EQU	$3E	;		      ;PALETTE 7, COLOR 2
     54  0080		       00 3f	   Z7C3       EQU	$3F	;		      ;PALETTE 7, COLOR 3
     55  0080
     56  0080							;*  FREE RAM - $40-$FF
     57  0080
     58  0080							;*  ALIASED RAM - $100-$13F
     59  0080
     60  0080							;*  STACK - $140-$1FF
     61  0080
     62  0080							;*  6532 TIMERS AND PORTS
     63  0080
     64  0080		       02 80	   SWCHA      EQU	$280	;		     ;JOYSTICKS
     65  0080							;*	    BIT 7   PLAYER 0 EAST IF CLEAR
     66  0080							;*	    BIT 6;	      WEST
     67  0080							;*	    BIT 5;	      SOUTH
     68  0080							;*	    BIT 4;	      NORTH
     69  0080							;*	    BIT 3   PLAYER 1 EAST IF CLEAR
     70  0080							;*	    BIT 2;	      WEST
     71  0080							;*	    BIT 1;	      SOUTH
     72  0080							;*	    BIT 0;	      NORTH
     73  0080
     74  0080		       02 82	   SWCHB      EQU	$282	;		     ;CONSOLE SWITCHES
     75  0080							;*	    BIT 7   PLAYER 1 DIFFICULTY A IF SET, B IF CLEAR
     76  0080							;*	    BIT 6   PLAYER 2 DIFFICULTY A IF SET, B IF CLEAR
     77  0080							;*	    BIT 3   BLACK AND WHITE VS COLOR - COLOR WHEN SET
     78  0080							;*	    BIT 1   GAME SELECT - CLEAR WHEN PRESSED
     79  0080							;*	    BIT 0   GAME RESET - CLEAR WHEN PRESSED
     80  0080
     81  0080		       02 81	   CTLSWA     EQU	$281
     82  0080		       02 83	   CTLSWB     EQU	$283
     83  0080		       02 84	   INTIM      EQU	$284	;		     ;INTERVAL TIMER IN
     84  0080		       02 95	   TIM8T      EQU	$295	;		     ;TIMER 8T WRITE OUT
     85  0080		       02 96	   TIM64T     EQU	$296	;		     ;TIMER 64T WRITE OUT
     86  0080		       02 9e	   TIM64TI    EQU	$29E	;		     ;INTERRUPT TIMER 64T
     87  0080
     88  0080							; END
------- FILE MDOIT.ASM
------- FILE MSDEF.ASM LEVEL 2 PASS 2
      0  0080					      include	"MSDEF.ASM"
      1  0080					      processor	6502
      2  0080
      3  0080							;*  MSDEF.S	    MS PAC MAN SYMBOL DEFINITIONS
      4  0080							;*  ADDRESS DEFINITIONS
      5  0080
      6  0080							;*  ZERO PAGE
      7  0080
      8  0080							;*  ZERO PAGE VARIABLES THAT ARE NOT ERASED  $40-$9F
      9  0080
     10  0080		       00 40	   STLEVEL    EQU	$40	;		      ;STARTING LEVEL OF GAME
     11  0080		       00 41	   TWOPLAYR   EQU	$41	;		      ;WHETHER TWO-PLAYER MODE
     12  0080		       00 42	   AUTOPLAY   EQU	$42	;		      ;1 IF AUTO-PLAY MODE
     13  0080
     14  0080		       00 43	   NEWRAND    EQU	$43	;		      ;CURRENT SEED FOR RAND ROUTINE
     15  0080		       00 44	   OLDRAND    EQU	$44	;		      ;OLD SEED FOR RAND ROUTINE
     16  0080
     17  0080		       00 45	   PLAYER     EQU	$45	;		      ;WHICH PLAYER IS PLAYING
     18  0080		       00 46	   P1SCORE    EQU	$46	;		      ;PLAYER 1 SCORE - 4 BYTES
     19  0080		       00 4a	   P1BONUS    EQU	$4A	;		      ;TIME TILL PLAYER 1 GETS BONUS LIFE
     20  0080		       00 4c	   P2SCORE    EQU	$4C	;		      ;PLAYER 2 SCORE - 4 BYTES
     21  0080		       00 50	   P2BONUS    EQU	$50	;		      ;TIME TILL PLAYER 2 GETS BONUS LIFE
     22  0080
     23  0080		       00 52	   RACKRAND   EQU	$52	;		      ;NUMBER BETWEEN 0..3 FOR THE RACK
     24  0080		       00 53	   MENUFLAG   EQU	$53	;		      ;WHETHER IN MENU MODE OR NOT
     25  0080		       00 54	   KNLTEMP0   EQU	$54	;		      ;STATE VARIABLE FOR KERNAL
     26  0080		       00 55	   KNLTEMP1   EQU	$55	;		      ;STATE VARIABLE FOR KERNAL
     27  0080
     28  0080							;*  LOADER VARIABLES
     29  0080		       00 56	   HPLIST     EQU	$56	;		      ;6 BYTES - HORIZONTAL POSITION
     30  0080		       00 5c	   VZLIST     EQU	$5C	;		      ;6 BYTES - VERTICAL ZONE
     31  0080		       00 62	   VOLIST     EQU	$62	;		      ;6 BYTES - VERTICAL OFFSET
     32  0080		       00 68	   SLLIST     EQU	$68	;		      ;6 BYTES - LOW BYTE STAMP ADDRESS
     33  0080		       00 6e	   SHLIST     EQU	$6E	;		      ;6 BYTES - HI BYTE STAMP ADDRESS
     34  0080		       00 74	   DOLIST     EQU	$74	;		      ;6 BYTES - SOMETHING CHANGED - RELOAD
     35  0080		       00 7a	   OLDZONE    EQU	$7A	;		      ;6 BYTES - LAST ZONE CHARACTER IN
     36  0080
     37  0080							;*  SHADOWS FOR MONSTER COLORS (USED FOR FRUIT PALETTES)
     38  0080		       00 81	   P0C1       EQU	$81	;		      ;PALETTE 2, COLOR 1
     39  0080		       00 82	   P0C2       EQU	$82	;		      ;PALETTE 2, COLOR 2
     40  0080		       00 83	   P0C3       EQU	$83	;		      ;PALETTE 2, COLOR 3
     41  0080
     42  0080		       00 84	   RACKFRT    EQU	$84	;		      ;TYPE OF FRUIT TO DISPLAY UNDER RACK
     43  0080
     44  0080		       00 85	   P1C1       EQU	$85	;		      ;PALETTE 3, COLOR 1
     45  0080		       00 86	   P1C2       EQU	$86	;		      ;PALETTE 3, COLOR 2
     46  0080		       00 87	   P1C3       EQU	$87	;		      ;PALETTE 3, COLOR 3
     47  0080
     48  0080		       00 88	   DBSELECT   EQU	$88	;		      ;DEBOUNCE BYTE FOR SELECT
     49  0080
     50  0080		       00 89	   P2C1       EQU	$89	;		      ;PALETTE 4, COLOR 1
     51  0080		       00 8a	   P2C2       EQU	$8A	;		      ;PALETTE 4, COLOR 2
     52  0080		       00 8b	   P2C3       EQU	$8B	;		      ;PALETTE 4, COLOR 3
     53  0080
     54  0080		       00 8c	   DBRESET    EQU	$8C	;		      ;DEBOUNCE BYTE FOR RESET
     55  0080
     56  0080		       00 8d	   P3C1       EQU	$8D	;		      ;PALETTE 5, COLOR 1
     57  0080		       00 8e	   P3C2       EQU	$8E	;		      ;PALETTE 5, COLOR 2
     58  0080		       00 8f	   P3C3       EQU	$8F	;		      ;PALETTE 5, COLOR 3
     59  0080
     60  0080		       00 90	   DBPAUSE    EQU	$90	;		      ;DEBOUNCE BYTE FOR PAUSE
     61  0080
     62  0080		       00 91	   P4C1       EQU	$91	;		      ;PALETTE 2, COLOR 1
     63  0080		       00 92	   P4C2       EQU	$92	;		      ;PALETTE 2, COLOR 2
     64  0080		       00 93	   P4C3       EQU	$93	;		      ;PALETTE 2, COLOR 3
     65  0080
     66  0080		       00 94	   SCRNSTAT   EQU	$94	;		      ;SCREEN STATE, OFF IF $FF
     67  0080
     68  0080		       00 95	   P5C1       EQU	$95	;		      ;PALETTE 3, COLOR 1
     69  0080		       00 96	   P5C2       EQU	$96	;		      ;PALETTE 3, COLOR 2
     70  0080		       00 97	   P5C3       EQU	$97	;		      ;PALETTE 3, COLOR 3
     71  0080
     72  0080		       00 98	   TWOPORTS   EQU	$98	;		      ;WHETHER THE SECOND PORT HAS BEEN USED
     73  0080
     74  0080		       00 99	   P6C1       EQU	$99	;		      ;PALETTE 4, COLOR 1
     75  0080		       00 9a	   P6C2       EQU	$9A	;		      ;PALETTE 4, COLOR 2
     76  0080		       00 9b	   P6C3       EQU	$9B	;		      ;PALETTE 4, COLOR 3
     77  0080
     78  0080		       00 9c	   HSCHERE    EQU	$9C	;		      ;IS HIGH SCORE CART PLUGGED IN
     79  0080
     80  0080		       00 9d	   P7C1       EQU	$9D	;		      ;PALETTE 5, COLOR 1
     81  0080		       00 9e	   P7C2       EQU	$9E	;		      ;PALETTE 5, COLOR 2
     82  0080		       00 9f	   P7C3       EQU	$9F	;		      ;PALETTE 5, COLOR 3
     83  0080
     84  0080							;*  ZERO PAGE VARIABLES THAT ARE ERASED IN GAMEINIT  $A0-$FF
     85  0080
     86  0080		       00 a0	   RTLOCAL    EQU	$A0	;		      ;TWO BYTES - MY CLOCK
     87  0080		       00 a2	   GAMEOVER   EQU	$A2	;		      ;FLAG FOR GAME OVER
     88  0080
     89  0080		       00 a3	   TOTLIVES   EQU	$A3	;		      ;TOTAL NUMBER OF LIVES
     90  0080							;*  $64-$6F ARE SWAPPED BETWEEN PLAYERS
     91  0080		       00 a4	   LIVES      EQU	$A4	;		      ;NUMBER OF LIVES
     92  0080		       00 a5	   RACK       EQU	$A5	;		      ;RACK PLAYER IS AT
     93  0080		       00 a6	   LEVEL      EQU	$A6	;		      ;LEVEL PLAYER IS AT
     94  0080		       00 a7	   ADJLEVEL   EQU	$A7	;		      ;LEVEL ADJUSTED FOR "WRAP" AT HIGH LVL
     95  0080		       00 a8	   DOTS       EQU	$A8	;		      ;NUMBER OF DOTS
     96  0080		       00 aa	   DOTSEATN   EQU	$AA	;		      ;NUMBER OF DOTS EATEN
     97  0080		       00 ab	   DEATHFLG   EQU	$AB	;		      ;TRUE IF THE PAC HAS DIED YET
     98  0080		       00 ac	   PINKDOTS   EQU	$AC	;		      ;PINK RELEASE COUNTER
     99  0080		       00 ad	   BLUEDOTS   EQU	$AD	;		      ;BLUE RELEASE COUNTER
    100  0080		       00 ae	   GOLDDOTS   EQU	$AE	;		      ;GOLD RELEASE COUNTER
    101  0080		       00 af	   FDOTS      EQU	$AF	;		      ;FRUIT RELEASE COUNTER
    102  0080
    103  0080							;*  TEMP VARIABLES
    104  0080		       00 b0	   TEMP0      EQU	$B0	;		      ;SCRATCH DATA FOR PROGRAM USE
    105  0080		       00 b1	   TEMP1      EQU	$B1	;		      ;MORE SCRATCH DATA
    106  0080		       00 b2	   TEMP2      EQU	$B2	;		      ;MORE SCRATCH DATA
    107  0080		       00 b3	   TEMP3      EQU	$B3	;		      ;MORE SCRATCH DATA
    108  0080		       00 b4	   TEMP4      EQU	$B4	;		      ;MORE SCRATCH DATA
    109  0080		       00 b5	   TEMP5      EQU	$B5	;		      ;MORE SCRATCH DATA
    110  0080		       00 b6	   TEMP6      EQU	$B6	;		      ;MORE SCRATCH DATA
    111  0080		       00 b7	   TEMP7      EQU	$B7	;		      ;MORE SCRATCH DATA
    112  0080		       00 b8	   TEMP8      EQU	$B8	;		      ;MORE SCRATCH DATA
    113  0080		       00 b9	   TEMP9      EQU	$B9	;		      ;MORE SCRATCH DATA
    114  0080		       00 ba	   TEMP10     EQU	$BA	;		      ;MORE SCRATCH DATA
    115  0080		       00 bb	   TEMP11     EQU	$BB	;		      ;MORE SCRATCH DATA
    116  0080		       00 bc	   TEMP12     EQU	$BC	;		      ;MORE SCRATCH DATA
    117  0080		       00 bd	   TEMP13     EQU	$BD	;		      ;MORE SCRATCH DATA
    118  0080		       00 be	   TEMP14     EQU	$BE	;		      ;MORE SCRATCH DATA
    119  0080		       00 bf	   TEMP15     EQU	$BF	;		      ;MORE SCRATCH DATA
    120  0080		       00 c0	   TEMP16     EQU	$C0	;		      ;MORE SCRATCH DATA
    121  0080		       00 c1	   TEMP17     EQU	$C1	;		      ;MORE SCRATCH DATA
    122  0080		       00 c2	   TEMP18     EQU	$C2	;		      ;MORE SCRATCH DATA
    123  0080		       00 c3	   TEMP19     EQU	$C3	;		      ;MORE SCRATCH DATA
    124  0080		       00 c4	   TEMP20     EQU	$C4	;		      ;MORE SCRATCH DATA
    125  0080		       00 c5	   TEMP21     EQU	$C5	;		      ;MORE SCRATCH DATA
    126  0080		       00 c6	   TEMP22     EQU	$C6	;		      ;MORE SCRATCH DATA
    127  0080		       00 c7	   TEMP23     EQU	$C7	;		      ;MORE SCRATCH DATA
    128  0080
    129  0080		       00 c8	   LDRTEMP0   EQU	$C8	;		      ;SCRATCH DATA FOR KERNAL USE
    130  0080		       00 c9	   LDRTEMP1   EQU	$C9	;		      ;MORE SCRATCH DATA
    131  0080		       00 ca	   LDRTEMP2   EQU	$CA	;		      ;MORE SCRATCH DATA
    132  0080		       00 cb	   LDRTEMP3   EQU	$CB	;		      ;MORE SCRATCH DATA
    133  0080		       00 cc	   LDRTEMP4   EQU	$CC	;		      ;MORE SCRATCH DATA
    134  0080		       00 cd	   LDRTEMP5   EQU	$CD	;		      ;MORE SCRATCH DATA
    135  0080		       00 ce	   LDRTEMP6   EQU	$CE	;		      ;MORE SCRATCH DATA
    136  0080		       00 cf	   LDRTEMP7   EQU	$CF	;		      ;MORE SCRATCH DATA
    137  0080		       00 c8	   SOUNDZP    EQU	$C8	;		      ;ZERO PAGE FOR SOUND - SAME AS LOADER
    138  0080
    139  0080		       00 d0	   NEWDIR     EQU	$D0	;		      ;CURRENT JOYSTICK DIRECTION
    140  0080		       00 d1	   OLDDIR     EQU	$D1	;		      ;PREVIOUS DIFFERENT JOYSTICK DIRECTION
    141  0080		       00 d2	   BUTSTATE   EQU	$D2	;		      ;BOTTON STATUS - ON OR 0
    142  0080
    143  0080		       00 d4	   RTSAVE     EQU	$D4	;		      ;A PLACE TO SAVE RTLOCAL - 2 BYTES
    144  0080
    145  0080		       00 d6	   INDRJUMP   EQU	$D6	;		      ;PLACE TO PUT VALUES FOR INDERECT JUMP
    146  0080
    147  0080		       00 d8	   MONWAIT    EQU	$D8	;		      ;WAIT TILL NEXT MONSTER MOVE
    148  0080		       00 d9	   PACWAIT    EQU	$D9	;		      ;WAIT TILL NEXT PAC MOVE
    149  0080		       00 da	   FRTWAIT    EQU	$DA	;		      ;WAIT TILL NEXT FRUIT MOVE
    150  0080		       00 db	   FLSHWAIT   EQU	$DB	;		      ;WAIT TILL NEXT RACK INC
    151  0080		       00 dc	   BLUWAIT    EQU	$DC	;		      ;WAIT TILL END OF BLUE TIME
    152  0080		       00 dd	   SCORWAIT   EQU	$DD	;		      ;WAIT TILL NEXT ITER OF TIGHT LOOP
    153  0080		       00 de	   RESWAIT    EQU	$DE	;		      ;WAIT TILL END OF RESET
    154  0080
    155  0080		       00 e4	   BAKLIVES   EQU	$E4	;		      ;OTHER PLAYER VERSION OF $54-$5F
    156  0080
    157  0080							;*  TIME LAST DOT WAS EATEN
    158  0080		       00 f0	   DOTTIME    EQU	$F0	;		      ;TWO BYTES
    159  0080
    160  0080							;* GLOBAL MONSTER STATE INFO
    161  0080		       00 f2	   SCORTIME   EQU	$F2	;		      ;MONSTER SCORE DELAY COUNTER
    162  0080		       00 f3	   BLUETIME   EQU	$F3	;		      ;BLUE TIME FOR THIS RACK
    163  0080		       00 f4	   M1REL      EQU	$F4	;		      ;MONSTER RELEASE THRESHHOLDS
    164  0080		       00 f5	   M2REL      EQU	$F5
    165  0080		       00 f6	   M3REL      EQU	$F6
    166  0080		       00 f7	   EATNDOTS   EQU	$F7	;		      ;DOTS EATEN SINCE LAST PAC DEATH
    167  0080		       00 f8	   TRELEASE   EQU	$F8	;		      ;COUNTER FOR MONSTER RELEASE
    168  0080		       00 f9	   REDTHRSH   EQU	$F9	;		      ;2 BYTES - RED SPEED THRESHHOLD
    169  0080		       00 fb	   NORMTIME   EQU	$FB	;		      ;2 BYTES - TIME SINCE BOR WHILE NOT BLU
    170  0080		       00 fd	   ISBLUE     EQU	$FD	;		      ;PAC IN BLUE MODE
    171  0080		       00 fe	   GREEDCNT   EQU	$FE	;		      ;MONSTERS EATEN ON THIS POWER DOT
    172  0080		       00 ff	   BORED      EQU	$FF	;		      ;MONSTERS ARE BORED
    173  0080
    174  0080
    175  0080							;*  HIGH RAM - NOTE, 1800-1DFF IS ZEROED IN ZERORAM
    176  0080
    177  0080							;*  HIGH SCORE RAM - SMASHED WHEN HIGH SCORE ROUTINES ARE CALLED
    178  0080		       18 00	   HSCRAM     EQU	$1800	;		    ;$200 BYTES
    179  0080
    180  0080							;*  HIGH SCORE CART DIFFICULTY NAME
    181  0080		       1a 00	   HSCDIF     EQU	$1A00	;		    ;$20 BYTES
    182  0080
    183  0080							;*  SCREEN MAP - THROUGH $1BFF
    184  0080		       18 00	   SCREEN     EQU	$1800	;		    ;SCREEN MAP
    185  0080		       1b 48	   SCORE      EQU	$1B48	;		    ;SCORE MAP - EFFECTIVELY THE 31ST LINE
    186  0080
    187  0080							;*  DOT ARRAYS - THROUGH $1CFF
    188  0080		       1c 00	   DOTARRAY   EQU	$1C00	;		    ;CURRENT PLAYER DOT ARRAY
    189  0080		       1c 80	   BAKDOTS    EQU	$1C80	;		    ;OTHER PLAYER DOT ARRAY
    190  0080
    191  0080							;*  TUNE VARIABLES
    192  0080		       1d 00	   TUNON      EQU	$1D00	;		    ;4 BYTES - WHETHER TUNE IS ACTIVE
    193  0080		       1d 04	   TUNINDEX   EQU	$1D04	;		    ;4 BYTES - WHAT TUNE IS PLAYING
    194  0080		       1d 08	   TUNPRIOR   EQU	$1D08	;		    ;4 BYTES - WHAT THE PRIORITY OF TUNE IS
    195  0080		       1d 0c	   TUNBASE    EQU	$1D0C	;		    ;4 BYTES - BASE ADDRESS OF TUNE DATA
    196  0080		       1d 10	   TUNBASE1   EQU	$1D10	;		    ;4 BYTES - HI BYTE OF BASE ADDRESS
    197  0080		       1d 14	   FREQOFF    EQU	$1D14	;		    ;4 BYTES - OFFSET INTO DATA FOR FREQ"S
    198  0080		       1d 18	   CTLOFF     EQU	$1D18	;		    ;4 BYTES - OFFSET INTO DATA FOR CTL"S
    199  0080		       1d 1c	   VOLOFF     EQU	$1D1C	;		    ;4 BYTES - OFFSET INTO DATA FOR VOL"S
    200  0080		       1d 20	   FREQTIME   EQU	$1D20	;		    ;4 BYTES - NUMBER FRAMES TILL NEXT FREQ
    201  0080		       1d 24	   CTLTIME    EQU	$1D24	;		    ;4 BYTES - NUMBER FRAMES TILL NEXT CTL
    202  0080		       1d 28	   VOLTIME    EQU	$1D28	;		    ;4 BYTES - NUMBER FRAMES TILL NEXT VOL
    203  0080		       1d 2c	   TUNNUM     EQU	$1D2C	;		    ;WHAT TUNE YOU WANT - PARAMETER
    204  0080		       1d 2d	   TUNTEMP0   EQU	$1D2D	;		    ;TEMP VALUE FOR TUNE DRIVER
    205  0080		       1d 2e	   TUNTEMP1   EQU	$1D2E	;		    ;TEMP VALUE FOR TUNE DRIVER
    206  0080		       1d 2f	   TUNOFF     EQU	$1D2F	;		    ;ARE TUNES TURNED OFF?
    207  0080
    208  0080							;*  KERNAL DISPLAY TABLES
    209  0080		       1e 40	   MSADDR     EQU	$1E40	;		    ;$1E BYTES - MS ADDRESS TABLE
    210  0080		       1e 60	   FRTADDR    EQU	$1E60	;		    ;$1E BYTES - FRUIT ADDRESS TABLE
    211  0080		       1e 80	   M0ADDR     EQU	$1E80	;		    ;$1E BYTES - MONSTER 0 ADDRESS TABLE
    212  0080		       1e a0	   M1ADDR     EQU	$1EA0	;		    ;$1E BYTES - MONSTER 1 ADDRESS TABLE
    213  0080		       1e c0	   M2ADDR     EQU	$1EC0	;		    ;$1E BYTES - MONSTER 2 ADDRESS TABLE
    214  0080		       1e e0	   M3ADDR     EQU	$1EE0	;		    ;$1E BYTES - MONSTER 3 ADDRESS TABLE
    215  0080
    216  0080							;*  KERNAL DISPLAY LISTS - MUST BE ON SAME PAGE
    217  0080		       1f 00	   DLIST0     EQU	$1F00	;		    ;$27 BYTES - DISPLAY LIST FOR GAME
    218  0080		       1f 27	   BDLIST0    EQU	$1F27	;		    ;$32 BYTES - DISPLAY LIST FOR INDICATOR
    219  0080		       1f 59	   DLIST1     EQU	$1F59	;		    ;$27 BYTES - DISPLAY LIST FOR GAME
    220  0080		       1f 80	   BDLIST1    EQU	$1F80	;		    ;$32 BYTES - DISPLAY LIST FOR INDICATOR
    221  0080		       1f b2	   TOPDLIST   EQU	$1FB2	;		    ;$07 BYTES - DISPLAY LIST FOR SCORE
    222  0080		       1f b7	   NULDLIST   EQU	$1FB7	;		    ;$02 BYTES - NULL DISPLAY LIST
    223  0080
    224  0080							;*  DISPLAY LIST LIST
    225  0080		       1f c0	   DLL	      EQU	$1FC0	;		    ;$72 BYTES - LIST OF DISPLAY LISTS
    226  0080
    227  0080							;*	    ;*;*;*;*;* HOLE FROM $2040 TO $20FF - SHADOWED IN PAGE 0 ;*;*;*;*;*
    228  0080
    229  0080							;*  PAC STATE VARIABLES
    230  0080		       21 00	   PVPOS      EQU	$2100	;		    ;VERTICAL POSITION
    231  0080		       21 01	   PHPOS      EQU	$2101	;		    ;HORIZONTAL POSITION
    232  0080		       21 02	   PZONE      EQU	$2102	;		    ;ROW
    233  0080		       00 62	   POFF       EQU	VOLIST	;		   ;OFFSET
    234  0080		       21 03	   PCOL       EQU	$2103	;		    ;COLUMN
    235  0080		       21 04	   PDIR       EQU	$2104	;		    ;DIRECTION
    236  0080		       21 05	   PDISP      EQU	$2105	;		    ;DISPLAY STATE
    237  0080		       21 06	   PMOVING    EQU	$2106	;		    ;WHETHER IT IS STOPPED
    238  0080		       21 07	   PTZONE     EQU	$2107	;		    ;ZONE OF LAST TURN
    239  0080		       21 08	   PTCOL      EQU	$2108	;		    ;COLUMN OF LAST TURN
    240  0080		       21 09	   PTEMP      EQU	$2109	;		    ;TEMP VARIABLE
    241  0080		       21 0a	   PDELAY     EQU	$210A	;		    ;DELAY FOR NEXT MOVE
    242  0080		       21 0b	   PTUNNEL    EQU	$210B	;		    ;WHETHER PAC IN TUNNEL
    243  0080
    244  0080							;*  FRUIT STATE VARIABLES
    245  0080		       21 10	   FENABLE    EQU	$2110	;		    ;WHETHER FRUIT IS "ON"
    246  0080		       21 11	   FVPOS      EQU	$2111	;		    ;VERTICAL POSITION
    247  0080		       21 12	   FHPOS      EQU	$2112	;		    ;HORIZONTAL POSITION
    248  0080		       21 13	   FZONE      EQU	$2113	;		    ;ROW
    249  0080		       00 63	   FOFF       EQU	VOLIST+1	;		 ;OFFSET
    250  0080		       21 14	   FCOL       EQU	$2114	;		    ;COLUMN
    251  0080		       21 15	   FDIR       EQU	$2115	;		    ;DIRECTION
    252  0080		       21 16	   FFRUIT     EQU	$2116	;		    ;WHICH FRUIT IT IS
    253  0080		       21 17	   FCOUNT     EQU	$2117	;		    ;WHERE WE ARE RELATIVE TO CHAR CENTER
    254  0080		       21 18	   FGZONE     EQU	$2118	;		    ;GOAL ZONE
    255  0080		       21 19	   FGCOL      EQU	$2119	;		    ;GOAL COLUMN
    256  0080		       21 1a	   FGCOUNT    EQU	$211A	;		    ;WHAT GOAL TO LOOK FOR NEXT
    257  0080		       21 1b	   FSCORE     EQU	$211B	;		    ;IF NON-ZERO, FRUIT IS A SCORE
    258  0080		       21 1c	   FTUNNEL    EQU	$211C	;		    ;WHETHER FRUIT IN TUNNEL
    259  0080		       21 1d	   FSOUND     EQU	$211D	;		    ;SOUND STATE VARIABLE
    260  0080
    261  0080							;*  MONSTER STATE VARIABLES
    262  0080		       21 20	   M0VPOS     EQU	$2120	;		    ;VERTICAL POSITION
    263  0080		       21 24	   M0HPOS     EQU	$2124	;		    ;HORIZONTAL POSITION
    264  0080		       21 28	   M0ZONE     EQU	$2128	;		    ;ROW
    265  0080		       00 64	   M0OFF      EQU	VOLIST+2	;		 ;OFFSET
    266  0080		       21 2c	   M0COL      EQU	$212C	;		    ;COLUMN
    267  0080		       21 30	   M0DIR      EQU	$2130	;		    ;DIRECTION
    268  0080		       21 34	   M0DISP     EQU	$2134	;		    ;DISPLAY STATE
    269  0080		       21 38	   M0STATE    EQU	$2138	;		    ;STATE - ACTIVE, BLUE, EYES, ETC
    270  0080		       21 3c	   M0SLOW     EQU	$213C	;		    ;USED TO SLOW DOWN MONSTERS IN PEN
    271  0080		       21 40	   M0BLUE     EQU	$2140	;		    ;BLUE MODE FLAG
    272  0080		       21 44	   M0SPEED    EQU	$2144	;		    ;MONSTER SPEED
    273  0080		       21 48	   M0TUNNEL   EQU	$2148	;		    ;IS IN TUNNEL
    274  0080		       21 4c	   M0FLIP     EQU	$214C	;		    ;IS ABOUT TO FLIP
    275  0080
    276  0080							;* SPEED REGISTER STUFF
    277  0080		       21 50	   M0SPEED0   EQU	$2150	;		    ;MONSTER SPEED REGISTERS (BY 5 SPEEDS)
    278  0080		       21 55	   M0SPEED1   EQU	$2155
    279  0080		       21 5a	   M0SPEED2   EQU	$215A
    280  0080		       21 5f	   M0SPEED3   EQU	$215F
    281  0080		       21 64	   P0SPEED0   EQU	$2164	;		    ;PAC SPEED REGISTERS (BY 2 SPEEDS)
    282  0080		       21 66	   P0SPEED1   EQU	$2166
    283  0080		       21 68	   P0SPEED2   EQU	$2168
    284  0080		       21 6a	   P0SPEED3   EQU	$216A
    285  0080		       21 6c	   REVWAIT    EQU	$216C	;		    ; REVERSE TIME
    286  0080
    287  0080							;*  VARIABLES FOR ANIMATION DRIVER - OVERLAPS MONSTER VARIABLES
    288  0080		       21 20	   ANAOFF     EQU	$2120	;		    ;OFFSET INTO ANIMATION DATA
    289  0080		       21 21	   ANSOFF     EQU	$2121	;		    ;OFFSET INTO ANIMATION SEGMENT DATA
    290  0080		       21 22	   ANCOUNT    EQU	$2122	;		    ;TICS TILL NEXT SEGMENT
    291  0080		       21 23	   ANSTATE    EQU	$2123	;		    ;VARIOUS USES
    292  0080		       21 24	   ANWHICH    EQU	$2124	;		    ;WHICH ANIMATION WE ARE WORKING ON
    293  0080		       21 25	   ANFRM      EQU	$2125	;		    ;HOW MANY FRAMES PER TIC
    294  0080		       21 30	   A0ENABLE   EQU	$2130	;		    ;WHETHER THIS CHARACTER IS ON
    295  0080		       21 36	   A0VPOS     EQU	$2136	;		    ;VERTICAL POSITION OF THIS CHARACTER
    296  0080		       21 3c	   A0CHAR     EQU	$213C	;		    ;STAMP FOR THIS CHARACTER
    297  0080		       21 42	   A0HPDIF    EQU	$2142	;		    ;INDEX INTO HPOS DELTA TABLE
    298  0080		       21 48	   A0VPDIF    EQU	$2148	;		    ;INDEX INTO VPOS DELTA TABLE
    299  0080		       21 4e	   A0ANDIF    EQU	$214E	;		    ;INDEX INTO ANIMATE CHARACTER TABLE
    300  0080
    301  0080							;*	    ;*;*;*;*;* HOLE FROM $2140 TO $21FF SHADOWED IN PAGE 1 ;*;*;*;*;*
    302  0080
    303  0080							;*  STAMP DATA AREA - STAMPS IN $1X00-$1X2F, FONT IN $1X30-$1XFF
    304  0080		       22 00	   STAMPS     EQU	$2200	;		    ;THROUGH THE END OF RAM - INCLUDES FONT
    305  0080							;*		    0-1;		    BLANK
    306  0080							;*		    2-3;		    BLACK BAR
    307  0080							;*		    4-9;		    MS PAC
    308  0080							;*		    A-21;		    MONSTERS (6 PER)
    309  0080							;*		    22-27;		    FRUIT
    310  0080							;*		    28-2B;		    MS PAC BONUS LIFE INDICATOR (4 PER)
    311  0080							;*		    30-BF;		    FONT
    312  0080							;*		    E0-FF;		    FRUIT INDICATORS (4 PER) - BANANA FIRST
    313  0080
    314  0080
    315  0080							;*
    316  0080							;*  MS CONSTANTS
    317  0080
    318  0080							;*  SOME SCREEN CONSTANTS
    319  0080		       00 18	   LEFTSIDE   EQU	$18	;		      ;LEFT SIDE OF VISIBLE SCREEN
    320  0080		       00 88	   RGHTSIDE   EQU	$88	;		      ;RIGHT SIDE OF VISIBLE SCREEN
    321  0080		       00 00	   TOPSIDE    EQU	$00	;		      ;TOP SIDE OF VISIBLE SCREEN
    322  0080		       00 b0	   OFFSCRN    EQU	$B0	;		      ;AN OFF SCREEN LOCATION TO PUT INVIS.
    323  0080		       00 1b	   LEFTEDGE   EQU	27	;		       ;A MONSTER HERE IS ON LEFT OF SCREEN
    324  0080		       00 13	   LEFTWRAP   EQU	19	;		       ;A MONSTER HERE IS ABOUT TO WRAP AROUND
    325  0080		       00 83	   RGHTEDGE   EQU	131	;		      ;A MONSTER HERE IS ON RIGHT OF SCREEN
    326  0080		       00 8b	   RGHTWRAP   EQU	139	;		      ;A MONSTER HERE IS ABOUT TO WRAP AROUND
    327  0080		       00 78	   WRAPSIZE   EQU	RGHTWRAP-LEFTWRAP	;SIZE OF TUNNEL WRAP
    328  0080							;*
    329  0080		       00 04	   NUMRACKS   EQU	$04	;		      ;NUMBER OF RACKS
    330  0080							;*
    331  0080							;*  MONSTER CONSTANTS
    332  0080		       00 04	   MSTATPEN   EQU	$04	;		      ; IT IS SITTING IN THE PEN ;*
    333  0080		       00 03	   MSTINPEN   EQU	$03	;		      ; EYES TRYING TO GET INTO PEN
    334  0080		       00 02	   MSTLVPEN   EQU	$02	;		      ; MONSTER LEAVING PEN ;*
    335  0080		       00 01	   MSTEYES    EQU	$01	;		      ; EYES MOVING ARROUND
    336  0080		       00 00	   MSTNORM    EQU	$00	;		      ; NORMAL MOVEMENT ;*
    337  0080		       00 00	   SPDNORM    EQU	$00
    338  0080		       00 01	   SPDBLUE    EQU	$01
    339  0080		       00 02	   SPDSLOW    EQU	$02
    340  0080		       00 03	   SPDRED1    EQU	$03
    341  0080		       00 04	   SPDRED2    EQU	$04
    342  0080							;*
    343  0080							;* EVENT DRIVER CONSTANTS
    344  0080		       00 0f	   MAXEVENT   EQU	$F
    345  0080							;*
    346  0080							;*  SCREEN LOCATIONS
    347  0080		       00 4f	   INITHPOS   EQU	$4F	;		      ;HPOS OF INITIAL MS PAC PLACE
    348  0080		       00 81	   INITVPOS   EQU	$81	;		      ;VPOS OF INITIAL MS PAC PLACE
    349  0080							;*
    350  0080							;*  CONSTANT TIMES TO WAIT FOR THINGS
    351  0080		       00 01	   WAITMON    EQU	$01	;		      ;WAIT FOR MONSTER MOVES
    352  0080		       00 01	   WAITPAC    EQU	$01	;		      ;WAIT FOR PAC MOVES
    353  0080		       00 05	   WAITFRT    EQU	$05	;		      ;WAIT FOR FRUIT MOVES
    354  0080		       00 08	   WAITFLSH   EQU	$08	;		      ;WAIT FOR FLASHING POWER DOTS
    355  0080							;*
    356  0080							;*  COLOR DEFINITIONS
    357  0080		       00 00	   BLACK      EQU	$00
    358  0080		       00 5e	   LTPINK     EQU	$5E
    359  0080		       00 0c	   WHITE      EQU	$0C
    360  0080		       00 57	   PINK       EQU	$57
    361  0080		       00 32	   RED	      EQU	$32
    362  0080		       00 e7	   GREEN      EQU	$E7
    363  0080		       00 63	   PURPLE     EQU	$63
    364  0080		       00 98	   BLUE       EQU	$98
    365  0080		       00 1e	   YELLOW     EQU	$1E
    366  0080		       00 ae	   LTBLUE     EQU	$AE
    367  0080		       00 82	   DKBLUE     EQU	$82
    368  0080		       00 15	   BROWN      EQU	$15
    369  0080		       00 eb	   LTGREEN    EQU	$EB
    370  0080		       00 3b	   LTBROWN    EQU	$3B
    371  0080		       00 2a	   GOLD       EQU	$2A
    372  0080		       00 54	   HOTPINK    EQU	$54
    373  0080		       00 35	   ORANGE     EQU	$35
    374  0080							;*
    375  0080							;*  FONT DEFINITIONS
    376  0080		       00 50	   BLNKCHAR   EQU	$50	;		      ;BLANK
    377  0080		       00 51	   DOTCHAR    EQU	$51	;		      ;DOT
    378  0080		       00 52	   EDOTCHAR   EQU	$52	;		      ;ENERGY DOT
    379  0080		       00 3d	   DOORCHAR   EQU	$3D	;		      ;DOOR TO THE PEN
    380  0080		       00 7b	   MARQCHAR   EQU	$7B	;		      ;START OF MARQUEE CHARACTERS
    381  0080							;*
    382  0080							;*  JOYSTICK DIRECTIONS
    383  0080		       00 00	   DRIGHT     EQU	0
    384  0080		       00 01	   DDOWN      EQU	1
    385  0080		       00 02	   DLEFT      EQU	2
    386  0080		       00 03	   DUP	      EQU	3
    387  0080		       00 04	   DCENTER    EQU	4
    388  0080		       00 05	   DDWRIGHT   EQU	5
    389  0080		       00 06	   DDWLEFT    EQU	6
    390  0080		       00 07	   DUPLEFT    EQU	7
    391  0080		       00 08	   DUPRIGHT   EQU	8
    392  0080							;*
    393  0080		       00 00	   P1SCRCOL   EQU	$00	;		      ;COLUMN FOR PLAYER 1 SCORE
    394  0080		       00 15	   P2SCRCOL   EQU	$15	;		      ;COLUMN FOR PLAYER 2 SCORE
    395  0080							;*
    396  0080		       00 ff	   STACKPTR   EQU	$FF	;		      ;WHERE STACK IS ON PAGE 1
    397  0080							;*
    398  0080		       00 48	   GRAPHON    EQU	$48	;		      ;CTL VALUE FOR NORMAL GRAPHICS
    399  0080		       00 ff	   GRAPHOFF   EQU	$FF	;		      ;CTL VALUE FOR GRAPHICS OFF
    400  0080							; END
------- FILE MDOIT.ASM
------- FILE MSCHAR.ASM LEVEL 2 PASS 2
      0  0080					      include	"MSCHAR.ASM"
      1  0080					      processor	6502
      2  0080
      3  0080							;*  MSCHAR.S	     CHARACTER SET FOR MS PAC MAN
      4  0080							;*		    FIRST FILE TO BE LOADED TO MAKE SURE ALL GRAPHICS ON EVEN
      5  0080							;*		    CHARACTERS
      6  0080
      7  0080							;ASEG --not sure what this does --nico
      8  0080
      9  c000				   CARTSTART  ORG	$C000	;		    ; CART STARTS AT C000
     10  c000
     11  c000							;*  MS PAC MAN CHARACTER SET
     12  c000							;*	    MAZE CHARACTERS
     13  c000		       b0 b0 c0 00*MSFONT     DC.B	$B0,$B0,$C0,$00,$00,$00	; 30 -  UPPER LEFT FULL
     14  c006		       00 00 00 c0*	      DC.B	$00,$00,$00,$C0,$B0,$B0	; 31 -  LOWER LEFT FULL
     15  c00c		       b0 b0 b0 b0*	      DC.B	$B0,$B0,$B0,$B0,$B0,$B0	; 32 -  LEFT FULL
     16  c012		       0e 0e 03 00*	      DC.B	$0E,$0E,$03,$00,$00,$00	; 33 -  UPPER RIGHT FULL
     17  c018		       aa aa ff 00*	      DC.B	$AA,$AA,$FF,$00,$00,$00	; 34 -  UPPER HALF FULL
     18  c01e		       aa aa af b0*	      DC.B	$AA,$AA,$AF,$B0,$B0,$B0	; 35 -  LOWER RIGHT EMPTY
     19  c024		       00 00 00 03*	      DC.B	$00,$00,$00,$03,$0E,$0E	; 36 -  LOWER RIGHT FULL
     20  c02a		       00 00 00 ff*	      DC.B	$00,$00,$00,$FF,$AA,$AA	; 37 -  LOWER FULL
     21  c030		       b0 b0 b0 af*	      DC.B	$B0,$B0,$B0,$AF,$AA,$AA	; 38 -  UPPER RIGHT EMPTY
     22  c036		       0e 0e 0e 0e*	      DC.B	$0E,$0E,$0E,$0E,$0E,$0E	; 39 -  RIGHT FULL
     23  c03c		       aa aa fa 0e*	      DC.B	$AA,$AA,$FA,$0E,$0E,$0E	; 3A -  LOWER LEFT EMPTY
     24  c042		       0e 0e 0e fa*	      DC.B	$0E,$0E,$0E,$FA,$AA,$AA	; 3B -  UPPER LEFT EMPTY
     25  c048		       aa aa aa aa*	      DC.B	$AA,$AA,$AA,$AA,$AA,$AA	; 3C -  ALL FULL
     26  c04e
     27  c04e							;* PEN CHARACTERS
     28  c04e		       00 00 00 aa*	      DC.B	$00,$00,$00,$AA,$AA,$AA	; 3D -  PEN ENTRANCE
     29  c054		       b0 b0 f0 00*	      DC.B	$B0,$B0,$F0,$00,$00,$00	; 3E -  LOWER LEFT CORNER
     30  c05a		       00 00 00 f0*	      DC.B	$00,$00,$00,$F0,$B0,$B0	; 3F -  UPPER LEFT CORNER
     31  c060		       b0 b0 b0 b0*	      DC.B	$B0,$B0,$B0,$B0,$B0,$B0	; 40 -  LEFT SIDE
     32  c066		       0e 0e 0f 00*	      DC.B	$0E,$0E,$0F,$00,$00,$00	; 41 -  LOWER RIGHT CORNER
     33  c06c		       aa aa ff 00*	      DC.B	$AA,$AA,$FF,$00,$00,$00	; 42 -  LOWER SIDE
     34  c072		       00 00 00 0f*	      DC.B	$00,$00,$00,$0F,$0E,$0E	; 43 -  UPPER LEFT CORNER
     35  c078		       00 00 00 ff*	      DC.B	$00,$00,$00,$FF,$AA,$AA	; 44 -  UPPER SIDE
     36  c07e		       0e 0e 0e 0e*	      DC.B	$0E,$0E,$0E,$0E,$0E,$0E	; 45 -  RIGHT SIDE
     37  c084
     38  c084							;* 3X5 NUMBERS     - ALTERNATE SET FOR OTHER PLAYER SCORE
     39  c084		       2a 22 22 22*	      DC.B	$2A,$22,$22,$22,$2A,$00	;46  0
     40  c08a		       08 28 08 08*	      DC.B	$08,$28,$08,$08,$2A,$00	;47  1
     41  c090		       2a 02 2a 20*	      DC.B	$2A,$02,$2A,$20,$2A,$00	;48  2
     42  c096		       2a 02 2a 02*	      DC.B	$2A,$02,$2A,$02,$2A,$00	;49  3
     43  c09c		       22 22 2a 02*	      DC.B	$22,$22,$2A,$02,$02,$00	;4A  4
     44  c0a2		       2a 20 2a 02*	      DC.B	$2A,$20,$2A,$02,$2A,$00	;4B  5
     45  c0a8		       2a 20 2a 22*	      DC.B	$2A,$20,$2A,$22,$2A,$00	;4C  6
     46  c0ae		       2a 02 02 02*	      DC.B	$2A,$02,$02,$02,$02,$00	;4D  7
     47  c0b4		       2a 22 2a 22*	      DC.B	$2A,$22,$2A,$22,$2A,$00	;4E  8
     48  c0ba		       2a 22 2a 02*	      DC.B	$2A,$22,$2A,$02,$02,$00	;4F  9
     49  c0c0
     50  c0c0							;* OTHER MAZE CHARACTERS
     51  c0c0		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00	; 50 - BLANK
     52  c0c6		       00 00 14 14*	      DC.B	$00,$00,$14,$14,$00,$00	; 51 - REGULAR DOT.
     53  c0cc		       14 55 55 55*	      DC.B	$14,$55,$55,$55,$55,$14	; 52 - POWER DOT
     54  c0d2		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00	; 53 - POWER DOT FLASHED
     55  c0d8
     56  c0d8							;* 3X5 NUMBERS
     57  c0d8		       3f 33 33 33*	      DC.B	$3F,$33,$33,$33,$3F,$00	;54  0
     58  c0de		       0c 3c 0c 0c*	      DC.B	$0C,$3C,$0C,$0C,$3F,$00	;55  1
     59  c0e4		       3f 03 3f 30*	      DC.B	$3F,$03,$3F,$30,$3F,$00	;56  2
     60  c0ea		       3f 03 3f 03*	      DC.B	$3F,$03,$3F,$03,$3F,$00	;57  3
     61  c0f0		       33 33 3f 03*	      DC.B	$33,$33,$3F,$03,$03,$00	;58  4
     62  c0f6		       3f 30 3f 03*	      DC.B	$3F,$30,$3F,$03,$3F,$00	;59  5
     63  c0fc		       3f 30 3f 33*	      DC.B	$3F,$30,$3F,$33,$3F,$00	;5A  6
     64  c102		       3f 03 03 03*	      DC.B	$3F,$03,$03,$03,$03,$00	;5B  7
     65  c108		       3f 33 3f 33*	      DC.B	$3F,$33,$3F,$33,$3F,$00	;5C  8
     66  c10e		       3f 33 3f 03*	      DC.B	$3F,$33,$3F,$03,$03,$00	;5D  9
     67  c114
     68  c114							;* 3X5 LETTERS
     69  c114		       3f 33 3f 33*	      DC.B	$3F,$33,$3F,$33,$33,$00	;5E	 A
     70  c11a		       3c 33 3c 33*	      DC.B	$3C,$33,$3C,$33,$3C,$00	;5F	 B
     71  c120		       3f 30 30 30*	      DC.B	$3F,$30,$30,$30,$3F,$00	;60	 C
     72  c126		       3c 33 33 33*	      DC.B	$3C,$33,$33,$33,$3C,$00	;61	 D
     73  c12c		       3f 30 3f 30*	      DC.B	$3F,$30,$3F,$30,$3F,$00	;62	 E
     74  c132		       3f 30 3f 30*	      DC.B	$3F,$30,$3F,$30,$30,$00	;63	 F
     75  c138		       3f 30 33 33*	      DC.B	$3F,$30,$33,$33,$3F,$00	;64	 G
     76  c13e		       33 33 3f 33*	      DC.B	$33,$33,$3F,$33,$33,$00	;65	 H
     77  c144		       3f 0c 0c 0c*	      DC.B	$3F,$0C,$0C,$0C,$3F,$00	;66	 I
     78  c14a		       3f 0c 0c 0c*	      DC.B	$3F,$0C,$0C,$0C,$3C,$00	;67	 J
     79  c150		       33 3c 30 3c*	      DC.B	$33,$3C,$30,$3C,$33,$00	;68	 K
     80  c156		       30 30 30 30*	      DC.B	$30,$30,$30,$30,$3F,$00	;69	 L
     81  c15c		       33 3f 33 33*	      DC.B	$33,$3F,$33,$33,$33,$00	;6A	 M
     82  c162		       33 3f 3f 33*	      DC.B	$33,$3F,$3F,$33,$33,$00	;6B	 N
     83  c168		       3f 33 33 33*	      DC.B	$3F,$33,$33,$33,$3F,$00	;6C	 O
     84  c16e		       3f 33 3f 30*	      DC.B	$3F,$33,$3F,$30,$30,$00	;6D	 P
     85  c174		       3f 33 33 3f*	      DC.B	$3F,$33,$33,$3F,$0F,$00	;6E	 Q
     86  c17a		       3f 33 3f 3c*	      DC.B	$3F,$33,$3F,$3C,$33,$00	;6F	 R
     87  c180		       3f 30 3f 03*	      DC.B	$3F,$30,$3F,$03,$3F,$00	;70	 S
     88  c186		       3f 0c 0c 0c*	      DC.B	$3F,$0C,$0C,$0C,$0C,$00	;71	 T
     89  c18c		       33 33 33 33*	      DC.B	$33,$33,$33,$33,$3F,$00	;72	 U
     90  c192		       33 33 33 0c*	      DC.B	$33,$33,$33,$0C,$0C,$00	;73	 V
     91  c198		       33 33 33 3f*	      DC.B	$33,$33,$33,$3F,$33,$00	;74	 W
     92  c19e		       33 33 0c 33*	      DC.B	$33,$33,$0C,$33,$33,$00	;75	 X
     93  c1a4		       33 33 0c 0c*	      DC.B	$33,$33,$0C,$0C,$0C,$00	;76	 Y
     94  c1aa		       3f 03 0c 30*	      DC.B	$3F,$03,$0C,$30,$3F,$00	;77	 Z
     95  c1b0		       0c 0c 0c 00*	      DC.B	$0C,$0C,$0C,$00,$0C,$00	;78	 !
     96  c1b6		       33 33 00 00*	      DC.B	$33,$33,$00,$00,$00,$00	;79	 "
     97  c1bc		       00 00 3f 00*	      DC.B	$00,$00,$3F,$00,$00,$00	;7A	 -
     98  c1c2
     99  c1c2							;*  DOTS FOR MARQUEE
    100  c1c2		       00 00 14 14*	      DC.B	$00,$00,$14,$14,$00,$00	;7B
    101  c1c8		       00 00 14 14*	      DC.B	$00,$00,$14,$14,$00,$00	;7C
    102  c1ce		       00 00 14 14*	      DC.B	$00,$00,$14,$14,$00,$00	;7D
    103  c1d4		       00 00 14 14*	      DC.B	$00,$00,$14,$14,$00,$00	;7E
    104  c1da		       00 00 14 14*	      DC.B	$00,$00,$14,$14,$00,$00	;7F
    105  c1e0		       00 00 3c 3c*	      DC.B	$00,$00,$3C,$3C,$00,$00	;80
    106  c1e6		       00 00 3c 3c*	      DC.B	$00,$00,$3C,$3C,$00,$00	;81
    107  c1ec		       00 00 3c 3c*	      DC.B	$00,$00,$3C,$3C,$00,$00	;82
    108  c1f2
    109  c1f2							;*  STAMPS FOR "MS. PAC-MAN" LOGO
    110  c1f2		       04 05 05 06*	      DC.B	$04,$05,$05,$06,$06,$06	;83
    111  c1f8		       06 06 06 06*	      DC.B	$06,$06,$06,$06,$06,$06	;84
    112  c1fe		       06 55 55 6a*	      DC.B	$06,$55,$55,$6A,$6A,$6A	;85
    113  c204		       6a 6a 6a 6a*	      DC.B	$6A,$6A,$6A,$6A,$6A,$69	;86
    114  c20a		       69 69 65 6a*	      DC.B	$69,$69,$65,$6A,$55,$55	;87
    115  c210		       00 00 40 51*	      DC.B	$00,$00,$40,$51,$95,$A6	;88
    116  c216		       aa aa aa aa*	      DC.B	$AA,$AA,$AA,$AA,$AA,$95	;89
    117  c21c		       aa 55 55 aa*	      DC.B	$AA,$55,$55,$AA,$AA,$96	;8A
    118  c222		       96 96 aa aa*	      DC.B	$96,$96,$AA,$AA,$95,$95	;8B
    119  c228		       95 95 95 95*	      DC.B	$95,$95,$95,$95,$55,$55	;8C
    120  c22e		       04 14 54 65*	      DC.B	$04,$14,$54,$65,$A5,$A5	;8D
    121  c234		       a6 a6 65 65*	      DC.B	$A6,$A6,$65,$65,$66,$66	;8E
    122  c23a		       a6 55 55 51*	      DC.B	$A6,$55,$55,$51,$91,$95	;8F
    123  c240		       96 96 9a 5a*	      DC.B	$96,$96,$9A,$5A,$59,$69	;90
    124  c246		       69 aa aa aa*	      DC.B	$69,$AA,$AA,$AA,$55,$55	;91
    125  c24c		       00 00 00 55*	      DC.B	$00,$00,$00,$55,$55,$AA	;92
    126  c252		       9a 9a a9 6a*	      DC.B	$9A,$9A,$A9,$6A,$A6,$A6	;93
    127  c258		       aa 55 55 90*	      DC.B	$AA,$55,$55,$90,$90,$94	;94
    128  c25e		       a4 a5 a9 a9*	      DC.B	$A4,$A5,$A9,$A9,$69,$6A	;95
    129  c264		       66 a6 56 aa*	      DC.B	$66,$A6,$56,$AA,$55,$55	;96
    130  c26a		       00 00 00 50*	      DC.B	$00,$00,$00,$50,$50,$90	;97
    131  c270		       91 95 56 5a*	      DC.B	$91,$95,$56,$5A,$9A,$9A	;98
    132  c276		       56 45 01 05*	      DC.B	$56,$45,$01,$05,$16,$1A	;99
    133  c27c		       5a 6a 6a 6a*	      DC.B	$5A,$6A,$6A,$6A,$6A,$6A	;9A
    134  c282		       5a 9a 96 95*	      DC.B	$5A,$9A,$96,$95,$51,$50	;9B
    135  c288		       40 50 94 a4*	      DC.B	$40,$50,$94,$A4,$A4,$A4	;9C
    136  c28e		       94 55 55 aa*	      DC.B	$94,$55,$55,$AA,$AA,$AA	;9D
    137  c294		       aa aa a9 a5*	      DC.B	$AA,$AA,$A9,$A5,$A9,$AA	;9E
    138  c29a		       a6 a9 96 aa*	      DC.B	$A6,$A9,$96,$AA,$55,$55	;9F
    139  c2a0		       00 00 50 54*	      DC.B	$00,$00,$50,$54,$A4,$A4	;A0
    140  c2a6		       94 50 40 00*	      DC.B	$94,$50,$40,$00,$40,$50	;A1
    141  c2ac		       94 a4 a4 54*	      DC.B	$94,$A4,$A4,$54,$50,$00	;A2
    142  c2b2		       00 00 55 69*	      DC.B	$00,$00,$55,$69,$55,$00	;A3
    143  c2b8		       10 14 15 19*	      DC.B	$10,$14,$15,$19,$1A,$1A	;A4
    144  c2be		       1a 1a 1a 1a*	      DC.B	$1A,$1A,$1A,$1A,$1A,$1A	;A5
    145  c2c4		       1a 1a 1a 1a*	      DC.B	$1A,$1A,$1A,$1A,$15,$15	;A6
    146  c2ca		       00 00 00 40*	      DC.B	$00,$00,$00,$40,$51,$95	;A7
    147  c2d0		       a6 aa aa aa*	      DC.B	$A6,$AA,$AA,$AA,$AA,$AA	;A8
    148  c2d6		       aa aa 95 aa*	      DC.B	$AA,$AA,$95,$AA,$55,$55	;A9
    149  c2dc		       01 05 15 59*	      DC.B	$01,$05,$15,$59,$69,$A9	;AA
    150  c2e2		       a9 a9 a9 99*	      DC.B	$A9,$A9,$A9,$99,$99,$99	;AB
    151  c2e8		       99 99 59 a9*	      DC.B	$99,$99,$59,$A9,$55,$55	;AC
    152  c2ee		       00 00 01 01*	      DC.B	$00,$00,$01,$01,$01,$05	;AD
    153  c2f4		       06 16 1a 1a*	      DC.B	$06,$16,$1A,$1A,$59,$69	;AE
    154  c2fa		       00 40 50 90*	      DC.B	$00,$40,$50,$90,$90,$90	;AF
    155  c300		       1a 1a 1a 1a*	      DC.B	$1A,$1A,$1A,$1A,$5A,$5A	;B0
    156  c306		       5a 9a 9a 9a*	      DC.B	$5A,$9A,$9A,$9A,$55,$55	;B1
    157  c30c		       00 05 05 46*	      DC.B	$00,$05,$05,$46,$56,$96	;B2
    158  c312		       00 55 55 a9*	      DC.B	$00,$55,$55,$A9,$A9,$A9	;B3
    159  c318
    160  c318
    161  c318							;*  STAMP CHARACTERS
    162  c318							;MS RIGHT, CLOSED
    163  c318		       08 00 0a 50*MSCHAR     DC.B	$08,$00,$0A,$50,$A5,$54,$25,$55,$17,$D5,$15,$55
    164  c324		       15 55 15 55*	      DC.B	$15,$55,$15,$55,$15,$55,$05,$54,$01,$50,$00,$00
    165  c330							;MS RIGHT, HALF OPEN
    166  c330		       08 00 0a 50*	      DC.B	$08,$00,$0A,$50,$A5,$54,$25,$D5,$17,$55,$15,$50
    167  c33c		       15 00 15 50*	      DC.B	$15,$00,$15,$50,$15,$55,$05,$54,$01,$50,$00,$00
    168  c348							;MS RIGHT, OPEN
    169  c348		       08 00 0a 50*	      DC.B	$08,$00,$0A,$50,$A5,$54,$25,$D4,$17,$50,$15,$40
    170  c354		       15 00 15 40*	      DC.B	$15,$00,$15,$40,$15,$50,$05,$54,$01,$50,$00,$00
    171  c360							;MS DOWN, CLOSED
    172  c360		       00 20 05 a0*	      DC.B	$00,$20,$05,$A0,$15,$5A,$55,$58,$55,$D4,$55,$D4
    173  c36c		       55 54 55 54*	      DC.B	$55,$54,$55,$54,$55,$54,$15,$50,$05,$40,$00,$00
    174  c378							;MS DOWN, HALF OPEN
    175  c378		       00 20 05 a0*	      DC.B	$00,$20,$05,$A0,$15,$5A,$55,$58,$55,$D4,$55,$74
    176  c384		       54 54 54 54*	      DC.B	$54,$54,$54,$54,$50,$14,$10,$10,$00,$00,$00,$00
    177  c390							;MS DOWN, OPEN
    178  c390		       00 20 05 a0*	      DC.B	$00,$20,$05,$A0,$15,$5A,$55,$58,$55,$D4,$55,$74
    179  c39c		       54 54 50 14*	      DC.B	$54,$54,$50,$14,$40,$04,$00,$00,$00,$00,$00,$00
    180  c3a8							;MS LEFT, CLOSED
    181  c3a8		       00 20 05 a0*	      DC.B	$00,$20,$05,$A0,$15,$5A,$55,$58,$57,$D4,$55,$54
    182  c3b4		       55 54 55 54*	      DC.B	$55,$54,$55,$54,$55,$54,$15,$50,$05,$40,$00,$00
    183  c3c0							;MS LEFT, HALF OPEN
    184  c3c0		       00 20 05 a0*	      DC.B	$00,$20,$05,$A0,$15,$5A,$57,$58,$55,$D4,$05,$54
    185  c3cc		       00 54 05 54*	      DC.B	$00,$54,$05,$54,$55,$54,$15,$50,$05,$40,$00,$00
    186  c3d8							;MS LEFT, OPEN
    187  c3d8		       00 20 05 a0*	      DC.B	$00,$20,$05,$A0,$15,$5A,$17,$58,$05,$D4,$01,$54
    188  c3e4		       00 54 01 54*	      DC.B	$00,$54,$01,$54,$05,$54,$15,$50,$05,$40,$00,$00
    189  c3f0							;MS UP, CLOSED
    190  c3f0		       00 00 01 50*	      DC.B	$00,$00,$01,$50,$05,$54,$15,$55,$15,$55,$15,$55
    191  c3fc		       17 55 17 55*	      DC.B	$17,$55,$17,$55,$25,$55,$A5,$54,$0A,$50,$08,$00
    192  c408							;MS UP, HALF OPEN
    193  c408		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$04,$04,$14,$05,$15,$15,$15,$15
    194  c414		       1d 55 17 55*	      DC.B	$1D,$55,$17,$55,$25,$55,$A5,$54,$0A,$50,$08,$00
    195  c420							;MS UP, OPEN
    196  c420		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$10,$01,$14,$05,$15,$15
    197  c42c		       1d 55 17 55*	      DC.B	$1D,$55,$17,$55,$25,$55,$A5,$54,$0A,$50,$08,$00
    198  c438
    199  c438
    200  c438							;*  PAC-MAN STAMPS (FOR ANIMATION)
    201  c438							;PAC RIGHT, CLOSED
    202  c438		       00 00 01 50*PACCHAR    DC.B	$00,$00,$01,$50,$05,$54,$15,$55,$15,$55,$15,$55
    203  c444		       15 55 15 55*	      DC.B	$15,$55,$15,$55,$15,$55,$05,$54,$01,$50,$00,$00
    204  c450							;PAC RIGHT, HALF OPEN
    205  c450		       00 00 01 50*	      DC.B	$00,$00,$01,$50,$05,$54,$15,$55,$15,$55,$15,$50
    206  c45c		       15 00 15 50*	      DC.B	$15,$00,$15,$50,$15,$55,$05,$54,$01,$50,$00,$00
    207  c468							;PAC RIGHT, OPEN
    208  c468		       00 00 01 50*	      DC.B	$00,$00,$01,$50,$05,$54,$15,$54,$15,$50,$15,$40
    209  c474		       15 00 15 40*	      DC.B	$15,$00,$15,$40,$15,$50,$05,$54,$01,$50,$00,$00
    210  c480							;PAC DOWN, CLOSED
    211  c480		       00 00 05 40*	      DC.B	$00,$00,$05,$40,$15,$50,$55,$54,$55,$54,$55,$54
    212  c48c		       55 54 55 54*	      DC.B	$55,$54,$55,$54,$55,$54,$15,$50,$05,$40,$00,$00
    213  c498							;PAC DOWN, HALF OPEN
    214  c498		       00 00 05 40*	      DC.B	$00,$00,$05,$40,$15,$50,$55,$54,$55,$54,$55,$54
    215  c4a4		       54 54 54 54*	      DC.B	$54,$54,$54,$54,$50,$14,$10,$10,$00,$00,$00,$00
    216  c4b0							;PAC DOWN, OPEN
    217  c4b0		       00 00 05 40*	      DC.B	$00,$00,$05,$40,$15,$50,$55,$54,$55,$54,$55,$54
    218  c4bc		       54 54 50 14*	      DC.B	$54,$54,$50,$14,$40,$04,$00,$00,$00,$00,$00,$00
    219  c4c8							;PAC LEFT, CLOSED
    220  c4c8		       00 00 05 40*	      DC.B	$00,$00,$05,$40,$15,$50,$55,$54,$55,$54,$55,$54
    221  c4d4		       55 54 55 54*	      DC.B	$55,$54,$55,$54,$55,$54,$15,$50,$05,$40,$00,$00
    222  c4e0							;PAC LEFT, HALF OPEN
    223  c4e0		       00 00 05 40*	      DC.B	$00,$00,$05,$40,$15,$50,$55,$54,$55,$54,$05,$54
    224  c4ec		       00 54 05 54*	      DC.B	$00,$54,$05,$54,$55,$54,$15,$50,$05,$40,$00,$00
    225  c4f8							;PAC LEFT, OPEN
    226  c4f8		       00 00 05 40*	      DC.B	$00,$00,$05,$40,$15,$50,$15,$54,$05,$54,$01,$54
    227  c504		       00 54 01 54*	      DC.B	$00,$54,$01,$54,$05,$54,$15,$50,$05,$40,$00,$00
    228  c510							;PAC UP, CLOSED
    229  c510		       00 00 01 50*	      DC.B	$00,$00,$01,$50,$05,$54,$15,$55,$15,$55,$15,$55
    230  c51c		       15 55 15 55*	      DC.B	$15,$55,$15,$55,$15,$55,$05,$54,$01,$54,$00,$00
    231  c528							;PAC UP, HALF OPEN
    232  c528		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$04,$04,$14,$05,$15,$15,$15,$15
    233  c534		       15 55 15 55*	      DC.B	$15,$55,$15,$55,$15,$55,$05,$54,$01,$50,$00,$00
    234  c540							;PAC UP, OPEN
    235  c540		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$10,$01,$14,$05,$15,$15
    236  c54c		       15 55 15 55*	      DC.B	$15,$55,$15,$55,$15,$55,$05,$54,$01,$50,$00,$00
    237  c558
    238  c558
    239  c558							;* BITMAPS FOR THE MONSTER IN ALL IT"S STATES
    240  c558		       05 50 15 54*NRMMONST   DC.B	$05,$50,$15,$54,$55,$55,$5A,$69,$5B,$6D,$5B,$6D	;V1 RIGHT
    241  c564		       55 55 55 55*	      DC.B	$55,$55,$55,$55,$55,$55,$55,$55,$55,$55,$44,$11
    242  c570		       05 50 15 54*	      DC.B	$05,$50,$15,$54,$55,$55,$5A,$69,$5B,$6D,$5B,$6D	;V2 RIGHT
    243  c57c		       55 55 55 55*	      DC.B	$55,$55,$55,$55,$55,$55,$55,$55,$55,$55,$11,$44
    244  c588		       05 50 15 54*	      DC.B	$05,$50,$15,$54,$55,$55,$55,$55,$69,$69,$69,$69	;V1 DOWN
    245  c594		       7d 7d 55 55*	      DC.B	$7D,$7D,$55,$55,$55,$55,$55,$55,$55,$55,$44,$11
    246  c5a0		       05 50 15 54*	      DC.B	$05,$50,$15,$54,$55,$55,$55,$55,$69,$69,$69,$69	;V2 DOWN
    247  c5ac		       7d 7d 55 55*	      DC.B	$7D,$7D,$55,$55,$55,$55,$55,$55,$55,$55,$11,$44
    248  c5b8		       05 50 15 54*	      DC.B	$05,$50,$15,$54,$55,$55,$69,$A5,$79,$E5,$79,$E5	;V1 LEFT
    249  c5c4		       55 55 55 55*	      DC.B	$55,$55,$55,$55,$55,$55,$55,$55,$55,$55,$44,$11
    250  c5d0		       05 50 15 54*	      DC.B	$05,$50,$15,$54,$55,$55,$69,$A5,$79,$E5,$79,$E5	;V2 LEFT
    251  c5dc		       55 55 55 55*	      DC.B	$55,$55,$55,$55,$55,$55,$55,$55,$55,$55,$11,$44
    252  c5e8		       05 50 15 54*	      DC.B	$05,$50,$15,$54,$7D,$7D,$69,$69,$69,$69,$55,$55	;V1 UP
    253  c5f4		       55 55 55 55*	      DC.B	$55,$55,$55,$55,$55,$55,$55,$55,$55,$55,$44,$11
    254  c600		       05 50 15 54*	      DC.B	$05,$50,$15,$54,$7D,$7D,$69,$69,$69,$69,$55,$55	;V2 UP
    255  c60c		       55 55 55 55*	      DC.B	$55,$55,$55,$55,$55,$55,$55,$55,$55,$55,$11,$44
    256  c618		       05 50 15 54*BLUMONST   DC.B	$05,$50,$15,$54,$55,$55,$69,$69,$69,$69,$55,$55	;V1
    257  c624		       55 55 59 65*	      DC.B	$55,$55,$59,$65,$66,$99,$55,$55,$55,$55,$44,$11
    258  c630		       05 50 15 54*	      DC.B	$05,$50,$15,$54,$55,$55,$69,$69,$69,$69,$55,$55	;V2
    259  c63c		       55 55 59 65*	      DC.B	$55,$55,$59,$65,$66,$99,$55,$55,$55,$55,$11,$44
    260  c648		       00 00 00 00*EYEMONST   DC.B	$00,$00,$00,$00,$00,$00,$0A,$0A,$2B,$2B,$2B,$2B	;RIGHT
    261  c654		       0a 0a 00 00*	      DC.B	$0A,$0A,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    262  c660		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00,$20,$08,$A8,$2A	;DOWN
    263  c66c		       a8 2a fc 3f*	      DC.B	$A8,$2A,$FC,$3F,$00,$00,$00,$00,$00,$00,$00,$00
    264  c678		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$A0,$A0,$E8,$E8,$E8,$E8	;LEFT
    265  c684		       a0 a0 00 00*	      DC.B	$A0,$A0,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    266  c690		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$FC,$3F,$A8,$2A,$A8,$2A,$20,$08	;UP
    267  c69c		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    268  c6a8
    269  c6a8
    270  c6a8							;*  MISCELLANEOUS STAMPS FOR ANIMATION
    271  c6a8		       00 00 28 a0*MISCCHAR   DC.B	$00,$00,$28,$A0,$AA,$A8,$AA,$A8,$AA,$A8,$2A,$A0	;HEART
    272  c6b4		       2a a0 0a 80*	      DC.B	$2A,$A0,$0A,$80,$0A,$80,$02,$00,$02,$00,$00,$00
    273  c6c0		       00 00 00 c0*	      DC.B	$00,$00,$00,$C0,$00,$C0,$00,$C0,$02,$A0,$0A,$A8	;BAG
    274  c6cc		       0a a8 0a a8*	      DC.B	$0A,$A8,$0A,$A8,$0A,$A8,$0A,$A8,$02,$A0,$00,$00
    275  c6d8		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00,$01,$40,$05,$50	;JUNIOR
    276  c6e4		       01 50 00 50*	      DC.B	$01,$50,$00,$50,$01,$50,$05,$50,$01,$40,$00,$00
    277  c6f0		       00 00 00 03*	      DC.B	$00,$00,$00,$03,$00,$0F,$00,$3F,$15,$7F,$00,$3F	;STORK HEAD
    278  c6fc		       00 0f 00 00*	      DC.B	$00,$0F,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    279  c708		       00 00 c0 00*	      DC.B	$00,$00,$C0,$00,$B0,$FF,$FF,$FF,$FF,$FF,$FF,$FF	;BODY DOWN
    280  c714		       cf ff 03 ff*	      DC.B	$CF,$FF,$03,$FF,$00,$FF,$00,$3F,$00,$0F,$00,$00
    281  c720		       00 00 00 0f*	      DC.B	$00,$00,$00,$0F,$00,$3F,$C0,$FF,$B3,$FF,$FF,$FF	;BODY UP
    282  c72c		       ff ff ff ff*	      DC.B	$FF,$FF,$FF,$FF,$C3,$FF,$00,$00,$00,$00,$00,$00
    283  c738		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$C0,$00,$FF,$00,$FF,$F0,$FF,$FC	;TAIL DOWN
    284  c744		       fc 00 c0 00*	      DC.B	$FC,$00,$C0,$00,$C0,$00,$F0,$00,$FC,$00,$FF,$00
    285  c750		       ff 00 fc 00*	      DC.B	$FF,$00,$FC,$00,$F0,$00,$F0,$00,$F0,$00,$FF,$00	;TAIL UP
    286  c75c		       ff f0 ff fc*	      DC.B	$FF,$F0,$FF,$FC,$FC,$00,$00,$00,$00,$00,$00,$00
    287  c768
    288  c768
    289  c768							;*  STAMPS FOR FRUIT
    290  c768		       00 00 3c 3c*FRUITCHR   DC.B	$00,$00,$3C,$3C,$C3,$C3,$FF,$FF,$33,$CC,$F3,$CF	;TEDDY BEAR
    291  c774		       ff ff fc 3f*	      DC.B	$FF,$FF,$FC,$3F,$FC,$3F,$3F,$FC,$0F,$F0,$00,$00
    292  c780		       00 00 3c 00*	      DC.B	$00,$00,$3C,$00,$C3,$C0,$03,$30,$03,$0C,$0C,$1C	;CHERRIES
    293  c78c		       30 55 34 65*	      DC.B	$30,$55,$34,$65,$55,$14,$65,$00,$14,$00,$00,$00
    294  c798		       00 00 0f f0*	      DC.B	$00,$00,$0F,$F0,$17,$D4,$55,$65,$56,$55,$65,$59	;SWRAWBERRY
    295  c7a4		       55 95 19 54*	      DC.B	$55,$95,$19,$54,$15,$64,$06,$50,$01,$40,$00,$00
    296  c7b0		       02 3c 02 ff*	      DC.B	$02,$3C,$02,$FF,$02,$3C,$06,$50,$15,$54,$55,$55	;ORANGE
    297  c7bc		       55 55 55 55*	      DC.B	$55,$55,$55,$55,$55,$55,$15,$54,$05,$50,$00,$00
    298  c7c8		       00 00 3c 3c*	      DC.B	$00,$00,$3C,$3C,$CF,$F2,$C3,$C3,$82,$C3,$CC,$33	;PRETZEL
    299  c7d4		       cc 3b 38 0c*	      DC.B	$CC,$3B,$38,$0C,$30,$0C,$CF,$B3,$C3,$C3,$00,$00
    300  c7e0		       00 00 00 f0*	      DC.B	$00,$00,$00,$F0,$03,$00,$13,$40,$55,$54,$55,$54	;APPLE
    301  c7ec		       55 54 65 54*	      DC.B	$55,$54,$65,$54,$65,$54,$19,$50,$05,$40,$00,$00
    302  c7f8		       00 00 00 3c*	      DC.B	$00,$00,$00,$3C,$00,$C0,$01,$C0,$05,$50,$05,$50	;PEAR
    303  c804		       05 50 19 54*	      DC.B	$05,$50,$19,$54,$19,$54,$16,$54,$05,$50,$00,$00
    304  c810		       00 00 00 01*	      DC.B	$00,$00,$00,$01,$00,$01,$00,$01,$00,$05,$00,$15	;BANANA
    305  c81c		       00 55 01 54*	      DC.B	$00,$55,$01,$54,$05,$54,$15,$50,$55,$00,$00,$00
    306  c828
    307  c828
    308  c828							;* NUMBERS FOR EATING FRUIT AND MONSTERS
    309  c828		       00 00 00 00*FRUITNUM   DC.B	$00,$00,$00,$00,$3F,$00,$30,$00,$3F,$00,$03,$FC	;50
    310  c834		       3f cc 00 cc*	      DC.B	$3F,$CC,$00,$CC,$00,$CC,$00,$FC,$00,$00,$00,$00
    311  c840		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$30,$00,$F0,$00,$30,$00,$33,$F0	;100
    312  c84c		       ff 30 03 3f*	      DC.B	$FF,$30,$03,$3F,$03,$F3,$00,$33,$00,$3F,$00,$00
    313  c858		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$3F,$00,$33,$03,$F3,$03,$3F	;200
    314  c864		       ff 30 0f f0*	      DC.B	$FF,$30,$0F,$F0,$FC,$00,$C0,$00,$FC,$00,$00,$00
    315  c870		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$FC,$00,$C0,$00,$FC,$00,$0F,$F0	;500
    316  c87c		       ff 30 03 3f*	      DC.B	$FF,$30,$03,$3F,$03,$F3,$00,$33,$00,$3F,$00,$00
    317  c888		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$3F,$00,$33,$03,$F3,$03,$3F	;700
    318  c894		       ff 30 0f f0*	      DC.B	$FF,$30,$0F,$F0,$0C,$00,$0C,$00,$0C,$00,$00,$00
    319  c8a0		       00 00 0c 00*	      DC.B	$00,$00,$0C,$00,$3C,$00,$0C,$00,$0C,$00,$3F,$C0	;1000
    320  c8ac		       0c c0 0f f0*	      DC.B	$0C,$C0,$0F,$F0,$03,$30,$03,$FC,$00,$CC,$00,$FC
    321  c8b8		       00 00 00 fc*	      DC.B	$00,$00,$00,$FC,$00,$CC,$03,$FC,$03,$30,$0F,$F0	;2000
    322  c8c4		       0c c0 3f c0*	      DC.B	$0C,$C0,$3F,$C0,$03,$00,$3F,$00,$30,$00,$3F,$00
    323  c8d0		       00 00 3f 00*	      DC.B	$00,$00,$3F,$00,$30,$00,$3F,$00,$03,$00,$3F,$C0	;5000
    324  c8dc		       0c c0 0f f0*	      DC.B	$0C,$C0,$0F,$F0,$03,$30,$03,$FC,$00,$CC,$00,$FC
    325  c8e8
    326  c8e8		       00 00 00 00*MONSTNUM   DC.B	$00,$00,$00,$00,$00,$2A,$00,$22,$02,$A2,$02,$2A	;200
    327  c8f4		       aa 20 0a a0*	      DC.B	$AA,$20,$0A,$A0,$A8,$00,$80,$00,$A8,$00,$00,$00
    328  c900		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$88,$00,$88,$00,$A8,$00,$0A,$A0	;400
    329  c90c		       0a 20 02 2a*	      DC.B	$0A,$20,$02,$2A,$02,$A2,$00,$22,$00,$2A,$00,$00
    330  c918		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$2A,$00,$22,$02,$A2,$02,$2A	;800
    331  c924		       aa 20 8a a0*	      DC.B	$AA,$20,$8A,$A0,$A8,$00,$88,$00,$A8,$00,$00,$00
    332  c930		       20 00 a0 00*	      DC.B	$20,$00,$A0,$00,$20,$00,$2A,$80,$A8,$00,$0A,$80	;1600
    333  c93c		       08 80 0a a0*	      DC.B	$08,$80,$0A,$A0,$02,$20,$02,$A8,$00,$88,$00,$A8
    334  c948
    335  c948							;* STAMPS FOR CLAPBOARD
    336  c948		       3f ff 33 c3*CLAPBRD    DC.B	$3F,$FF,$33,$C3,$3F,$0F,$3F,$FF,$30,$00,$30,$00	;BASE C0
    337  c954		       30 00 30 00*	      DC.B	$30,$00,$30,$00,$30,$00,$30,$00,$30,$00,$3F,$FF
    338  c960		       ff ff c3 c3*	      DC.B	$FF,$FF,$C3,$C3,$0F,$0F,$FF,$FF,$00,$00,$00,$00	;BASE C1
    339  c96c		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$FF,$FF
    340  c978		       ff ff c3 c3*	      DC.B	$FF,$FF,$C3,$C3,$0F,$0F,$FF,$FF,$00,$03,$00,$03	;BASE C2
    341  c984		       00 03 00 03*	      DC.B	$00,$03,$00,$03,$00,$03,$00,$03,$00,$03,$FF,$FF
    342  c990		       3f ff 33 c3*CLAPBRDD   DC.B	$3F,$FF,$33,$C3,$3F,$0F,$3F,$FF,$00,$00,$00,$00	;DOWN C0
    343  c99c		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    344  c9a8		       ff ff c3 c3*	      DC.B	$FF,$FF,$C3,$C3,$0F,$0F,$FF,$FF,$00,$00,$00,$00	;DOWN C1
    345  c9b4		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    346  c9c0		       ff ff c3 c3*	      DC.B	$FF,$FF,$C3,$C3,$0F,$0F,$FF,$FF,$00,$00,$00,$00	;DOWN C2
    347  c9cc		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00
    348  c9d8		       00 03 00 0c*CLAPBRDU   DC.B	$00,$03,$00,$0C,$00,$30,$00,$F0,$03,$33,$0C,$3C	;UP C0
    349  c9e4		       3c 30 cc c0*	      DC.B	$3C,$30,$CC,$C0,$CF,$00,$CC,$00,$30,$00,$00,$00
    350  c9f0		       00 03 00 0c*	      DC.B	$00,$03,$00,$0C,$00,$3C,$00,$CC,$03,$0F,$0F,$0C	;UP C1
    351  c9fc		       33 30 c3 c0*	      DC.B	$33,$30,$C3,$C0,$C3,$00,$CC,$00,$F0,$00,$C0,$00
    352  ca08		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00,$00	;UP C2
    353  ca14		       00 00 f0 00*	      DC.B	$00,$00,$F0,$00,$30,$00,$3C,$00,$30,$00,$C0,$00
    354  ca20
    355  ca20							; END
------- FILE MDOIT.ASM
     46  ca20					      align	2
------- FILE MAIN.ASM LEVEL 2 PASS 2
      0  ca20					      include	"MAIN.ASM"
      1  ca20					      processor	6502
      2  ca20
      3  ca20							;*	    MAIN ROUTINE FOR MS PAC MAN
      4  ca20
      5  ca20		       a9 17	   MAIN       LDA	#$17	;		     ;LOCK IN MARIA MODE
      6  ca22		       85 01		      STA	INPTCTRL
      7  ca24		       78		      SEI
      8  ca25		       d8		      CLD
      9  ca26		       a2 ff		      LDX	#STACKPTR
     10  ca28		       9a		      TXS		;			      ;SET STACK POINTER
     11  ca29		       20 88 cc 	      JSR	SCREENOF	;		 ;TURN GRAPHICS OFF
     12  ca2c		       a9 00		      LDA	#$00
     13  ca2e		       85 38		      STA	OFFSET	;		   ;FOR FUTURE EXPANSION
     14  ca30		       85 01		      STA	INPTCTRL	;		 ;TO MAKE JOYSTICKS NOT FREEZE
     15  ca32		       20 97 cb 	      JSR	STRTINIT	;		 ;ENTRY TO MS PAC MAN
     16  ca35
     17  ca35		       20 46 e6    ATTRACT    JSR	DOTITLE	;		  ;START ATTRACT MODE
     18  ca38		       20 c5 e8 	      JSR	HOLDSCOR	;		 ;SHOW HI SCORE TABLES
     19  ca3b		       a9 01		      LDA	#$01
     20  ca3d		       85 42		      STA	AUTOPLAY
     21  ca3f
     22  ca3f		       20 ed cb 	      JSR	GAMEINIT
     23  ca42		       4c 64 ca 	      JMP	AGAIN
     24  ca45
     25  ca45		       a9 00	   START      LDA	#$00	;		     ;START GAME PLAY
     26  ca47		       85 42		      STA	AUTOPLAY
     27  ca49		       20 ed cb 	      JSR	GAMEINIT
     28  ca4c		       20 55 f8 	      JSR	READY	;		    ;PUT PLAYER READY UP
     29  ca4f		       a9 00		      LDA	#$00	;		     ;SET UP STARTING TUNE
     30  ca51		       20 43 ea 	      JSR	DOTUNE
     31  ca54		       a9 01		      LDA	#$01
     32  ca56		       20 43 ea 	      JSR	DOTUNE
     33  ca59		       20 25 cb    STLOOP     JSR	SEEBNORM
     34  ca5c		       ad 00 1d 	      LDA	TUNON	;		    ;WAIT TILL TUNE OVER
     35  ca5f		       d0 f8		      BNE	STLOOP
     36  ca61		       20 79 f8 	      JSR	WCLEAR	;		   ;GET RID OF PLAYER READY
     37  ca64
     38  ca64		       a5 a2	   AGAIN      LDA	GAMEOVER	;		 ;SEE IF GAME OVER
     39  ca66		       f0 03		      BEQ	AGSKP0
     40  ca68		       4c 95 ca 	      JMP	ENDGAME
     41  ca6b		       20 25 cb    AGSKP0     JSR	SEEBNORM	;		 ;SEE IF SELECT OR START HIT
     42  ca6e		       a5 a1		      LDA	RTLOCAL+1	;		;CHECK EVENTS AGAINST TIMERS
     43  ca70		       c5 d9		      CMP	PACWAIT
     44  ca72		       30 05		      BMI	AGSKP1
     45  ca74		       20 60 d0 	      JSR	MOVEPAC
     46  ca77		       a5 a1		      LDA	RTLOCAL+1
     47  ca79		       c5 da	   AGSKP1     CMP	FRTWAIT
     48  ca7b		       30 05		      BMI	AGSKP2
     49  ca7d		       20 39 d4 	      JSR	MOVEFRT
     50  ca80		       a5 a1		      LDA	RTLOCAL+1
     51  ca82		       c5 db	   AGSKP2     CMP	FLSHWAIT
     52  ca84		       30 05		      BMI	AGSKP3
     53  ca86		       20 da f7 	      JSR	FLASHDOT
     54  ca89		       a5 a1		      LDA	RTLOCAL+1
     55  ca8b		       c5 d8	   AGSKP3     CMP	MONWAIT
     56  ca8d		       30 03		      BMI	AGOUT
     57  ca8f		       20 90 d6 	      JSR	MONSTER
     58  ca92				   AGOUT
     59  ca92		       4c 64 ca 	      JMP	AGAIN
     60  ca95
     61  ca95
     62  ca95							;*  END OF GAME HANDLER
     63  ca95		       a9 00	   ENDGAME    LDA	#$00	;		     ;SET CONTROL TO JOYSTICK 0
     64  ca97		       85 45		      STA	PLAYER
     65  ca99		       a5 9c		      LDA	HSCHERE	;		  ;IF HSC HERE, DON"T WASTE TIME WITH MSG
     66  ca9b		       d0 13		      BNE	EGOUT
     67  ca9d
     68  ca9d		       20 60 f8 	      JSR	ALLOVER	;		  ;WRITE GAME OVER
     69  caa0		       a5 a0		      LDA	RTLOCAL	;		  ;WAIT A BIT BEFORE TITLE PAGE
     70  caa2		       18		      CLC
     71  caa3		       69 01		      ADC	#$01
     72  caa5		       85 c0		      STA	TEMP16
     73  caa7		       20 0b cb    EGJMP0     JSR	SEEBENDG	;		 ;GAME OVER - WAIT FOR SOMETHING
     74  caaa		       a5 c0		      LDA	TEMP16
     75  caac		       c5 a0		      CMP	RTLOCAL
     76  caae		       10 f7		      BPL	EGJMP0
     77  cab0		       20 e3 e8    EGOUT      JSR	HNEWSCOR	;		 ;SEE IF ANY SCORES QUALIFY FOR HI SCORE
     78  cab3		       4c 91 cb 	      JMP	DOATRACT	;		 ;AND GO BACK TO ATTRACT MODE
     79  cab6
     80  cab6
     81  cab6							;*  PAUSE BUTTON HAS BEEN HIT, WAIT TILL BUTTON HIT AGAIN
     82  cab6		       a5 a0	   PAUSE      LDA	RTLOCAL	;		  ;STACK CLOCK
     83  cab8		       48		      PHA
     84  cab9		       a5 a1		      LDA	RTLOCAL+1
     85  cabb		       48		      PHA
     86  cabc		       8a		      TXA		;			      ;STORE X
     87  cabd		       48		      PHA
     88  cabe
     89  cabe		       20 14 ea 	      JSR	STOPTUN	;		  ;TURN SOUNDS OFF
     90  cac1
     91  cac1		       a6 a0		      LDX	RTLOCAL	;		  ;SET UP TIMER FOR GRAPHICS OFF
     92  cac3		       ca		      DEX
     93  cac4		       20 44 cb    PLOOPA     JSR	SEEBALL	;		  ;SEE IF RESET OR SELECT HIT
     94  cac7		       e4 a0		      CPX	RTLOCAL
     95  cac9		       d0 03		      BNE	PLJMP0
     96  cacb		       20 ab cc 	      JSR	SCREENNO	;		 ;TOO LONG A WAIT, TURN GRAPHICS OFF
     97  cace
     98  cace		       20 8a f5    PLJMP0     JSR	GETJOY	;		   ;SEE IF USER WANTS GRAPHICS BACK ON
     99  cad1		       a5 d2		      LDA	BUTSTATE	;		 ;IS BUTTON PUSHED?
    100  cad3		       d0 06		      BNE	PLGRAFON
    101  cad5		       a5 d0		      LDA	NEWDIR	;		   ;IS JOYSTICK MOVED?
    102  cad7		       c9 04		      CMP	#DCENTER
    103  cad9		       f0 06		      BEQ	PLJMP1
    104  cadb		       20 b6 cc    PLGRAFON   JSR	SCREENON	;		 ;TURN GRAPHICS ON IF NEEDED
    105  cade		       a6 a0		      LDX	RTLOCAL	;		  ;RESET TIMER
    106  cae0		       ca		      DEX
    107  cae1
    108  cae1		       a5 90	   PLJMP1     LDA	DBPAUSE	;		  ;SEE IF WE ARE DEBOUNCING PAUSE
    109  cae3		       f0 0c		      BEQ	PLNORM
    110  cae5		       ad 82 02 	      LDA	SWCHB	;		    ;SEE IF IT HAS BEEN RELEASED
    111  cae8		       29 08		      AND	#$08
    112  caea		       49 08		      EOR	#$08
    113  caec		       85 90		      STA	DBPAUSE	;		  ;FALL THROUGH TO SEEBALL
    114  caee		       4c c4 ca 	      JMP	PLOOPA
    115  caf1
    116  caf1		       ad 82 02    PLNORM     LDA	SWCHB	;		    ;SEE IF PAUSE BUTTON HIT
    117  caf4		       29 08		      AND	#$08
    118  caf6		       d0 cc		      BNE	PLOOPA	;		   ;IF NOT, TRY AGAIN
    119  caf8
    120  caf8		       20 20 ea 	      JSR	STARTTUN	;		 ;TURN TUNES ON
    121  cafb		       20 b6 cc 	      JSR	SCREENON	;		 ;TURN GRAPHICS ON IF NEEDED
    122  cafe		       68		      PLA		;			      ;UNSTACK X
    123  caff		       aa		      TAX
    124  cb00		       68		      PLA		;			      ;UNSTACK CLOCK
    125  cb01		       85 a1		      STA	RTLOCAL+1
    126  cb03		       68		      PLA
    127  cb04		       85 a0		      STA	RTLOCAL
    128  cb06		       a9 01		      LDA	#$01
    129  cb08		       85 90		      STA	DBPAUSE	;		  ;AND, OF COURSE, DEBOUNCE PAUSE SWITCH
    130  cb0a		       60		      RTS
    131  cb0b
    132  cb0b
    133  cb0b							;*  THIS ROUTINE CHECKS TO SEE IF TIME TO START OUT END GAME
    134  cb0b		       20 8a f5    SEEBENDG   JSR	GETJOY	;		   ;SEE IF BUTTON PUSHED
    135  cb0e		       a5 d2		      LDA	BUTSTATE
    136  cb10		       d0 73		      BNE	DOSTART
    137  cb12		       4c 44 cb 	      JMP	SEEBALL	;		  ;CHECK FOR SELECT AND RESET
    138  cb15
    139  cb15
    140  cb15							;*  THIS ROUTINE CHECKS TO SEE IF TIME TO START OUT OF ATTRACT
    141  cb15		       20 8a f5    SEEBAUTO   JSR	GETJOY	;		   ;SEE IF BUTTON PUSHED
    142  cb18		       a5 d2		      LDA	BUTSTATE
    143  cb1a		       d0 69		      BNE	DOSTART
    144  cb1c		       a5 d0		      LDA	NEWDIR	;		   ;SEE IF JOYSTICK MOVED
    145  cb1e		       c9 04		      CMP	#DCENTER
    146  cb20		       d0 69		      BNE	DOMENU
    147  cb22		       4c 44 cb 	      JMP	SEEBALL	;		  ;CHECK FOR SELECT AND RESET
    148  cb25
    149  cb25
    150  cb25							;*  THIS ROUTINE CHECKS TO SEE IF SELECT OR RESET HIT
    151  cb25		       a5 42	   SEEBNORM   LDA	AUTOPLAY	;		 ;SEE IF AUTOPLAY
    152  cb27		       d0 ec		      BNE	SEEBAUTO
    153  cb29		       a5 90		      LDA	DBPAUSE	;		  ;SEE IF WE ARE DEBOUNCING PAUSE
    154  cb2b		       d0 0e		      BNE	SBNDBPSE
    155  cb2d		       ad 82 02 	      LDA	SWCHB	;		    ;SEE IF PAUSE BUTTON HIT
    156  cb30		       29 08		      AND	#$08
    157  cb32		       d0 10		      BNE	SEEBALL	;		  ;IF NOT, FALL THROUGH TO SEEBALL CODE
    158  cb34		       a9 01		      LDA	#$01
    159  cb36		       85 90		      STA	DBPAUSE
    160  cb38		       4c b6 ca 	      JMP	PAUSE	;		    ;WAIT TILL WE"RE UN-PAUSED
    161  cb3b
    162  cb3b		       ad 82 02    SBNDBPSE   LDA	SWCHB	;		    ;SEE IF IT HAS BEEN RELEASED
    163  cb3e		       29 08		      AND	#$08
    164  cb40		       49 08		      EOR	#$08
    165  cb42		       85 90		      STA	DBPAUSE	;		  ;FALL THROUGH TO SEEBALL
    166  cb44
    167  cb44
    168  cb44							;*  THIS LOOKS FOR SELECT AND RESET - USED BY ALL
    169  cb44		       a5 88	   SEEBALL    LDA	DBSELECT	;		 ;SEE IF WE ARE DEBOUNCING SELECT
    170  cb46		       d0 0e		      BNE	SBADBSEL
    171  cb48		       ad 82 02 	      LDA	SWCHB	;		    ;SEE IF SELECT SWITCH HIT
    172  cb4b		       29 02		      AND	#$02	;		     ;SEE IF BIT 1 OFF
    173  cb4d		       d0 10		      BNE	SBRESET
    174  cb4f		       a9 01		      LDA	#$01	;		     ;SET DEBOUNCE VAR
    175  cb51		       85 88		      STA	DBSELECT
    176  cb53		       4c 8b cb 	      JMP	DOMENU	;		   ;SELECT
    177  cb56
    178  cb56		       ad 82 02    SBADBSEL   LDA	SWCHB	;		    ;SEE IF IT HAS BEEN RELEASED
    179  cb59		       29 02		      AND	#$02
    180  cb5b		       49 02		      EOR	#$02
    181  cb5d		       85 88		      STA	DBSELECT
    182  cb5f
    183  cb5f		       a5 8c	   SBRESET    LDA	DBRESET	;		  ;SEE IF WE ARE DEBOUNCING RESET
    184  cb61		       d0 0e		      BNE	SBADBRES
    185  cb63		       ad 82 02 	      LDA	SWCHB	;		    ;SEE IF RESET SWITCH HIT
    186  cb66		       29 01		      AND	#$01	;		     ;SEE IF BIT 0 OFF
    187  cb68		       d0 10		      BNE	SBAOUT
    188  cb6a		       a9 01		      LDA	#$01	;		     ;SET DEBOUNCE VAR
    189  cb6c		       85 8c		      STA	DBRESET
    190  cb6e		       4c 85 cb 	      JMP	DOSTART	;		  ;START
    191  cb71
    192  cb71		       ad 82 02    SBADBRES   LDA	SWCHB	;		    ;SEE IF IT HAS BEEN RELEASED
    193  cb74		       29 01		      AND	#$01
    194  cb76		       49 01		      EOR	#$01
    195  cb78		       85 8c		      STA	DBRESET
    196  cb7a
    197  cb7a		       60	   SBAOUT     RTS
    198  cb7b
    199  cb7b
    200  cb7b							;*  THIS ROUTINE CHECKS TO SEE IF TIME TO START OUT OF THE MENU
    201  cb7b		       20 8a f5    SEEBMENU   JSR	GETJOY	;		   ;SEE IF BUTTON PUSHED
    202  cb7e		       a5 d2		      LDA	BUTSTATE
    203  cb80		       f0 dd		      BEQ	SBRESET
    204  cb82		       4c 85 cb 	      JMP	DOSTART
    205  cb85
    206  cb85
    207  cb85							;*  START A GAME
    208  cb85		       a2 ff	   DOSTART    LDX	#STACKPTR	;		;START THE GAME
    209  cb87		       9a		      TXS
    210  cb88		       4c 45 ca 	      JMP	START
    211  cb8b
    212  cb8b
    213  cb8b							;*  GO TO THE MENU
    214  cb8b		       a2 ff	   DOMENU     LDX	#STACKPTR	;		;DO THE MENU
    215  cb8d		       9a		      TXS
    216  cb8e		       4c d1 e7 	      JMP	MENU
    217  cb91
    218  cb91
    219  cb91							;*  GO TO THE TITLE PAGE
    220  cb91		       a2 ff	   DOATRACT   LDX	#STACKPTR	;		;GO TO ATTRACT MODE
    221  cb93		       9a		      TXS
    222  cb94		       4c 35 ca 	      JMP	ATTRACT
    223  cb97
    224  cb97							; END
------- FILE MDOIT.ASM
------- FILE INIT.ASM LEVEL 2 PASS 2
      0  cb97					      include	"INIT.ASM"
      1  cb97					      processor	6502
      2  cb97
      3  cb97							;*  INIT	    INITIALIZATION ROUTINES FOR MS PAC MAN
      4  cb97
      5  cb97							;*  DO THE INITIALIZATION NEEDED AT THE VERY MINIMUM.
      6  cb97		       20 b7 cd    STRTINIT   JSR	ZERORAM	;		  ;ZERO RAM, TURN OFF DISPLAY
      7  cb9a		       00 40 00 00*	      DC.S	$40,#0,#$60	;	      ;NULL OUT LOWER PART OF PAGE ZERO
      8  cba0		       20 cd cd 	      JSR	ZEROSCOR
      9  cba3
     10  cba3		       a2 1f		      LDX	#$1F	;		     ;RANDOMIZE SEED
     11  cba5		       55 00	   SIRRLOOP   EOR	$00,X
     12  cba7		       ca		      DEX
     13  cba8		       10 fb		      BPL	SIRRLOOP
     14  cbaa		       85 43		      STA	NEWRAND
     15  cbac
     16  cbac		       a2 00		      LDX	#$00	;		     ;GET JOYSTICK STATE SET UP
     17  cbae		       86 01		      STX	INPTCTRL
     18  cbb0		       ad 00 39 	      LDA	$3900	;		    ;SEE IF HI SCORE CART IS THERE
     19  cbb3		       c9 c6		      CMP	#$C6
     20  cbb5		       d0 08		      BNE	NOHSC
     21  cbb7		       ad 04 39 	      LDA	$3904
     22  cbba		       c9 fe		      CMP	#$FE
     23  cbbc		       d0 01		      BNE	NOHSC
     24  cbbe		       e8		      INX
     25  cbbf		       86 9c	   NOHSC      STX	HSCHERE
     26  cbc1
     27  cbc1		       a9 00		      LDA	#$00
     28  cbc3		       8d 81 02 	      STA	CTLSWA	;		   ;INITIALIZE JOYSTICKS AND SWITCHES
     29  cbc6		       8d 83 02 	      STA	CTLSWB
     30  cbc9		       20 d1 cb 	      JSR	OURINIT	;		  ;INIT IT OUR WAY
     31  cbcc
     32  cbcc		       a9 01		      LDA	#$01
     33  cbce		       85 40		      STA	STLEVEL	;		  ;START DEFAULT AT CHERRY LEVEL
     34  cbd0
     35  cbd0		       60		      RTS
     36  cbd1
     37  cbd1
     38  cbd1							;*  INITIALIZE STATE OUR WAY - USED ALSO AFTER HSC STUFF
     39  cbd1		       20 ab cc    OURINIT    JSR	SCREENNO	;		 ;TURN SCREEN OFF
     40  cbd4
     41  cbd4		       a9 00		      LDA	#BLACK
     42  cbd6		       85 20		      STA	BACKGRND	;		 ;PUT BACKGROUND TO BLACK
     43  cbd8		       20 5b cd 	      JSR	LOADDLST	;		 ;INITIALIZE DISPLAY LISTS
     44  cbdb
     45  cbdb		       20 15 ce 	      JSR	LOADFONT	;		 ;LOAD FONT
     46  cbde		       a9 22		      LDA	#>STAMPS
     47  cbe0		       85 34		      STA	CHARBASE	;		 ;INSTALL THE MS PAC MAN CHARACTERS
     48  cbe2		       a9 c0		      LDA	#<DLL
     49  cbe4		       85 30		      STA	DPPL	;		     ;SET DPPL AND DPPH TO DLLIST
     50  cbe6		       a9 1f		      LDA	#>DLL
     51  cbe8		       85 2c		      STA	DPPH
     52  cbea
     53  cbea		       4c b6 cc 	      JMP	SCREENON	;		 ;TURN SCREEN DISPLAY ON
     54  cbed
     55  cbed
     56  cbed							;*  INITIALIZE THE ENTIRE GAME.  ZERO DATA AREAS AND SET CONTROL REGISTERS.
     57  cbed		       20 b7 cd    GAMEINIT   JSR	ZERORAM	;		  ;ZERO RAM, TURN OFF SCREEN
     58  cbf0		       20 b6 cc 	      JSR	SCREENON	;		 ;SCREEN BACK ON AGAIN
     59  cbf3		       a5 42		      LDA	AUTOPLAY
     60  cbf5		       d0 03		      BNE	GIJMP0
     61  cbf7		       20 cd cd 	      JSR	ZEROSCOR	;		 ;ZERO SCORE IF NOT IN AUTO-PLAY
     62  cbfa
     63  cbfa		       a9 01	   GIJMP0     LDA	#$01	;		     ;SET UP PLAYER 2
     64  cbfc		       85 45		      STA	PLAYER
     65  cbfe		       a5 40		      LDA	STLEVEL	;		  ;SET STARTING LEVEL
     66  cc00		       85 a6		      STA	LEVEL
     67  cc02		       85 a7		      STA	ADJLEVEL
     68  cc04		       20 53 cd 	      JSR	SETRACK
     69  cc07		       20 a7 f6 	      JSR	INITLIV	;		  ;INITIALIZE NUMBER OF LIVES
     70  cc0a		       20 22 cc 	      JSR	SCRNINIT	;		 ;INITIALIZE SCREEN AND TIMERS
     71  cc0d
     72  cc0d		       20 eb cd 	      JSR	SWITCHPL	;		 ;SET UP PLAYER 1
     73  cc10		       a5 40		      LDA	STLEVEL	;		  ;SET STARTING LEVEL
     74  cc12		       85 a6		      STA	LEVEL
     75  cc14		       85 a7		      STA	ADJLEVEL
     76  cc16		       20 53 cd 	      JSR	SETRACK
     77  cc19		       20 a7 f6 	      JSR	INITLIV	;		  ;INITIALIZE NUMBER OF LIVES
     78  cc1c
     79  cc1c
     80  cc1c							;*  THIS ROUTINE INITIALIZES THE STATE FOR A RACK
     81  cc1c		       20 22 cc    RACKINIT   JSR	SCRNINIT
     82  cc1f		       4c 49 cc 	      JMP	COMNINIT
     83  cc22
     84  cc22
     85  cc22							;*  THIS ROUTINE INITIALIZES THE SCREEN FOR A RACK
     86  cc22		       20 26 fc    SCRNINIT   JSR	LOADDOTS	;		 ;SET UP DOTS
     87  cc25		       a9 38		      LDA	#$38	;		     ;SET NUMBER OF DOTS BEFORE FRUIT APPEAR
     88  cc27		       85 af		      STA	FDOTS
     89  cc29
     90  cc29		       a9 00		      LDA	#0
     91  cc2b		       85 aa		      STA	DOTSEATN
     92  cc2d		       85 ac		      STA	PINKDOTS
     93  cc2f		       85 ad		      STA	BLUEDOTS
     94  cc31		       85 ae		      STA	GOLDDOTS
     95  cc33		       85 ab		      STA	DEATHFLG
     96  cc35		       85 f7		      STA	EATNDOTS
     97  cc37		       85 f8		      STA	TRELEASE
     98  cc39
     99  cc39		       20 13 f5    SCRRAND    JSR	RAND	;		     ;GET A RANDOM NUMBER 0..3 FOR AUTOPLAY
    100  cc3c		       29 03		      AND	#$03
    101  cc3e		       f0 f9		      BEQ	SCRRAND	;		  ;DO NOT ALLOW 0 (SHE DIES TOO MUCH)
    102  cc40		       85 52		      STA	RACKRAND
    103  cc42		       60		      RTS
    104  cc43
    105  cc43
    106  cc43							;*  THIS ROUTINE INITIALIZES BETWEEN PLAYERS
    107  cc43		       20 3d fc    OTHRINIT   JSR	SAVEDOTS	;		 ;UPDATE DOT ARRAY
    108  cc46		       20 eb cd 	      JSR	SWITCHPL	;		 ;SWITCH PLAYERS
    109  cc49
    110  cc49
    111  cc49							;*  THIS ROUTINE IS USED IN COMMON BY RACKINIT AND OTHRINIT
    112  cc49		       a9 00	   COMNINIT   LDA	#$00	;		     ;ZERO OUR LOCAL CLOCKS
    113  cc4b		       85 a0		      STA	RTLOCAL
    114  cc4d		       85 a1		      STA	RTLOCAL+1
    115  cc4f		       85 fb		      STA	NORMTIME
    116  cc51		       85 fc		      STA	NORMTIME+1
    117  cc53		       20 d7 cc 	      JSR	CLRSCRN	;		  ;TURN OFF THE SCREEN
    118  cc56
    119  cc56		       a6 a5		      LDX	RACK
    120  cc58		       bd 25 d0 	      LDA	DOTCOLOR,X	;	       ;SET COLORS
    121  cc5b		       85 81		      STA	P0C1
    122  cc5d		       bd 1d d0 	      LDA	BARCOLOR,X
    123  cc60		       85 82		      STA	P0C2
    124  cc62		       bd 21 d0 	      LDA	OUTCOLOR,X
    125  cc65		       85 83		      STA	P0C3
    126  cc67		       20 5b cd 	      JSR	LOADDLST	;		 ;RESTORE THE DISPLAY LISTS
    127  cc6a		       20 bb fa 	      JSR	LOADMAP	;		  ;SET UP SCREEN
    128  cc6d		       20 f6 cc 	      JSR	WRTINDS	;		  ;WRITE INDICATORS - GO TO LIFEINIT
    129  cc70
    130  cc70
    131  cc70							;*  THIS ROUTIINE INITIALIZES A NEW LIFE (OTHRINIT FALLS THROUGH TO HERE)
    132  cc70		       20 cf d5    LIFEINIT   JSR	CLEARFRT	;		 ;SET UP FOR STARTING LIFE
    133  cc73		       20 6c d2 	      JSR	INITPAC
    134  cc76		       20 49 da 	      JSR	INITMON
    135  cc79		       20 a2 de 	      JSR	INITSPED
    136  cc7c		       20 8e ea 	      JSR	CLEARTUN
    137  cc7f		       20 9a d0 	      JSR	SETPAC
    138  cc82		       20 55 d4 	      JSR	SETFRT
    139  cc85		       4c 42 f8 	      JMP	SETFLSH
    140  cc88
    141  cc88
    142  cc88							;*  TURN THE SCREEN OFF
    143  cc88		       20 ce cc    SCREENOF   JSR	WAITVBL	;		  ;WAIT TILL VBLANK STARTED
    144  cc8b		       a9 7f		      LDA	#$7F	;		     ;TURN GRAPHICS OFF
    145  cc8d		       85 3c		      STA	CTRL
    146  cc8f
    147  cc8f		       20 d7 cc 	      JSR	CLRSCRN	;		  ;CLEAR OFF LIVES, FRUITS, AND MONSTERS
    148  cc92
    149  cc92		       a2 00		      LDX	#$00	;		     ;CLEAR CHARACTER MAP, $1800-$1BFF
    150  cc94		       8a		      TXA
    151  cc95		       9d 00 18    SOLOOP     STA	$1800,X
    152  cc98		       9d 00 19 	      STA	$1900,X
    153  cc9b		       9d 00 1a 	      STA	$1A00,X
    154  cc9e		       9d 00 1b 	      STA	$1B00,X
    155  cca1		       ca		      DEX
    156  cca2		       d0 f1		      BNE	SOLOOP
    157  cca4
    158  cca4		       85 94	   SOEND      STA	SCRNSTAT	;		 ;ZERO SOME STATE
    159  cca6		       85 54		      STA	KNLTEMP0
    160  cca8		       85 55		      STA	KNLTEMP1
    161  ccaa		       60		      RTS
    162  ccab
    163  ccab
    164  ccab							;*  TURN THE SCREEN OFF WITHOUT ZEROING THE SCREEN
    165  ccab		       20 ce cc    SCREENNO   JSR	WAITVBL	;		  ;WAIT TILL VBLANK STARTED
    166  ccae		       a9 7f		      LDA	#$7F	;		     ;TURN GRAPHICS OFF
    167  ccb0		       85 3c		      STA	CTRL
    168  ccb2		       a9 00		      LDA	#$00
    169  ccb4		       f0 ee		      BEQ	SOEND
    170  ccb6
    171  ccb6
    172  ccb6							;*  TURN THE SCREEN ON
    173  ccb6		       a5 94	   SCREENON   LDA	SCRNSTAT	;		 ;SEE IF SCREEN WAS EVEN OFF
    174  ccb8		       d0 13		      BNE	SOOUT
    175  ccba
    176  ccba		       20 2b f4 	      JSR	LOADER	;		   ;INITIALIZE KERNAL STATE
    177  ccbd		       20 22 f5 	      JSR	GETCOLOR	;		 ;GET OUR COLORS
    178  ccc0
    179  ccc0		       20 ce cc 	      JSR	WAITVBL
    180  ccc3		       a9 ff		      LDA	#$FF	;		     ;SET THE KERNAL STATE
    181  ccc5		       85 54		      STA	KNLTEMP0
    182  ccc7		       e6 94		      INC	SCRNSTAT	;		 ;SAY THE SCREEN IS ON
    183  ccc9		       a9 48		      LDA	#GRAPHON
    184  cccb		       85 3c		      STA	CTRL	;		     ;TURN GRAPHICS ON
    185  cccd		       60	   SOOUT      RTS
    186  ccce
    187  ccce
    188  ccce							;*  A ROUTINE TO WATI TILL VBLANK
    189  ccce		       24 28	   WAITVBL    BIT	MSTAT	;		    ;IS VBLANK STARTED YET?
    190  ccd0		       10 fc		      BPL	WAITVBL
    191  ccd2		       24 28		      BIT	MSTAT	;		    ;IS VBLANK STILL STARTED?
    192  ccd4		       10 f8		      BPL	WAITVBL
    193  ccd6		       60		      RTS
    194  ccd7
    195  ccd7
    196  ccd7							;*  TURN MISCELLANEOUS GRAPHICS OFF.  THE MOVING OBJECTS AND INDICATORS ARE
    197  ccd7							;*  TURNED OFF.
    198  ccd7		       a9 b0	   CLRSCRN    LDA	#OFFSCRN	;		 ;TURN OFF MOVING OBJECTS
    199  ccd9		       a2 05		      LDX	#$05
    200  ccdb		       95 56	   CSMLOOP    STA	HPLIST,X
    201  ccdd		       95 74		      STA	DOLIST,X
    202  ccdf		       ca		      DEX
    203  cce0		       10 f9		      BPL	CSMLOOP
    204  cce2
    205  cce2		       a0 0b		      LDY	#$0B	;		     ;PUT BONUS LIFE AND FRUIT INDICATORS
    206  cce4		       a2 03		      LDX	#$03	;		     ;	OFF SCREEN
    207  cce6		       a9 b0		      LDA	#OFFSCRN
    208  cce8		       9d 27 1f    CSBLOOP    STA	BDLIST0,X
    209  cceb		       9d 80 1f 	      STA	BDLIST1,X
    210  ccee		       e8		      INX
    211  ccef		       e8		      INX
    212  ccf0		       e8		      INX
    213  ccf1		       e8		      INX
    214  ccf2		       88		      DEY
    215  ccf3		       10 f3		      BPL	CSBLOOP
    216  ccf5
    217  ccf5		       60		      RTS		;			      ;ALL DONE
    218  ccf6
    219  ccf6
    220  ccf6							;*  THIS ROUTINE WRITES ALL THE INDICATORS ON THE SCREEN
    221  ccf6		       a6 a6	   WRTINDS    LDX	LEVEL	;		    ;SET TYPE OF FRUIT AT BOTTOM
    222  ccf8		       e0 07		      CPX	#$07
    223  ccfa		       30 02		      BMI	WISETFRT
    224  ccfc		       a2 07		      LDX	#$07
    225  ccfe		       e8	   WISETFRT   INX
    226  ccff		       86 84		      STX	RACKFRT
    227  cd01		       20 a8 ce 	      JSR	LOADINDS	;		 ;SET UP THE INDICATORS
    228  cd04		       20 02 f7 	      JSR	WRTSCORE	;		 ;WRITE THE SCORE
    229  cd07		       4c ac f7 	      JMP	WRTLIVES	;		 ;FALL THROUGH TO LIFEINIT
    230  cd0a
    231  cd0a
    232  cd0a							;*  THIS ROUTINE ADVANCES THE RACK
    233  cd0a		       20 8e ea    NEXTRACK   JSR	CLEARTUN
    234  cd0d		       20 8f cd 	      JSR	FLASHBAR
    235  cd10		       a5 42		      LDA	AUTOPLAY	;		 ;SEE IF IN AUTO-PLAY MODE
    236  cd12		       d0 27		      BNE	NRAUTO
    237  cd14		       a6 a7		      LDX	ADJLEVEL
    238  cd16		       bd 37 d0 	      LDA	ANIMTAB,X	;		;SEE IF ANIMATION DUE
    239  cd19		       30 03		      BMI	NRCONT
    240  cd1b		       20 12 e1 	      JSR	ANIMATE	;		  ;ANIMATE
    241  cd1e		       e6 a6	   NRCONT     INC	LEVEL	;		    ;INCREMENT LEVEL
    242  cd20		       e6 a7		      INC	ADJLEVEL	;		 ;AND ADJUSTED LEVEL
    243  cd22		       a5 a7		      LDA	ADJLEVEL	;		 ;SEE IF OUT OF RANGE
    244  cd24		       c9 0e		      CMP	#$0E
    245  cd26		       30 04		      BMI	NRJMP0
    246  cd28		       a9 06		      LDA	#$06	;		     ;SET BACK TO LEVEL 6
    247  cd2a		       85 a7		      STA	ADJLEVEL
    248  cd2c		       20 53 cd    NRJMP0     JSR	SETRACK
    249  cd2f		       20 1c cc 	      JSR	RACKINIT	;		 ;INIT THE NEW RACK
    250  cd32		       20 55 f8 	      JSR	READY	;		    ;PUT PLAYER READY UP
    251  cd35		       20 da cd 	      JSR	WAIT
    252  cd38		       4c 79 f8 	      JMP	WCLEAR
    253  cd3b
    254  cd3b		       e6 a5	   NRAUTO     INC	RACK	;		     ;AUTO-PLAY NEXT RACK
    255  cd3d		       a6 a5		      LDX	RACK
    256  cd3f		       e0 04		      CPX	#NUMRACKS
    257  cd41		       10 0a		      BPL	NROVER
    258  cd43		       bd 45 d0 	      LDA	RACKLVL,X
    259  cd46		       85 a6		      STA	LEVEL
    260  cd48		       85 a7		      STA	ADJLEVEL
    261  cd4a		       4c 1c cc 	      JMP	RACKINIT
    262  cd4d		       a2 ff	   NROVER     LDX	#STACKPTR	;		;ALL OVER - GO BACK TO TITLE PAGE
    263  cd4f		       9a		      TXS
    264  cd50		       4c 35 ca 	      JMP	ATTRACT
    265  cd53
    266  cd53		       a6 a7	   SETRACK    LDX	ADJLEVEL
    267  cd55		       bd 29 d0 	      LDA	RACKTAB,X	;		;GET THE RACK
    268  cd58		       85 a5		      STA	RACK
    269  cd5a		       60		      RTS
    270  cd5b
    271  cd5b
    272  cd5b							;*  THIS ROUTINE INITIALIZES THE DISPLAY LISTS
    273  cd5b		       a2 58	   LOADDLST   LDX	#$58
    274  cd5d		       bd 4e cf    LDLLOOP0   LDA	DLISTS,X	;		 ;INITIALIZE SCREEN AND INDICATOR LISTS
    275  cd60		       9d 00 1f 	      STA	DLIST0,X
    276  cd63		       9d 59 1f 	      STA	DLIST1,X
    277  cd66		       ca		      DEX
    278  cd67		       10 f4		      BPL	LDLLOOP0
    279  cd69
    280  cd69		       a2 06		      LDX	#$06
    281  cd6b		       bd a7 cf    LDLLOOP1   LDA	TDLIST,X	;		 ;INITIALIZE TOP DISPLAY LIST
    282  cd6e		       9d b2 1f 	      STA	TOPDLIST,X
    283  cd71		       ca		      DEX
    284  cd72		       10 f7		      BPL	LDLLOOP1
    285  cd74
    286  cd74		       a2 6e		      LDX	#$6E
    287  cd76		       bd ae cf    LDLLOOP2   LDA	DLLIST,X
    288  cd79		       9d c0 1f 	      STA	DLL,X
    289  cd7c		       ca		      DEX
    290  cd7d		       10 f7		      BPL	LDLLOOP2
    291  cd7f
    292  cd7f		       60		      RTS
    293  cd80
    294  cd80
    295  cd80							;*  THIS ROUTINE MOVES THE BLACK BARS OFF THE SCREEN
    296  cd80		       a9 b0	   BARSOFF    LDA	#OFFSCRN
    297  cd82		       8d 20 1f 	      STA	DLIST0+$20
    298  cd85		       8d 24 1f 	      STA	DLIST0+$24
    299  cd88		       8d 79 1f 	      STA	DLIST1+$20
    300  cd8b		       8d 7d 1f 	      STA	DLIST1+$24
    301  cd8e		       60		      RTS
    302  cd8f
    303  cd8f
    304  cd8f							;*  THIS ROUTINE FLASHES THE BAR COLOR
    305  cd8f		       a0 02	   FLASHBAR   LDY	#$02
    306  cd91		       a6 a5		      LDX	RACK	;		     ;GET BAR COLOR
    307  cd93		       a9 00	   FBLOOP     LDA	#BLACK	;		   ;TURN BAR OFF
    308  cd95		       85 82		      STA	P0C2
    309  cd97		       20 a6 cd 	      JSR	FBWAIT	;		   ;PAUSE
    310  cd9a		       bd 1d d0 	      LDA	BARCOLOR,X	;	       ;TURN BAR ON
    311  cd9d		       85 82		      STA	P0C2
    312  cd9f		       20 a6 cd 	      JSR	FBWAIT	;		   ;PAUSE
    313  cda2		       88		      DEY
    314  cda3		       10 ee		      BPL	FBLOOP
    315  cda5		       60		      RTS
    316  cda6
    317  cda6		       a5 a1	   FBWAIT     LDA	RTLOCAL+1	;		;WAIT A BIT FOR THE BAR FLASHING
    318  cda8		       18		      CLC
    319  cda9		       69 0e		      ADC	#$0E
    320  cdab		       85 c0		      STA	TEMP16
    321  cdad		       20 25 cb    FBWLOOP    JSR	SEEBNORM
    322  cdb0		       a5 c0		      LDA	TEMP16
    323  cdb2		       c5 a1		      CMP	RTLOCAL+1
    324  cdb4		       10 f7		      BPL	FBWLOOP
    325  cdb6		       60		      RTS
    326  cdb7
    327  cdb7
    328  cdb7							;*  THIS ROUTINE ZEROS OUT THE RAM
    329  cdb7		       20 88 cc    ZERORAM    JSR	SCREENOF	;		 ;TURN SCREEN OFF FIRST, ZERO $1800-1BFF
    330  cdba
    331  cdba		       a9 00		      LDA	#$00
    332  cdbc		       a2 60		      LDX	#$60	;		     ;ZERO OUT $A0-$FF
    333  cdbe		       95 9f	   ZRLOOP0    STA	$9F,X
    334  cdc0		       ca		      DEX
    335  cdc1		       d0 fb		      BNE	ZRLOOP0
    336  cdc3		       9d 00 1c    ZRLOOP     STA	$1C00,X	;		  ;ZERO OUT PAGES $1C00 AND $1D00
    337  cdc6		       9d 00 1d 	      STA	$1D00,X
    338  cdc9		       ca		      DEX
    339  cdca		       d0 f7		      BNE	ZRLOOP
    340  cdcc		       60		      RTS
    341  cdcd
    342  cdcd
    343  cdcd							;*  THIS ROUTINE ZEROS OUT THE SCORE
    344  cdcd		       a2 05	   ZEROSCOR   LDX	#$05
    345  cdcf		       bd 49 d0    ZSCLOOP    LDA	INITSCOR,X
    346  cdd2		       95 46		      STA	P1SCORE,X
    347  cdd4		       95 4c		      STA	P2SCORE,X
    348  cdd6		       ca		      DEX
    349  cdd7		       10 f6		      BPL	ZSCLOOP
    350  cdd9		       60		      RTS
    351  cdda
    352  cdda
    353  cdda							;*  THIS ROUTINE SIMPLY DOES A BUSY-WAIT.  THIS IS USED TO HALT ACTION TEMPORARIL
    354  cdda		       a5 a1	   WAIT       LDA	RTLOCAL+1
    355  cddc		       18		      CLC
    356  cddd		       69 40		      ADC	#$40
    357  cddf		       85 c0		      STA	TEMP16
    358  cde1		       20 25 cb    WLOOP      JSR	SEEBNORM
    359  cde4		       a5 c0		      LDA	TEMP16
    360  cde6		       c5 a1		      CMP	RTLOCAL+1
    361  cde8		       10 f7		      BPL	WLOOP
    362  cdea		       60		      RTS
    363  cdeb
    364  cdeb
    365  cdeb							;*  SWITCH DATA BETWEEN PLAYERS
    366  cdeb		       a2 0b	   SWITCHPL   LDX	#$0B	;		     ;SWITCH PLAYER DEPENDANT DATA
    367  cded		       b5 a4	   SPLLOOP    LDA	LIVES,X
    368  cdef		       b4 e4		      LDY	BAKLIVES,X
    369  cdf1		       94 a4		      STY	LIVES,X
    370  cdf3		       95 e4		      STA	BAKLIVES,X
    371  cdf5		       ca		      DEX
    372  cdf6		       10 f5		      BPL	SPLLOOP
    373  cdf8
    374  cdf8		       a2 7f		      LDX	#$7F	;		     ;SWITCH DOT ARRAYS
    375  cdfa		       bd 00 1c    SDTLOOP    LDA	DOTARRAY,X
    376  cdfd		       bc 80 1c 	      LDY	BAKDOTS,X
    377  ce00		       9d 80 1c 	      STA	BAKDOTS,X
    378  ce03		       98		      TYA
    379  ce04		       9d 00 1c 	      STA	DOTARRAY,X
    380  ce07		       ca		      DEX
    381  ce08		       10 f0		      BPL	SDTLOOP
    382  ce0a
    383  ce0a		       a5 45		      LDA	PLAYER	;		   ;SWITCH PLAYER
    384  ce0c		       49 01		      EOR	#$01
    385  ce0e		       85 45		      STA	PLAYER
    386  ce10
    387  ce10		       a5 a4		      LDA	LIVES	;		    ;SWITCH BACK IF NO LIVES LEFT
    388  ce12		       30 d7		      BMI	SWITCHPL
    389  ce14		       60		      RTS
    390  ce15
    391  ce15
    392  ce15							;*  ROUTINE TO LOAD MS PAC MAN FONT - ALSO INITIALIZES BLACK CHARACTERS
    393  ce15		       a9 00	   LOADFONT   LDA	#<MSFONT	;	       ;SET UP TEMP0 FOR READS FROM FONT
    394  ce17		       85 b0		      STA	TEMP0
    395  ce19		       a9 c0		      LDA	#>MSFONT
    396  ce1b		       85 b1		      STA	TEMP1
    397  ce1d		       a9 30		      LDA	#$30	;		     ;SET UP TEMP2 FOR WRITES TO STAMP AREA
    398  ce1f		       85 b2		      STA	TEMP2	;		    ;  FONT STARTS AT $30
    399  ce21		       a9 90		      LDA	#$90	;		     ;INDEX FOR OUTER LOOP - HOW MANY CHARS
    400  ce23		       85 b4		      STA	TEMP4	;		    ;  GET $60 CHARACTERS FROM FONT
    401  ce25		       a0 00		      LDY	#$00
    402  ce27
INIT.ASM (403): error: Value in 'lda #>STAMPS + $500' must be <$100.
    403  ce27		       a9 22	   LFLOOP     LDA	#>STAMPS + $500	;SET HI BYTE OF WRITE ;not sure whats its looking for here.
    404  ce29		       85 b3		      STA	TEMP3
    405  ce2b		       a2 05		      LDX	#$05	;		     ;INNER LOOP IS SIX BIG (SIZE OF CHAR)
    406  ce2d		       b1 b0	   LFLOOP0    LDA	(TEMP0),Y	;		;READ FROM FONT
    407  ce2f		       91 b2		      STA	(TEMP2),Y	;		;WRITE TO STAMPS
    408  ce31		       e6 b0		      INC	TEMP0	;		    ;INCREMENT READ
    409  ce33		       d0 02		      BNE	LFLJMP0
    410  ce35		       e6 b1		      INC	TEMP1
    411  ce37		       c6 b3	   LFLJMP0    DEC	TEMP3	;		    ;DECREMENT HI BYTE OF WRITE
    412  ce39		       ca		      DEX
    413  ce3a		       10 f1		      BPL	LFLOOP0
    414  ce3c		       e6 b2		      INC	TEMP2	;		    ;INCREMENT TO NEXT RAM CHARACTER
    415  ce3e		       c6 b4		      DEC	TEMP4
    416  ce40		       d0 e5		      BNE	LFLOOP
    417  ce42
    418  ce42		       a9 ff		      LDA	#$FF	;		     ;SET UP THE STAMP FOR BLACK BARS
    419  ce44		       8d 02 22 	      STA	STAMPS+2	;		 ;  CHARACTERS 2 AND 3
    420  ce47		       8d 03 22 	      STA	STAMPS+3
    421  ce4a		       8d 02 23 	      STA	STAMPS+$102
    422  ce4d		       8d 03 23 	      STA	STAMPS+$103
    423  ce50		       8d 02 24 	      STA	STAMPS+$202
    424  ce53		       8d 03 24 	      STA	STAMPS+$203
    425  ce56		       8d 02 25 	      STA	STAMPS+$302
    426  ce59		       8d 03 25 	      STA	STAMPS+$303
    427  ce5c		       8d 02 26 	      STA	STAMPS+$402
    428  ce5f		       8d 03 26 	      STA	STAMPS+$403
    429  ce62		       8d 02 27 	      STA	STAMPS+$502
    430  ce65		       8d 03 27 	      STA	STAMPS+$503
    431  ce68
    432  ce68		       a9 00		      LDA	#$00	;		     ;SET UP THE STAMP FOR BLANK AREA
    433  ce6a		       8d 00 22 	      STA	STAMPS+0	;		 ;  CHARACTERS 2 AND 3
    434  ce6d		       8d 01 22 	      STA	STAMPS+1
    435  ce70		       8d 00 23 	      STA	STAMPS+$100
    436  ce73		       8d 01 23 	      STA	STAMPS+$101
    437  ce76		       8d 00 24 	      STA	STAMPS+$200
    438  ce79		       8d 01 24 	      STA	STAMPS+$201
    439  ce7c		       8d 00 25 	      STA	STAMPS+$300
    440  ce7f		       8d 01 25 	      STA	STAMPS+$301
    441  ce82		       8d 00 26 	      STA	STAMPS+$400
    442  ce85		       8d 01 26 	      STA	STAMPS+$401
    443  ce88		       8d 00 27 	      STA	STAMPS+$500
    444  ce8b		       8d 01 27 	      STA	STAMPS+$501
    445  ce8e
    446  ce8e		       a2 1d		      LDX	#$1D	;		     ;ZERO OUT KERNAL LISTS
    447  ce90		       a9 00		      LDA	#$00
    448  ce92		       9d 40 1e    LFLOOP1    STA	MSADDR,X
    449  ce95		       9d 60 1e 	      STA	FRTADDR,X
    450  ce98		       9d 80 1e 	      STA	M0ADDR,X
    451  ce9b		       9d a0 1e 	      STA	M1ADDR,X
    452  ce9e		       9d c0 1e 	      STA	M2ADDR,X
    453  cea1		       9d e0 1e 	      STA	M3ADDR,X
    454  cea4		       ca		      DEX
    455  cea5		       10 eb		      BPL	LFLOOP1
    456  cea7
    457  cea7		       60		      RTS
    458  cea8
    459  cea8
    460  cea8							;*  THIS ROUTINE LOADS THE BITMAPS FOR THE INDICATORS AND SETS UP FRUIT INDS
    461  cea8		       a9 48	   LOADINDS   LDA	#<MSCHAR+48	;	    ;TEMP0 IS START OF MS PAC
    462  ceaa		       85 b0		      STA	TEMP0
    463  ceac		       a9 f3		      LDA	#>MSCHAR+48
    464  ceae		       85 b1		      STA	TEMP1
    465  ceb0		       a9 28		      LDA	#$28
    466  ceb2		       85 b4		      STA	TEMP4
    467  ceb4		       20 10 cf 	      JSR	LIBODY	;		   ;DO IT - WRITE THE MS PAC INDICATOR
    468  ceb7
    469  ceb7		       a9 68		      LDA	#<FRUITCHR	;	     ;TEMP0 IS START OF FRUIT
    470  ceb9		       85 b0		      STA	TEMP0	;		    ;  ENTRY POINT FOR CHANGING FRUIT
    471  cebb		       a9 c7		      LDA	#>FRUITCHR
    472  cebd		       85 b1		      STA	TEMP1
    473  cebf
    474  cebf		       a2 00		      LDX	#$00	;		     ;WRITE THE FRUITS
    475  cec1		       bd 57 d0    NFLOOP     LDA	FRTSTMP,X	;		;WHERE IT"S GOING TO
    476  cec4		       85 b4		      STA	TEMP4
    477  cec6		       86 bf		      STX	TEMP15
    478  cec8		       20 10 cf 	      JSR	LIBODY	;		   ;DO IT
    479  cecb		       a6 bf		      LDX	TEMP15
    480  cecd		       a5 b0		      LDA	TEMP0	;		    ;MOVE TO NEXT FRUIT STAMP
    481  cecf		       18		      CLC
    482  ced0		       69 18		      ADC	#24
    483  ced2		       85 b0		      STA	TEMP0
    484  ced4		       a5 b1		      LDA	TEMP1
    485  ced6		       69 00		      ADC	#$00
    486  ced8		       85 b1		      STA	TEMP1
    487  ceda		       e8		      INX
    488  cedb		       e0 08		      CPX	#$08
    489  cedd		       30 e2		      BMI	NFLOOP
    490  cedf
    491  cedf		       a6 40		      LDX	STLEVEL	;		  ;NOW - SET UP FRUIT INDS
    492  cee1		       d0 07		      BNE	LIFLOAD
    493  cee3		       a5 84		      LDA	RACKFRT	;		  ;IF STARTING AT TDY BEAR AND GOING TO
    494  cee5		       c9 07		      CMP	#$07	;		     ;	BANANA, THEN DON"T DISPLAY TDY BEAR
    495  cee7		       30 01		      BMI	LIFLOAD
    496  cee9		       e8		      INX
    497  ceea		       a0 2d	   LIFLOAD    LDY	#$2D	;		     ;INDEX INTO DISPLAY LISTS
    498  ceec		       b9 27 1f    LIFLOOP    LDA	BDLIST0,Y	;		;CHANGE PALETTE
    499  ceef		       29 1f		      AND	#$1F
    500  cef1		       1d 4f d0 	      ORA	FRTPAL,X
    501  cef4		       99 27 1f 	      STA	BDLIST0,Y
    502  cef7		       99 80 1f 	      STA	BDLIST1,Y
    503  cefa		       88		      DEY
    504  cefb		       bd 57 d0 	      LDA	FRTSTMP,X	;		;SET STAMP
    505  cefe		       99 27 1f 	      STA	BDLIST0,Y
    506  cf01		       18		      CLC
    507  cf02		       69 02		      ADC	#$02
    508  cf04		       99 80 1f 	      STA	BDLIST1,Y
    509  cf07		       88		      DEY
    510  cf08		       88		      DEY
    511  cf09		       88		      DEY
    512  cf0a		       e8		      INX
    513  cf0b		       e4 84		      CPX	RACKFRT
    514  cf0d		       30 dd		      BMI	LIFLOOP
    515  cf0f
    516  cf0f		       60	   LIFOUT     RTS
    517  cf10
    518  cf10
    519  cf10							;*  THIS ROUTINE DOES THE WORK FOR THE FRUIT AND PAC WRITING ROUTINES
INIT.ASM (520): error: Value in 'lda #>STAMPS+$500' must be <$100.
    520  cf10		       a9 22	   LIBODY     LDA	#>STAMPS+$500	;SET TEMP8 TO DESTINATION
    521  cf12		       85 b9		      STA	TEMP9
    522  cf14		       a5 b0		      LDA	TEMP0	;		    ;SET (TEMP2) TO POINT TO SECOND PART
    523  cf16		       18		      CLC
    524  cf17		       69 0c		      ADC	#$0C
    525  cf19		       85 b2		      STA	TEMP2
    526  cf1b		       a5 b1		      LDA	TEMP1
    527  cf1d		       69 00		      ADC	#$00
    528  cf1f		       85 b3		      STA	TEMP3
    529  cf21
    530  cf21		       a2 00		      LDX	#$00	;		     ;AND DO IT
    531  cf23		       a0 00		      LDY	#$00
    532  cf25		       a5 b4	   LILOOP     LDA	TEMP4	;		    ;MOVING INTO STAMPS STARTING AT TEMP4
    533  cf27		       85 b8		      STA	TEMP8
    534  cf29		       b1 b0		      LDA	(TEMP0),Y	;		;UPPER STAMP FIRST BYTE
    535  cf2b		       81 b8		      STA	(TEMP8,X)
    536  cf2d		       e6 b8		      INC	TEMP8
    537  cf2f		       c8		      INY
    538  cf30		       b1 b0		      LDA	(TEMP0),Y	;		;UPPER STAMP SECOND BYTE
    539  cf32		       81 b8		      STA	(TEMP8,X)
    540  cf34		       e6 b8		      INC	TEMP8
    541  cf36		       88		      DEY
    542  cf37		       b1 b2		      LDA	(TEMP2),Y	;		;LOWER STAMP FIRST BYTE
    543  cf39		       81 b8		      STA	(TEMP8,X)
    544  cf3b		       e6 b8		      INC	TEMP8
    545  cf3d		       c8		      INY
    546  cf3e		       b1 b2		      LDA	(TEMP2),Y	;		;LOWER STAMP SECOND BYTE
    547  cf40		       81 b8		      STA	(TEMP8,X)
    548  cf42		       e6 b8		      INC	TEMP8
    549  cf44
    550  cf44		       c8		      INY		;			      ;GET SET FOR NEXT
    551  cf45		       c6 b9		      DEC	TEMP9	;		    ;MOVE TO NEXT OUTPUT PAGE
    552  cf47		       a5 b9		      LDA	TEMP9
    553  cf49		       c9 22		      CMP	#>STAMPS
    554  cf4b		       10 d8		      BPL	LILOOP
    555  cf4d
    556  cf4d		       60		      RTS
    557  cf4e
    558  cf4e
    559  cf4e							;*  DEFAULT TEMPLATE FOR DISPLAY LIST
    560  cf4e		       00 60 18 04*DLISTS     DC.B	<SCREEN,$60,>SCREEN,$00+$04,$18	;SCREEN - PLAY FIELD
    561  cf53		       00 3e 22 b0	      DC.B	0,$20+$1E,>STAMPS,OFFSCRN	;		;MS PAC
    562  cf57		       00 5e 22 b0	      DC.B	0,$40+$1E,>STAMPS,OFFSCRN	;		;FRUIT
    563  cf5b		       00 7e 22 b0	      DC.B	0,$60+$1E,>STAMPS,OFFSCRN	;		;MONSTER 0
    564  cf5f		       00 9e 22 b0	      DC.B	0,$80+$1E,>STAMPS,OFFSCRN	;		;MONSTER 1
    565  cf63		       00 be 22 b0	      DC.B	0,$A0+$1E,>STAMPS,OFFSCRN	;		;MONSTER 2
    566  cf67		       00 de 22 b0	      DC.B	0,$C0+$1E,>STAMPS,OFFSCRN	;		;MONSTER 3
    567  cf6b		       02 3e 22 10	      DC.B	$02,$20+$1E,>STAMPS,$10	;		  ;BLACK BAR
    568  cf6f		       02 3e 22 88	      DC.B	$02,$20+$1E,>STAMPS,$88	;		  ;BLACK BAR
    569  cf73		       00 00		      DC.B	$00,$00
    570  cf75		       00 3e 22 17	      DC.B	$00,$20+$1E,>STAMPS,LEFTSIDE-$01	;INDICATOR ZONE
    571  cf79		       00 3e 22 20	      DC.B	$00,$20+$1E,>STAMPS,LEFTSIDE+$08	; 5 INDS WITH PAC PLT
    572  cf7d		       00 3e 22 29	      DC.B	$00,$20+$1E,>STAMPS,LEFTSIDE+$11
    573  cf81		       00 3e 22 32	      DC.B	$00,$20+$1E,>STAMPS,LEFTSIDE+$1A
    574  cf85		       00 3e 22 3b	      DC.B	$00,$20+$1E,>STAMPS,LEFTSIDE+$23
    575  cf89		       00 1e 22 44	      DC.B	$00,$00+$1E,>STAMPS,RGHTSIDE-$44	;FRUIT INDICATORS
    576  cf8d		       00 1e 22 4e	      DC.B	$00,$00+$1E,>STAMPS,RGHTSIDE-$3A	;  STAMP AND PALETTES
    577  cf91		       00 1e 22 58	      DC.B	$00,$00+$1E,>STAMPS,RGHTSIDE-$30	;  MUST BE SET
    578  cf95		       00 1e 22 62	      DC.B	$00,$00+$1E,>STAMPS,RGHTSIDE-$26
    579  cf99		       00 1e 22 6c	      DC.B	$00,$00+$1E,>STAMPS,RGHTSIDE-$1C
    580  cf9d		       00 1e 22 76	      DC.B	$00,$00+$1E,>STAMPS,RGHTSIDE-$12
    581  cfa1		       00 1e 22 80	      DC.B	$00,$00+$1E,>STAMPS,RGHTSIDE-$08
    582  cfa5		       00 00		      DC.B	$00,$00
    583  cfa7		       48 60 1b 04*TDLIST     DC.B	<SCORE,$60,>SCORE,$00+$04,$18	;SCORE DLIST
    584  cfac		       00 00		      DC.B	$00,$00
    585  cfae
    586  cfae							;*  THIS IS THE DISPLAY LIST LIST.  THIS WILL BE DROPPED INTO RAM.
    587  cfae		       0f 1f b7    DLLIST     DC.B	$0F,>NULDLIST,<NULDLIST	;	      ;16 BLANK LINES
    588  cfb1		       08 1f b7 	      DC.B	$08,>NULDLIST,<NULDLIST	;	      ;9 BLANK LINES
    589  cfb4		       85 1f b2 	      DC.B	$85,>TOPDLIST,<TOPDLIST	;	      ;SCORE ZONE
    590  cfb7		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    591  cfba		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    592  cfbd		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    593  cfc0		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    594  cfc3		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    595  cfc6		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    596  cfc9		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    597  cfcc		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    598  cfcf		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    599  cfd2		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    600  cfd5		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    601  cfd8		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    602  cfdb		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    603  cfde		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    604  cfe1		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    605  cfe4		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    606  cfe7		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    607  cfea		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    608  cfed		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    609  cff0		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    610  cff3		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    611  cff6		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    612  cff9		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    613  cffc		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    614  cfff		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    615  d002		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    616  d005		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    617  d008		       85 1f 59 	      DC.B	$85,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    618  d00b		       85 1f 00 	      DC.B	$85,>DLIST0,<DLIST0	;		  ;PF ZONE - 0
    619  d00e		       05 1f 59 	      DC.B	$05,>DLIST1,<DLIST1	;		  ;PF ZONE - 1
    620  d011		       85 1f 27 	      DC.B	$85,>BDLIST0,<BDLIST0	;		;INDICATOR ZONE - 0
    621  d014		       85 1f 80 	      DC.B	$85,>BDLIST1,<BDLIST1	;		;INDICATOR ZONE - 1
    622  d017		       0f 1f b7 	      DC.B	$0F,>NULDLIST,<NULDLIST	;	      ;16 BLANK LINES
    623  d01a		       0f 1f b7 	      DC.B	$0F,>NULDLIST,<NULDLIST	;	      ;16 BLANK LINES
    624  d01d
    625  d01d							;*  COLORS FOR THE RACKS
    626  d01d		       57 98 15 82 BARCOLOR   DC.B	PINK,BLUE,BROWN,DKBLUE
    627  d021		       5e ae 3b eb OUTCOLOR   DC.B	LTPINK,LTBLUE,LTBROWN,LTGREEN
    628  d025		       98 1e 57 ae DOTCOLOR   DC.B	BLUE,YELLOW,PINK,LTBLUE
    629  d029
    630  d029							;*  MAPPING FROM LEVEL TO RACK
    631  d029		       00 00 00 01*RACKTAB    DC.B	0,0,0,1,1,1,2,2,2,2,3,3,3,3
    632  d037		       ff ff 00 ff*ANIMTAB    DC.B	-1,-1,0,-1,-1,1,-1,-1,-1,2,-1,-1,-1,2
    633  d045
    634  d045							;*  MAPPING FROM RACK TO LEVEL FOR AUTO-PLAY
    635  d045		       01 03 06 0a RACKLVL    DC.B	$01,$03,$06,$0A
    636  d049
    637  d049							;*  TABLES TO INITIALIZE SCORES AND BONUSES
    638  d049		       00 00 00 00*INITSCOR   DC.B	$00,$00,$00,$00,$09,$99
    639  d04f
    640  d04f							;*  MAPPING OF FRUIT TO PALETTE AND STAMP
    641  d04f		       60 60 80 a0*FRTPAL     DC.B	$60,$60,$80,$A0,$60,$60,$C0,$20
    642  d057		       fc f8 f4 f0*FRTSTMP    DC.B	$FC,$F8,$F4,$F0,$EC,$E8,$E4,$E0
    643  d05f							; END
------- FILE MDOIT.ASM
     49  d060		       00		      align	2
------- FILE MSMOVE.ASM LEVEL 2 PASS 2
      0  d060					      include	"MSMOVE.ASM"
      1  d060					      processor	6502
      2  d060
      3  d060							;*  PAC.S	    ROUTINES FOR THE MS PAC
      4  d060
      5  d060
      6  d060							;*  MOVE THE MS PAC
      7  d060		       20 9a d0    MOVEPAC    JSR	SETPAC	;		   ;SET NEXT PAC MOVE
      8  d063		       e6 f8		      INC	TRELEASE
      9  d065
     10  d065		       20 f3 de 	      JSR	INCPSPED
     11  d068		       20 28 df 	      JSR	CHKPAC	;		   ;SEE IF SPEED REG SAYS ITS TIME
     12  d06b		       f0 34		      BEQ	MPOUT
     13  d06d
     14  d06d		       ce 0a 21 	      DEC	PDELAY	;		   ;SEE IF WE ARE IN A DOT EATING DELAY
     15  d070		       d0 2f		      BNE	MPOUT
     16  d072		       ee 0a 21 	      INC	PDELAY
     17  d075
     18  d075		       ad 0b 21 	      LDA	PTUNNEL
     19  d078		       f0 09		      BEQ	MPNORM
     20  d07a		       20 69 d1 	      JSR	PACDIRT	;		  ;SEE IF DIRECTION CHANGED IN TUNNEL
     21  d07d		       20 85 d1 	      JSR	PACTUNNL	;		 ;MOVE THROUGH THE TUNNEL
     22  d080		       4c 91 d0 	      JMP	MPCHOMP
     23  d083
     24  d083		       20 a2 d0    MPNORM     JSR	PACDIR	;		   ;SET THE DIRECTION
     25  d086		       ad 06 21 	      LDA	PMOVING	;		  ;IF NOT MOVING, DO NOTHING
     26  d089		       f0 16		      BEQ	MPOUT
     27  d08b		       20 0c d1 	      JSR	PACMOVE	;		  ;MOVE THE PAC
     28  d08e		       20 e3 d1 	      JSR	PACEAT	;		   ;SEE IF ANYTHING GOOD TO EAT
     29  d091		       20 cb d1    MPCHOMP    JSR	PACCHOMP	;		 ;CHANGE THE DISPLAY STATE
     30  d094		       20 b2 d2 	      JSR	WRITEPAC	;		 ;WRITE THE PAC
     31  d097		       4c 01 e0 	      JMP	PFINTR	;		   ;LOOK FOR ANY INTERSECTIONS
     32  d09a
     33  d09a
     34  d09a							;*  SET THE NEXT MS PAC MOVE
     35  d09a		       a5 a1	   SETPAC     LDA	RTLOCAL+1
     36  d09c		       18		      CLC
     37  d09d		       69 01		      ADC	#WAITPAC
     38  d09f		       85 d9		      STA	PACWAIT
     39  d0a1		       60	   MPOUT      RTS
     40  d0a2
     41  d0a2
     42  d0a2							;*  THIS ROUTINE FINDS OUT WHAT DIRECTION TO MOVE
     43  d0a2		       a5 42	   PACDIR     LDA	AUTOPLAY	;		 ;SEE IF WE ARE PLAYING
     44  d0a4		       f0 03		      BEQ	PACDCONT
     45  d0a6		       4c dd d2 	      JMP	AUTODIR
     46  d0a9
     47  d0a9		       20 f2 d0    PACDCONT   JSR	PACJOY	;		   ;GET A JOYSTICK DIRECTION
     48  d0ac
     49  d0ac		       ae 02 21 	      LDX	PZONE	;		    ;SET UP FOR CHECKDIR
     50  d0af		       86 b4		      STX	TEMP4
     51  d0b1		       ad 03 21 	      LDA	PCOL
     52  d0b4		       85 b5		      STA	TEMP5
     53  d0b6		       ad 04 21 	      LDA	PDIR
     54  d0b9		       85 b6		      STA	TEMP6
     55  d0bb		       20 60 dd 	      JSR	CHECKDIR	;		 ;GET LEGITIMATE JOYSTICK DIRECTIONS
     56  d0be
     57  d0be		       a4 d0		      LDY	NEWDIR	;		   ;GET THE DIRECTION
     58  d0c0		       cc 04 21 	      CPY	PDIR	;		     ;SEE IF TURNED
     59  d0c3		       f0 11		      BEQ	PDOUT
     60  d0c5		       c0 04		      CPY	#$04	;		     ;SEE IF CENTERED
     61  d0c7		       10 0d		      BPL	PDOUT
     62  d0c9
     63  d0c9		       b9 bc 00 	      LDA	TEMP12,Y	;		 ;SEE IF LEGITIMATE
     64  d0cc		       30 08		      BMI	PDOUT
     65  d0ce		       8c 04 21 	      STY	PDIR	;		     ;GOOD - SET DIRECTION
     66  d0d1		       a9 01		      LDA	#$01
     67  d0d3		       8d 06 21 	      STA	PMOVING	;		  ;START IT AGAIN IF IT WAS STOPPED
     68  d0d6
     69  d0d6		       ad 01 21    PDOUT      LDA	PHPOS	;		    ;SEE IF IN "CENTER" OF CHAR
     70  d0d9		       29 03		      AND	#$03
     71  d0db		       c9 01		      CMP	#$01
     72  d0dd		       d0 12		      BNE	PDEND
     73  d0df		       a5 62		      LDA	POFF
     74  d0e1		       c9 03		      CMP	#$03
     75  d0e3		       d0 0c		      BNE	PDEND
     76  d0e5		       ae 04 21 	      LDX	PDIR
     77  d0e8		       b5 bc		      LDA	TEMP12,X	;		 ;SEE IF PAC STOPPED AGAINST WALL
     78  d0ea		       10 05		      BPL	PDEND
     79  d0ec		       a9 00		      LDA	#$00
     80  d0ee		       8d 06 21 	      STA	PMOVING
     81  d0f1		       60	   PDEND      RTS
     82  d0f2
     83  d0f2
     84  d0f2							;*  THIS ROUTINE GETS A JOYSTICK DIRECTION AND TURNS THE 8-WAY JOYSTICK INTO A
     85  d0f2							;*  4-WAY
     86  d0f2		       20 8a f5    PACJOY     JSR	GETJOY	;		   ;GET THE JOYSTICK DIRECTION
     87  d0f5
     88  d0f5		       a5 d0		      LDA	NEWDIR	;		   ;SEE IF ANY INTERPRETATION NEEDED
     89  d0f7		       38		      SEC
     90  d0f8		       e9 05		      SBC	#DDWRIGHT
     91  d0fa		       30 0f		      BMI	PJOUT
     92  d0fc		       85 b0		      STA	TEMP0	;		    ;THIS IS AMOUNT OVER DCENTER
     93  d0fe
     94  d0fe		       ad 04 21 	      LDA	PDIR	;		     ;GET CURRENT DIRECTION
     95  d101		       0a		      ASL
     96  d102		       0a		      ASL		;			;MULTIPLY BY 4
     97  d103		       05 b0		      ORA	TEMP0	;		    ;ADD IN DIRECTION
     98  d105		       aa		      TAX
     99  d106		       bd 29 d4 	      LDA	PJOYTAB,X	;		;FIND NEW DIRECTION
    100  d109		       85 d0		      STA	NEWDIR	;		   ;AND STORE IT AWAY
    101  d10b
    102  d10b		       60	   PJOUT      RTS
    103  d10c
    104  d10c
    105  d10c							;*  MOVE THE MS PAC
    106  d10c		       ac 04 21    PACMOVE    LDY	PDIR	;		     ;MOVE THE PAC IN THE RIGHT DIRECTION
    107  d10f		       a6 62		      LDX	POFF
    108  d111		       98		      TYA
    109  d112		       29 01		      AND	#$01	;		     ;WILL BE NON-ZERO IF VERTICAL MOVE
    110  d114		       d0 24		      BNE	PMVERT
    111  d116
    112  d116		       ad 01 21 	      LDA	PHPOS	;		    ;MOVE HORIZONTALLY
    113  d119		       20 a6 e9 	      JSR	HPOSADJ
    114  d11c		       8d 01 21 	      STA	PHPOS
    115  d11f		       c9 83		      CMP	#RGHTEDGE	;		;CHECK FOR TUNNEL WRAP
    116  d121		       90 03		      BCC	PMHJMP0
    117  d123		       8d 0b 21 	      STA	PTUNNEL
    118  d126		       c9 1b	   PMHJMP0    CMP	#LEFTEDGE
    119  d128		       b0 03		      BCS	PMHJMP1
    120  d12a		       8d 0b 21 	      STA	PTUNNEL
    121  d12d
    122  d12d		       bd 13 d4    PMHJMP1    LDA	PVPOSADJ,X	;	       ;CENTER ADJUST VERTICALLY
    123  d130		       18		      CLC
    124  d131		       6d 00 21 	      ADC	PVPOS
    125  d134		       8d 00 21 	      STA	PVPOS
    126  d137		       4c 53 d1 	      JMP	PMOUT
    127  d13a
    128  d13a		       ad 00 21    PMVERT     LDA	PVPOS
    129  d13d		       20 ab e9 	      JSR	VPOSADJ	;		  ;MOVE VERTICALLY
    130  d140		       8d 00 21 	      STA	PVPOS
    131  d143
    132  d143		       ad 01 21 	      LDA	PHPOS	;		    ;CENTER ADJUST HORIZONTALLY
    133  d146		       29 03		      AND	#$03
    134  d148		       aa		      TAX
    135  d149		       bd 0f d4 	      LDA	PHPOSADJ,X
    136  d14c		       18		      CLC
    137  d14d		       6d 01 21 	      ADC	PHPOS
    138  d150		       8d 01 21 	      STA	PHPOS
    139  d153
    140  d153		       ad 01 21    PMOUT      LDA	PHPOS
    141  d156		       20 db e9 	      JSR	HTOC
    142  d159		       8d 03 21 	      STA	PCOL
    143  d15c		       ad 00 21    PACVTOZO   LDA	PVPOS	;		    ;OUTSIDE ENTRY TO SET ZONE AND OFFSET
    144  d15f		       20 e7 e9 	      JSR	VTOZO
    145  d162		       c8		      INY
    146  d163		       8c 02 21 	      STY	PZONE
    147  d166		       85 62		      STA	POFF
    148  d168		       60		      RTS
    149  d169
    150  d169
    151  d169							;*  THIS ROUTINE FINDS OUT IF THE PLAYER IS CHANGING DIRECTION IN TUNNEL
    152  d169		       a5 42	   PACDIRT    LDA	AUTOPLAY	;		 ;SEE IF WE ARE PLAYING
    153  d16b		       d0 17		      BNE	PDTOUT
    154  d16d
    155  d16d		       20 f2 d0 	      JSR	PACJOY	;		   ;GET A JOYSTICK DIRECTION
    156  d170
    157  d170		       a5 d0		      LDA	NEWDIR	;		   ;GET THE DIRECTION
    158  d172		       cd 04 21 	      CMP	PDIR	;		     ;SEE IF TURNED
    159  d175		       f0 0d		      BEQ	PDTOUT
    160  d177		       c9 04		      CMP	#DCENTER	;		 ;SEE IF CENTERED
    161  d179		       10 09		      BPL	PDTOUT
    162  d17b		       29 01		      AND	#$01	;		     ;MAKE SURE LEFT OR RIGHT
    163  d17d		       d0 05		      BNE	PDTOUT
    164  d17f
    165  d17f		       a5 d0		      LDA	NEWDIR
    166  d181		       8d 04 21 	      STA	PDIR	;		     ;GOOD - SET DIRECTION
    167  d184
    168  d184		       60	   PDTOUT     RTS
    169  d185
    170  d185
    171  d185							;*  MOVE THE MS PAC THROUGH THE TUNNEL
    172  d185		       ac 04 21    PACTUNNL   LDY	PDIR	;		     ;MOVE THE PAC IN THE RIGHT DIRECTION
    173  d188		       a6 62		      LDX	POFF
    174  d18a		       ad 01 21 	      LDA	PHPOS	;		    ;MOVE HORIZONTALLY
    175  d18d		       20 a6 e9 	      JSR	HPOSADJ
    176  d190		       8d 01 21 	      STA	PHPOS
    177  d193
    178  d193		       c0 00		      CPY	#DRIGHT
    179  d195		       f0 1a		      BEQ	PTRIGHT
    180  d197		       c9 13		      CMP	#LEFTWRAP	;		;MOVING LEFT
    181  d199		       b0 06		      BCS	PTLJMP0	;		  ;SEE IF WRAP TIME YET
    182  d19b		       18		      CLC
    183  d19c		       69 78		      ADC	#WRAPSIZE
    184  d19e		       8d 01 21 	      STA	PHPOS
    185  d1a1		       c9 83	   PTLJMP0    CMP	#RGHTEDGE	;		;SEE IF END OF TUNNEL
    186  d1a3		       b0 09		      BCS	PTLJMP1
    187  d1a5		       c9 50		      CMP	#80
    188  d1a7		       90 05		      BCC	PTLJMP1
    189  d1a9		       a9 00		      LDA	#$00
    190  d1ab		       8d 0b 21 	      STA	PTUNNEL
    191  d1ae		       4c 2d d1    PTLJMP1    JMP	PMHJMP1
    192  d1b1
    193  d1b1		       c9 8b	   PTRIGHT    CMP	#RGHTWRAP	;		;MOVING RIGHT
    194  d1b3		       90 06		      BCC	PTRJMP0	;		  ;SEE IF WRAP TIME YET
    195  d1b5		       38		      SEC
    196  d1b6		       e9 78		      SBC	#WRAPSIZE
    197  d1b8		       8d 01 21 	      STA	PHPOS
    198  d1bb		       c9 1b	   PTRJMP0    CMP	#LEFTEDGE	;		;SEE IF END OF TUNNEL
    199  d1bd		       90 09		      BCC	PTRJMP1
    200  d1bf		       c9 50		      CMP	#80
    201  d1c1		       b0 05		      BCS	PTRJMP1
    202  d1c3		       a9 00		      LDA	#$00
    203  d1c5		       8d 0b 21 	      STA	PTUNNEL
    204  d1c8		       4c 2d d1    PTRJMP1    JMP	PMHJMP1
    205  d1cb
    206  d1cb
    207  d1cb							;*  ADJUST THE MS PAC DISPLAY STATE
    208  d1cb		       ae 05 21    PACCHOMP   LDX	PDISP	;		    ;ADJUST MS PAC STATE
    209  d1ce		       30 08		      BMI	MPOPEN
    210  d1d0		       ca		      DEX		;			      ;MS PAC CLOSING
    211  d1d1		       d0 0c		      BNE	MPSDISP
    212  d1d3		       a2 80		      LDX	#$80
    213  d1d5		       4c df d1 	      JMP	MPSDISP
    214  d1d8		       e8	   MPOPEN     INX		;			      ;MS PAC OPENING
    215  d1d9		       e0 82		      CPX	#$82
    216  d1db		       d0 02		      BNE	MPSDISP
    217  d1dd		       a2 02		      LDX	#$02
    218  d1df		       8e 05 21    MPSDISP    STX	PDISP
    219  d1e2		       60		      RTS
    220  d1e3
    221  d1e3
    222  d1e3							;*  SEE IF ANYTHING GOOD TO EAT WHERE MS PAC IS
    223  d1e3		       ae 02 21    PACEAT     LDX	PZONE
    224  d1e6		       86 b0		      STX	TEMP0
    225  d1e8		       ad 03 21 	      LDA	PCOL
    226  d1eb		       85 b1		      STA	TEMP1
    227  d1ed		       20 0d f6 	      JSR	GETCHAR	;		  ;SEE WHAT IS UNDER HER
    228  d1f0		       c9 51		      CMP	#DOTCHAR	;		 ;SEE IF NORMAL DOT
    229  d1f2		       f0 17		      BEQ	PEATDOT
    230  d1f4		       29 fe		      AND	#$FE	;		     ;GET RID OF LEFT/RIGHT PARITY
    231  d1f6		       c9 52		      CMP	#EDOTCHAR	;		;SEE IF ENERGY DOT
    232  d1f8		       f0 01		      BEQ	PEATEDOT
    233  d1fa		       60		      RTS
    234  d1fb		       20 da da    PEATEDOT   JSR	TURNBLUE	;		 ;EATING AN ENERGY DOT
    235  d1fe		       a9 04		      LDA	#$04	;		     ;ADD 50 TO SCORE
    236  d200		       20 22 f6 	      JSR	ADDSCORE
    237  d203		       a9 03	   AAAAA      LDA	#3
    238  d205		       8d 0a 21 	      STA	PDELAY
    239  d208		       4c 1a d2 	      JMP	PECLEAR
    240  d20b		       a9 01	   PEATDOT    LDA	#$01	;		     ;EAT A DOT
    241  d20d		       20 22 f6 	      JSR	ADDSCORE	;		 ;ADD 10 TO SCORE
    242  d210		       a9 10		      LDA	#$10	;		     ;MAKE DOT MUNCH SOUND
    243  d212		       20 43 ea 	      JSR	DOTUNE
    244  d215		       a9 01		      LDA	#1
    245  d217		       8d 0a 21 	      STA	PDELAY
    246  d21a		       20 d6 d3    PECLEAR    JSR	SAVETIME	;		 ;FIRST - SAY A DOT WAS EATEN NOW
    247  d21d		       ae 02 21 	      LDX	PZONE
    248  d220		       86 b0		      STX	TEMP0
    249  d222		       ad 03 21 	      LDA	PCOL
    250  d225		       85 b1		      STA	TEMP1
    251  d227		       a2 50		      LDX	#BLNKCHAR	;		;CLEAR THE CURRENT POSITION
    252  d229		       20 f7 f5 	      JSR	PLOPCHAR
    253  d22c		       c6 af		      DEC	FDOTS
    254  d22e		       10 03		      BPL	PEDCONT
    255  d230		       20 1e d5 	      JSR	INITFRT
    256  d233		       c6 a8	   PEDCONT    DEC	DOTS	;		     ;ONE LESS DOT TO EAT - SEE IF RACK DONE
    257  d235		       d0 07		      BNE	PCCONT
    258  d237		       c6 a9		      DEC	DOTS+1	;		   ;SEE IF ALL OUT
    259  d239		       10 03		      BPL	PCCONT
    260  d23b		       4c 69 d2 	      JMP	PNEXTRCK	;		 ;RACK ALL OVER
    261  d23e		       e6 aa	   PCCONT     INC	DOTSEATN
    262  d240		       a9 00		      LDA	#0
    263  d242		       85 f8		      STA	TRELEASE
    264  d244
    265  d244		       a5 ab		      LDA	DEATHFLG
    266  d246		       f0 03		      BEQ	INCDOTZ
    267  d248		       e6 f7		      INC	EATNDOTS
    268  d24a		       60		      RTS
    269  d24b				   INCDOTZ
    270  d24b		       ad 3b 21 	      LDA	M0STATE+3
    271  d24e		       c9 04		      CMP	#MSTATPEN
    272  d250		       d0 16		      BNE	INCDTOUT
    273  d252		       ad 3a 21 	      LDA	M0STATE+2
    274  d255		       c9 04		      CMP	#MSTATPEN
    275  d257		       f0 03		      BEQ	INCDOTZ1
    276  d259		       e6 ae		      INC	GOLDDOTS
    277  d25b		       60		      RTS
    278  d25c		       ad 39 21    INCDOTZ1   LDA	M0STATE+1
    279  d25f		       c9 04		      CMP	#MSTATPEN
    280  d261		       f0 03		      BEQ	INCDOTZ2
    281  d263		       e6 ad		      INC	BLUEDOTS
    282  d265		       60		      RTS
    283  d266		       e6 ac	   INCDOTZ2   INC	PINKDOTS
    284  d268				   INCDTOUT
    285  d268		       60		      RTS
    286  d269		       4c 0a cd    PNEXTRCK   JMP	NEXTRACK	;		 ;ALL DONE
    287  d26c
    288  d26c
    289  d26c							;*  INITIALIZE THE MS PAC STATE
    290  d26c		       a9 81	   INITPAC    LDA	#INITVPOS	;		;SET VERTICAL POSITION AND ZONE
    291  d26e		       8d 00 21 	      STA	PVPOS
    292  d271		       20 e7 e9 	      JSR	VTOZO
    293  d274		       c8		      INY
    294  d275		       8c 02 21 	      STY	PZONE
    295  d278		       85 62		      STA	POFF
    296  d27a		       a9 4f		      LDA	#INITHPOS	;		;SET HORIZONTAL POSITION AND COLUMN
    297  d27c		       8d 01 21 	      STA	PHPOS
    298  d27f		       20 db e9 	      JSR	HTOC
    299  d282		       8d 03 21 	      STA	PCOL
    300  d285		       a9 02		      LDA	#DLEFT	;		   ;SET DIRECTION
    301  d287		       8d 04 21 	      STA	PDIR
    302  d28a		       85 d0		      STA	NEWDIR	;		   ;AND DEFAULT JOYSTICK DIRECTION
    303  d28c		       a9 01		      LDA	#$01	;		     ;SET DISPLAY STATE
    304  d28e		       8d 05 21 	      STA	PDISP
    305  d291		       8d 06 21 	      STA	PMOVING
    306  d294		       8d 0a 21 	      STA	PDELAY
    307  d297		       a9 00		      LDA	#$00
    308  d299		       8d 0b 21 	      STA	PTUNNEL
    309  d29c
    310  d29c		       20 a5 d2 	      JSR	PACSTAMP
    311  d29f		       20 b2 d2 	      JSR	WRITEPAC	;		 ;WRITE IT
    312  d2a2		       4c d6 d3 	      JMP	SAVETIME	;		 ;START TIME WITH NOW
    313  d2a5
    314  d2a5
    315  d2a5							;*  THIS ROUTINE SETS UP THE COLORS FOR MS PAC-MAN
    316  d2a5		       a9 1e	   PACSTAMP   LDA	#YELLOW	;		  ;SET MS PAC COLORS
    317  d2a7		       85 85		      STA	P1C1
    318  d2a9		       a9 57		      LDA	#PINK
    319  d2ab		       85 86		      STA	P1C2
    320  d2ad		       a9 00		      LDA	#BLACK
    321  d2af		       85 87		      STA	P1C3
    322  d2b1		       60		      RTS
    323  d2b2
    324  d2b2
    325  d2b2							;*  WRITE A MS PAC ON THE SCREEN
    326  d2b2		       ad 05 21    WRITEPAC   LDA	PDISP	;		    ;SET WHICH STAMP
    327  d2b5		       0a		      ASL
    328  d2b6		       0a		      ASL
    329  d2b7		       0d 04 21 	      ORA	PDIR	;		     ;A = MOUTH STATE;*4 + DIRECTION
    330  d2ba		       aa		      TAX
    331  d2bb		       bd df d3 	      LDA	PACSTMPL,X	;	       ;SET STAMP LISTS
    332  d2be		       85 68		      STA	SLLIST
    333  d2c0		       bd f7 d3 	      LDA	PACSTMPH,X
    334  d2c3		       85 6e		      STA	SHLIST
    335  d2c5
    336  d2c5		       ad 01 21 	      LDA	PHPOS	;		    ;SET HPOS, DO FLAG, AND LEAVE
    337  d2c8		       38		      SEC
    338  d2c9		       e9 03		      SBC	#$03
    339  d2cb		       85 56		      STA	HPLIST
    340  d2cd		       ae 02 21 	      LDX	PZONE
    341  d2d0		       ca		      DEX
    342  d2d1		       86 5c		      STX	VZLIST
    343  d2d3		       85 74		      STA	DOLIST
    344  d2d5		       60		      RTS
    345  d2d6
    346  d2d6
    347  d2d6							;*  ERASE THE MS PAC
    348  d2d6		       a9 b0	   ERASEPAC   LDA	#OFFSCRN	;		 ;PUT THE CHARACTER OFF SCREEN
    349  d2d8		       85 56		      STA	HPLIST
    350  d2da		       85 74		      STA	DOLIST
    351  d2dc		       60	   ADEND      RTS
    352  d2dd
    353  d2dd
    354  d2dd							;*  THIS ROUTINE GIVES A DIRECTION WHEN IN AUTO-PLAY MODE
    355  d2dd		       ad 01 21    AUTODIR    LDA	PHPOS	;		    ;SEE IF IN "CENTER" OF CHAR
    356  d2e0		       29 03		      AND	#$03
    357  d2e2		       c9 01		      CMP	#$01
    358  d2e4		       d0 f6		      BNE	ADEND
    359  d2e6		       a5 62		      LDA	POFF
    360  d2e8		       c9 03		      CMP	#$03
    361  d2ea		       d0 f0		      BNE	ADEND
    362  d2ec
    363  d2ec		       ae 02 21 	      LDX	PZONE	;		    ;SET UP FOR CHECKDIR
    364  d2ef		       86 b4		      STX	TEMP4
    365  d2f1		       ad 03 21 	      LDA	PCOL
    366  d2f4		       85 b5		      STA	TEMP5
    367  d2f6		       ad 04 21 	      LDA	PDIR
    368  d2f9		       85 b6		      STA	TEMP6
    369  d2fb
    370  d2fb		       20 13 f5 	      JSR	RAND	;		     ;PICK RANDOM CORNER AS DEFAULT GOAL
    371  d2fe		       29 03		      AND	#$03
    372  d300		       aa		      TAX
    373  d301		       bd 19 d4 	      LDA	RANDZONE,X
    374  d304		       85 b7		      STA	TEMP7
    375  d306		       bd 1d d4 	      LDA	RANDCOL,X
    376  d309		       85 b8		      STA	TEMP8
    377  d30b
    378  d30b		       a2 00		      LDX	#$00	;		     ;FIRST - SEE IF A MONSTER IS THE GOAL
    379  d30d		       bd 40 21    ADMLOOP    LDA	M0BLUE,X	;		 ;MAKE SURE IT IS BLUE AND NORMAL
    380  d310		       f0 14		      BEQ	ADMNEXT
    381  d312		       bd 38 21 	      LDA	M0STATE,X
    382  d315		       c9 00		      CMP	#MSTNORM
    383  d317		       d0 0d		      BNE	ADMNEXT
    384  d319		       bc 28 21 	      LDY	M0ZONE,X
    385  d31c		       84 b7		      STY	TEMP7
    386  d31e		       bd 2c 21 	      LDA	M0COL,X
    387  d321		       85 b8		      STA	TEMP8
    388  d323		       4c 79 d3 	      JMP	ADOUT
    389  d326		       e8	   ADMNEXT    INX
    390  d327		       e0 04		      CPX	#$04
    391  d329		       30 e2		      BMI	ADMLOOP
    392  d32b
    393  d32b		       a4 52		      LDY	RACKRAND	;		 ;GET OUR STARTING POWER DOT
    394  d32d		       a5 a5	   ADPLOOP    LDA	RACK
    395  d32f		       59 21 d4 	      EOR	RRZONE,Y
    396  d332		       aa		      TAX		;			      ;GET ZONE FOR THIS DOT
    397  d333		       bd 6a ff 	      LDA	EDZONE0,X
    398  d336		       85 b0		      STA	TEMP0
    399  d338		       a5 a5		      LDA	RACK
    400  d33a		       59 25 d4 	      EOR	RRCOL,Y
    401  d33d		       aa		      TAX		;			      ;GET COLUMN FOR THIS DOT
    402  d33e		       bd 72 ff 	      LDA	EDCOL0,X
    403  d341		       85 b1		      STA	TEMP1
    404  d343		       20 0d f6 	      JSR	GETCHAR	;		  ;SEE IF IT IS THERE
    405  d346		       29 fe		      AND	#$FE	;		     ;MIGHT BE FLASHED
    406  d348		       c9 52		      CMP	#EDOTCHAR
    407  d34a		       f0 0e		      BEQ	ADEDOT
    408  d34c		       c8		      INY		;			      ;CHECK NEXT DOT
    409  d34d		       c0 04		      CPY	#$04
    410  d34f		       30 02		      BMI	ADPJMP0
    411  d351		       a0 00		      LDY	#$00
    412  d353		       c4 52	   ADPJMP0    CPY	RACKRAND	;		 ;SEE IF WE"VE TRIED ALL DOTS
    413  d355		       d0 d6		      BNE	ADPLOOP
    414  d357		       4c 62 d3 	      JMP	ADFRUIT
    415  d35a
    416  d35a		       a5 b0	   ADEDOT     LDA	TEMP0	;		    ;FOUND A DOT
    417  d35c		       85 b7		      STA	TEMP7
    418  d35e		       a5 b1		      LDA	TEMP1
    419  d360		       85 b8		      STA	TEMP8
    420  d362
    421  d362		       ad 10 21    ADFRUIT    LDA	FENABLE	;		  ;SEE IF TRY FOR FRUIT
    422  d365		       f0 12		      BEQ	ADOUT
    423  d367		       ad 1b 21 	      LDA	FSCORE
    424  d36a		       d0 0d		      BNE	ADOUT
    425  d36c		       ae 13 21 	      LDX	FZONE
    426  d36f		       86 b7		      STX	TEMP7
    427  d371		       ad 14 21 	      LDA	FCOL
    428  d374		       85 b8		      STA	TEMP8
    429  d376		       4c 79 d3 	      JMP	ADOUT
    430  d379
    431  d379		       20 60 dd    ADOUT      JSR	CHECKDIR	;		 ;FIND VALID DIRECTIONS
    432  d37c		       c9 00		      CMP	#0
    433  d37e		       d0 06		      BNE	ADFINSH
    434  d380		       20 b1 dd 	      JSR	WHCHWAY	;		  ;FIND RIGHT DIRECTION
    435  d383		       8d 04 21 	      STA	PDIR	;		     ;STORE IT
    436  d386		       60	   ADFINSH    RTS
    437  d387
    438  d387
    439  d387							;*  THIS PUTS THE MS PAC THROUGH THE DEATH SEQUENCE
    440  d387		       20 8e ea    KILLPAC    JSR	CLEARTUN
    441  d38a		       20 12 f8 	      JSR	FINALDOT
    442  d38d		       20 da cd 	      JSR	WAIT
    443  d390		       a9 00		      LDA	#$00
    444  d392		       85 ab		      STA	DEATHFLG
    445  d394		       a9 01		      LDA	#$01
    446  d396		       8d 04 21 	      STA	PDIR	;		     ;MAKE HER POINT DOWN
    447  d399		       8d 05 21 	      STA	PDISP	;		    ;MAKE HER HALF OPEN
    448  d39c		       20 b2 d2 	      JSR	WRITEPAC
    449  d39f		       a9 0c		      LDA	#$0C	;		     ;MAKE DEATH SOUND
    450  d3a1		       20 43 ea 	      JSR	DOTUNE
    451  d3a4
    452  d3a4		       a2 05		      LDX	#$05
    453  d3a6		       a9 b0		      LDA	#OFFSCRN	;		 ;TURN EVERYTHING ELSE OFF THE SCREEN
    454  d3a8		       95 56	   KPCLLOOP   STA	HPLIST,X
    455  d3aa		       95 74		      STA	DOLIST,X
    456  d3ac		       ca		      DEX
    457  d3ad		       d0 f9		      BNE	KPCLLOOP
    458  d3af
    459  d3af		       a9 09		      LDA	#$09	;		     ;SPIN 2 1/2 TIMES
    460  d3b1		       85 b0		      STA	TEMP0
    461  d3b3		       a5 a1	   KPSLOOP    LDA	RTLOCAL+1	;		;SPIN MS PAC
    462  d3b5		       18		      CLC
    463  d3b6		       69 07		      ADC	#$07
    464  d3b8		       85 c0		      STA	TEMP16
    465  d3ba		       20 25 cb    KPSLLOOP   JSR	SEEBNORM
    466  d3bd		       a5 c0		      LDA	TEMP16
    467  d3bf		       c5 a1		      CMP	RTLOCAL+1	;		;WAIT FOR A BIT
    468  d3c1		       10 f7		      BPL	KPSLLOOP
    469  d3c3		       ee 04 21 	      INC	PDIR
    470  d3c6		       ad 04 21 	      LDA	PDIR
    471  d3c9		       29 03		      AND	#$03
    472  d3cb		       8d 04 21 	      STA	PDIR
    473  d3ce		       20 b2 d2 	      JSR	WRITEPAC
    474  d3d1		       c6 b0		      DEC	TEMP0
    475  d3d3		       10 de		      BPL	KPSLOOP
    476  d3d5		       60		      RTS
    477  d3d6
    478  d3d6
    479  d3d6							;*  THIS ROUTINE SAVES THE PRESENT TIME IN DOTTIME
    480  d3d6		       a5 a0	   SAVETIME   LDA	RTLOCAL
    481  d3d8		       85 f0		      STA	DOTTIME
    482  d3da		       a5 a1		      LDA	RTLOCAL+1
    483  d3dc		       85 f1		      STA	DOTTIME+1
    484  d3de		       60		      RTS
    485  d3df
    486  d3df
    487  d3df							;*  TABLES FOR PAC STAMPS
    488  d3df		       18 00 60 00*PACSTMPL   DC.W	<MSCHAR,<MSCHAR+$48,<MSCHAR+$90,<MSCHAR+$D8
    489  d3e7		       30 00 78 00*	      DC.W	<MSCHAR+$18,<MSCHAR+$60,<MSCHAR+$A8,<MSCHAR+$F0
    490  d3ef		       48 00 90 00*	      DC.W	<MSCHAR+$30,<MSCHAR+$78,<MSCHAR+$C0,<MSCHAR+$108
    491  d3f7		       c3 00 0b 01*PACSTMPH   DC.W	>MSCHAR,>MSCHAR+$48,>MSCHAR+$90,>MSCHAR+$D8
    492  d3ff		       db 00 23 01*	      DC.W	>MSCHAR+$18,>MSCHAR+$60,>MSCHAR+$A8,>MSCHAR+$F0
    493  d407		       f3 00 3b 01*	      DC.W	>MSCHAR+$30,>MSCHAR+$78,>MSCHAR+$C0,>MSCHAR+$108
    494  d40f
    495  d40f							;*  TABLES FOR CENTERING ADJUSTMENT
    496  d40f		       01 00 ff ff PHPOSADJ   DC.B	$01,$00,$FF,$FF
    497  d413		       02 02 01 00*PVPOSADJ   DC.B	$02,$02,$01,$00,$FF,$FE
    498  d419
    499  d419							;*  TABLES FOR RANDOM CORNERS
    500  d419		       00 1d 00 1d RANDZONE   DC.B	$00,$1D,$00,$1D
    501  d41d		       00 1b 00 1b RANDCOL    DC.B	$00,$1B,$00,$1B
    502  d421
    503  d421							;*  TABLES FOR GOING FROM E-DOT INDEX TO ZONE AND COL FOR THAT DOT
    504  d421		       00 00 04 04 RRZONE     DC.B	$00,$00,$04,$04
    505  d425		       00 04 00 04 RRCOL      DC.B	$00,$04,$00,$04
    506  d429
    507  d429							;*  TABLES FOR CONVERTING THE JOYSTICK FROM 8-WAY TO 4-WAY
    508  d429		       00 01 03 00 PJOYTAB    DC.B	DRIGHT,DDOWN,DUP,DRIGHT
    509  d42d		       01 01 02 00	      DC.B	DDOWN,DDOWN,DLEFT,DRIGHT
    510  d431		       01 02 02 03	      DC.B	DDOWN,DLEFT,DLEFT,DUP
    511  d435		       00 02 03 03	      DC.B	DRIGHT,DLEFT,DUP,DUP
    512  d439							; END
------- FILE MDOIT.ASM
------- FILE FRUIT.ASM LEVEL 2 PASS 2
      0  d439					      include	"FRUIT.ASM"
      1  d439					      processor	6502
      2  d439
      3  d439							;*  FRUIT.S	    ROUTINES FOR THE FRUIT
      4  d439
      5  d439
      6  d439							;*  MOVE THE FRUIT
      7  d439		       20 55 d4    MOVEFRT    JSR	SETFRT	;		   ;SET NEXT FRUIT MOVE
      8  d43c		       ad 10 21 	      LDA	FENABLE
      9  d43f		       f0 13		      BEQ	MFOUT
     10  d441		       ad 1b 21 	      LDA	FSCORE
     11  d444		       d0 06		      BNE	MFSCORE
     12  d446		       20 5d d4 	      JSR	FRTSOUND	;		 ;DO THE FRUIT SOUND, IF NEEDED
     13  d449		       4c 6d d4 	      JMP	FRTDIR	;		   ;SET THE DIRECTION
     14  d44c		       ce 1b 21    MFSCORE    DEC	FSCORE
     15  d44f		       d0 03		      BNE	MFOUT
     16  d451		       4c cf d5 	      JMP	CLEARFRT
     17  d454		       60	   MFOUT      RTS
     18  d455
     19  d455
     20  d455							;*  SET THE NEXT FRUIT MOVE
     21  d455		       a5 a1	   SETFRT     LDA	RTLOCAL+1
     22  d457		       18		      CLC
     23  d458		       69 05		      ADC	#WAITFRT
     24  d45a		       85 da		      STA	FRTWAIT
     25  d45c		       60		      RTS
     26  d45d
     27  d45d
     28  d45d							;*  THIS ROUTINE DOES THE BOUNCING SOUND FOR THE FRUIT
     29  d45d		       ce 1d 21    FRTSOUND   DEC	FSOUND	;		   ;SEE IF TIME FOR SOUND YET
     30  d460		       10 0a		      BPL	FSOUT
     31  d462		       a9 03		      LDA	#$03	;		     ;SET UP NEXT SOUND
     32  d464		       8d 1d 21 	      STA	FSOUND
     33  d467		       a9 0b		      LDA	#$0B	;		     ;MAKE FRUIT BOUNCE NOISE
     34  d469		       20 43 ea 	      JSR	DOTUNE
     35  d46c		       60	   FSOUT      RTS
     36  d46d
     37  d46d
     38  d46d							;*  THIS ROUTINE FINDS OUT WHAT DIRECTION TO MOVE
     39  d46d		       ad 17 21    FRTDIR     LDA	FCOUNT	;		   ;SEE IF IN "CENTER" OF CHAR
     40  d470		       29 03		      AND	#$03
     41  d472		       d0 3a		      BNE	FDEND
     42  d474		       ad 1c 21 	      LDA	FTUNNEL	;		  ;SEE IF FRUIT IN TUNNEL
     43  d477		       d0 35		      BNE	FDEND
     44  d479
     45  d479		       ad 13 21 	      LDA	FZONE	;		    ;SEE IF WE HAVE REACHED THE GOAL
     46  d47c		       cd 18 21 	      CMP	FGZONE
     47  d47f		       d0 0b		      BNE	FDIRCONT
     48  d481		       ad 14 21 	      LDA	FCOL
     49  d484		       cd 19 21 	      CMP	FGCOL
     50  d487		       d0 03		      BNE	FDIRCONT
     51  d489		       20 91 d5 	      JSR	FRTGOAL	;		  ;GET THE NEXT GOAL
     52  d48c
     53  d48c		       ae 13 21    FDIRCONT   LDX	FZONE	;		    ;SET UP FOR CALL ON WHCHWAY
     54  d48f		       86 b4		      STX	TEMP4
     55  d491		       ad 14 21 	      LDA	FCOL
     56  d494		       85 b5		      STA	TEMP5
     57  d496		       ad 15 21 	      LDA	FDIR
     58  d499		       85 b6		      STA	TEMP6
     59  d49b		       20 60 dd 	      JSR	CHECKDIR
     60  d49e		       ae 18 21 	      LDX	FGZONE
     61  d4a1		       86 b7		      STX	TEMP7
     62  d4a3		       ad 19 21 	      LDA	FGCOL
     63  d4a6		       85 b8		      STA	TEMP8
     64  d4a8		       20 b1 dd 	      JSR	WHCHWAY	;		  ;FIND OUT WHICH WAY TO GO
     65  d4ab		       8d 15 21 	      STA	FDIR	;		     ;NEW DIRECTION
     66  d4ae
     67  d4ae		       4c b4 d4    FDEND      JMP	FRTMOVE
     68  d4b1		       4c cf d5    FDCLEAR    JMP	CLEARFRT
     69  d4b4
     70  d4b4							;*  MOVE THE FRUIT
     71  d4b4		       ac 15 21    FRTMOVE    LDY	FDIR
     72  d4b7		       a6 63		      LDX	FOFF
     73  d4b9		       ad 12 21 	      LDA	FHPOS	;		    ;MOVE HORIZONTALLY
     74  d4bc		       20 a6 e9 	      JSR	HPOSADJ
     75  d4bf		       8d 12 21 	      STA	FHPOS
     76  d4c2		       ad 11 21 	      LDA	FVPOS	;		    ;MOVE VERTICALLY
     77  d4c5		       20 ab e9 	      JSR	VPOSADJ
     78  d4c8		       8d 11 21 	      STA	FVPOS
     79  d4cb
     80  d4cb		       ac 17 21 	      LDY	FCOUNT
     81  d4ce		       ad 11 21 	      LDA	FVPOS	;		    ;MOVING VERTICALLY
     82  d4d1		       18		      CLC
     83  d4d2		       79 2a d6 	      ADC	BOUNCTB,Y	;		;ADJUST FOR BOUNCE
     84  d4d5		       8d 11 21 	      STA	FVPOS
     85  d4d8
     86  d4d8		       88		      DEY		;			      ;ADJUST COUNT
     87  d4d9		       10 02		      BPL	FMJMP0
     88  d4db		       a0 03		      LDY	#$03
     89  d4dd		       8c 17 21    FMJMP0     STY	FCOUNT
     90  d4e0
     91  d4e0		       ad 12 21 	      LDA	FHPOS	;		    ;SEE IF IN TUNNEL OR OFF SCREEN
     92  d4e3		       c9 1b		      CMP	#LEFTEDGE
     93  d4e5		       b0 07		      BCS	FMCHKRGT
     94  d4e7		       c9 13		      CMP	#LEFTWRAP
     95  d4e9		       b0 0e		      BCS	FMTUNNEL
     96  d4eb		       4c cf d5 	      JMP	CLEARFRT	;		 ;OFF SCREEN - KILL IT
     97  d4ee		       c9 83	   FMCHKRGT   CMP	#RGHTEDGE
     98  d4f0		       90 0f		      BCC	FMNORMAL
     99  d4f2		       c9 8b		      CMP	#RGHTWRAP
    100  d4f4		       90 03		      BCC	FMTUNNEL
    101  d4f6		       4c cf d5 	      JMP	CLEARFRT	;		 ;OFF SCREEN - KILL IT
    102  d4f9
    103  d4f9		       a9 01	   FMTUNNEL   LDA	#$01	;		     ;MOVING THROUGH TUNNEL
    104  d4fb		       8d 1c 21 	      STA	FTUNNEL
    105  d4fe		       4c 0f d5 	      JMP	FMZONE	;		   ;ADJUST ZONE, BUT NOT COLUMN, COL BOGUS
    106  d501
    107  d501		       a9 00	   FMNORMAL   LDA	#$00	;		     ;MOVING AROUND MAZE
    108  d503		       8d 1c 21 	      STA	FTUNNEL
    109  d506		       ad 12 21 	      LDA	FHPOS	;		    ;SET COLUMN
    110  d509		       20 db e9 	      JSR	HTOC
    111  d50c		       8d 14 21 	      STA	FCOL
    112  d50f		       ad 11 21    FMZONE     LDA	FVPOS	;		    ;SET ZONE
    113  d512		       20 e7 e9 	      JSR	VTOZO
    114  d515		       c8		      INY
    115  d516		       8c 13 21 	      STY	FZONE
    116  d519		       85 63		      STA	FOFF
    117  d51b
    118  d51b		       4c db d5 	      JMP	WRITEFRT
    119  d51e
    120  d51e
    121  d51e							;*  INITIALIZE THE FRUIT STATE
    122  d51e		       ad 10 21    INITFRT    LDA	FENABLE	;		  ;MAKE SURE FRUIT IS NOT ON YET
    123  d521		       d0 69		      BNE	IFOUT
    124  d523		       a9 01		      LDA	#$01
    125  d525		       8d 10 21 	      STA	FENABLE	;		  ;ENABLE
    126  d528		       8d 1c 21 	      STA	FTUNNEL	;		  ;STARTING IN TUNNEL
    127  d52b		       a9 00		      LDA	#$00
    128  d52d		       8d 1a 21 	      STA	FGCOUNT
    129  d530		       8d 1b 21 	      STA	FSCORE
    130  d533		       8d 1d 21 	      STA	FSOUND
    131  d536		       a9 02		      LDA	#$02
    132  d538		       8d 17 21 	      STA	FCOUNT
    133  d53b
    134  d53b		       a5 a6		      LDA	LEVEL	;		    ;SET FRUIT TYPE
    135  d53d		       c9 08		      CMP	#$08
    136  d53f		       30 09		      BMI	IFCONT
    137  d541		       20 13 f5    IFRAND     JSR	RAND	;		     ;RANDOM FRUIT
    138  d544		       29 07		      AND	#$07
    139  d546		       c5 40		      CMP	STLEVEL
    140  d548		       30 f7		      BMI	IFRAND	;		   ;NO RANDOM FRUIT BELOW WHAT YOU STARTED
    141  d54a		       8d 16 21    IFCONT     STA	FFRUIT
    142  d54d
    143  d54d		       20 13 f5 	      JSR	RAND	;		     ;RANDOM TUNNEL TO COME THROUGH
    144  d550		       29 01		      AND	#$01	;		     ;SET STARTING ZONE
    145  d552		       85 b0		      STA	TEMP0
    146  d554		       a5 a5		      LDA	RACK
    147  d556		       0a		      ASL
    148  d557		       05 b0		      ORA	TEMP0	;		    ;A = 2;*RACK + [0..1], INDEX TO TUNNEL
    149  d559		       aa		      TAX
    150  d55a		       a9 02		      LDA	#$02	;		     ;SET OFFSET
    151  d55c		       85 63		      STA	FOFF
    152  d55e		       bd 65 d6 	      LDA	TNLZONE,X	;		;SET ZONE
    153  d561		       8d 13 21 	      STA	FZONE
    154  d564		       20 f5 e9 	      JSR	ZTOV
    155  d567		       38		      SEC
    156  d568		       e9 04		      SBC	#$04	;		     ;SET VPOS
    157  d56a		       8d 11 21 	      STA	FVPOS
    158  d56d
    159  d56d		       20 13 f5 	      JSR	RAND	;		     ;SET STARTING COLUMN/DIRECTION
    160  d570		       29 02		      AND	#$02	;		     ;EITHER 0 (RIGHT) OR 2 (LEFT)
    161  d572		       8d 15 21 	      STA	FDIR	;		     ;SET DIR
    162  d575		       4a		      LSR		;			;EITHER 0 (LEFT COL) OR 1 (RIGHT COL)
    163  d576		       aa		      TAX
    164  d577		       bd 6d d6 	      LDA	TNLCOL,X
    165  d57a		       8d 14 21 	      STA	FCOL	;		     ;SET COL
    166  d57d		       bd 6f d6 	      LDA	TNLHPOS,X
    167  d580		       8d 12 21 	      STA	FHPOS	;		    ;SET HPOS
    168  d583
    169  d583		       20 91 d5 	      JSR	FRTGOAL	;		  ;GET A GOAL
    170  d586
    171  d586		       20 ec d5 	      JSR	FRTSTAMP	;		 ;SET THE STAMP
    172  d589		       20 db d5 	      JSR	WRITEFRT	;		 ;WRITE IT
    173  d58c
    174  d58c		       a9 70	   IFOUT      LDA	#$70
    175  d58e		       85 af		      STA	FDOTS	;		    ;SET UP THE NEXT FRUIT
    176  d590		       60		      RTS
    177  d591
    178  d591
    179  d591							;*  THIS ROUTINE FINDS THE NEXT GOAL FOR THE FRUIT
    180  d591							;*  RETURN VALUE IS BOTH 0 IN X AND THE EQ BIT SET WHEN NO MORE GOALS TO BE HAD
    181  d591		       ae 1a 21    FRTGOAL    LDX	FGCOUNT
    182  d594		       e0 04		      CPX	#$04
    183  d596		       10 36		      BPL	FGOUT
    184  d598		       e0 03		      CPX	#$03
    185  d59a		       10 11		      BPL	FGLEAVE
    186  d59c		       bd 81 d6 	      LDA	GOALZONE,X	;	       ;GET NEXT GOAL
    187  d59f		       8d 18 21 	      STA	FGZONE
    188  d5a2		       bd 84 d6 	      LDA	GOALCOL,X
    189  d5a5		       8d 19 21 	      STA	FGCOL
    190  d5a8		       e8		      INX
    191  d5a9		       8e 1a 21 	      STX	FGCOUNT
    192  d5ac		       60		      RTS
    193  d5ad		       20 13 f5    FGLEAVE    JSR	RAND	;		     ;GET A RANDOM TUNNEL TO LEAVE
    194  d5b0		       29 03		      AND	#$03	;		     ;	GET THE COLUMN FIRST
    195  d5b2		       85 b0		      STA	TEMP0
    196  d5b4		       a5 a5		      LDA	RACK
    197  d5b6		       0a		      ASL
    198  d5b7		       0a		      ASL
    199  d5b8		       05 b0		      ORA	TEMP0	;		    ;A = 3;*RACK + [0..3], INDEX TO TUNNEL
    200  d5ba		       a8		      TAY
    201  d5bb		       b9 71 d6 	      LDA	TNLCOLG,Y
    202  d5be		       8d 19 21 	      STA	FGCOL
    203  d5c1		       98		      TYA		;			      ;GET THE ZONE
    204  d5c2		       4a		      LSR
    205  d5c3		       a8		      TAY
    206  d5c4		       b9 65 d6 	      LDA	TNLZONE,Y
    207  d5c7		       8d 18 21 	      STA	FGZONE
    208  d5ca		       e8		      INX
    209  d5cb		       8e 1a 21 	      STX	FGCOUNT
    210  d5ce		       60	   FGOUT      RTS
    211  d5cf
    212  d5cf
    213  d5cf							;*  CLEAR FRUIT
    214  d5cf		       a9 00	   CLEARFRT   LDA	#$00
    215  d5d1		       8d 10 21 	      STA	FENABLE
    216  d5d4
    217  d5d4
    218  d5d4							;*  ERASE THE FRUIT
    219  d5d4		       a9 b0	   ERASEFRT   LDA	#OFFSCRN	;		 ;SET HPOS AND DOLIST
    220  d5d6		       85 57		      STA	HPLIST+1
    221  d5d8		       85 75		      STA	DOLIST+1
    222  d5da		       60		      RTS
    223  d5db
    224  d5db
    225  d5db							;*  WRITE A FRUIT ON THE SCREEN
    226  d5db		       ad 12 21    WRITEFRT   LDA	FHPOS	;		    ;SET HPOS AND DOLIST
    227  d5de		       38		      SEC
    228  d5df		       e9 03		      SBC	#$03
    229  d5e1		       85 57		      STA	HPLIST+1
    230  d5e3		       ae 13 21 	      LDX	FZONE
    231  d5e6		       ca		      DEX
    232  d5e7		       86 5d		      STX	VZLIST+1
    233  d5e9		       85 75		      STA	DOLIST+1
    234  d5eb		       60		      RTS
    235  d5ec
    236  d5ec
    237  d5ec							;*  PUT THE RIGHT FRUIT STAMPS INTO STAMPS
    238  d5ec		       ae 16 21    FRTSTAMP   LDX	FFRUIT	;		   ;WHICH ONE IT IS
    239  d5ef		       bd 2e d6 	      LDA	FLSTAMP,X	;		;SET STAMP
    240  d5f2		       85 69		      STA	SLLIST+1
    241  d5f4		       bd 36 d6 	      LDA	FHSTAMP,X
    242  d5f7		       85 6f		      STA	SHLIST+1
    243  d5f9		       bc 4e d6 	      LDY	FPALETTE,X
    244  d5fc		       b9 56 d6 	      LDA	FCOLOR1,Y	;		;SET PALETTE FOR FRUIT
    245  d5ff		       85 89		      STA	P2C1
    246  d601		       b9 5b d6 	      LDA	FCOLOR2,Y
    247  d604		       85 8a		      STA	P2C2
    248  d606		       b9 60 d6 	      LDA	FCOLOR3,Y
    249  d609		       85 8b		      STA	P2C3
    250  d60b		       60		      RTS
    251  d60c
    252  d60c
    253  d60c							;*  EAT THE FRUIT - MAKE IT GO AWAY
    254  d60c		       ae 16 21    EATFRT     LDX	FFRUIT
    255  d60f		       bd 3e d6 	      LDA	NLSTAMP,X	;		;SET STAMP
    256  d612		       85 69		      STA	SLLIST+1
    257  d614		       bd 46 d6 	      LDA	NHSTAMP,X
    258  d617		       85 6f		      STA	SHLIST+1
    259  d619		       85 75		      STA	DOLIST+1
    260  d61b
    261  d61b		       a9 eb		      LDA	#LTGREEN
    262  d61d		       85 8b		      STA	P2C3
    263  d61f
    264  d61f		       a9 10		      LDA	#$10	;		     ;SET TIME FOR IT TO STAY
    265  d621		       8d 1b 21 	      STA	FSCORE
    266  d624
    267  d624		       a9 12		      LDA	#$12	;		     ;MAKE FRUIT EAT SOUND
    268  d626		       20 43 ea 	      JSR	DOTUNE
    269  d629		       60		      RTS
    270  d62a
    271  d62a
    272  d62a							;*  TABLE TO CONTROL FRUIT BOUNCING
    273  d62a		       ff ff 01 01 BOUNCTB    DC.B	$FF,$FF,$01,$01
    274  d62e
    275  d62e							;*  TABLES TO SET FRUIT STAMPS AND FRUIT NUMBER STAMPS
    276  d62e		       68 80 98    FLSTAMP    DC.B	<FRUITCHR,<FRUITCHR+$18,<FRUITCHR+$30
    277  d631		       b0 c8 e0 	      DC.B	<FRUITCHR+$48,<FRUITCHR+$60,<FRUITCHR+$78
FRUIT.ASM (278): error: Value in 'byte dc 272' must be <$100.
    278  d634		       f8 10		      DC.B	<FRUITCHR+$90,<FRUITCHR+$A8
    279  d636		       c7 df f7    FHSTAMP    DC.B	>FRUITCHR,>FRUITCHR+$18,>FRUITCHR+$30
FRUIT.ASM (280): error: Value in 'byte dc 271' must be <$100.
FRUIT.ASM (280): error: Value in 'byte dc 295' must be <$100.
FRUIT.ASM (280): error: Value in 'byte dc 319' must be <$100.
    280  d639		       0f 27 3f 	      DC.B	>FRUITCHR+$48,>FRUITCHR+$60,>FRUITCHR+$78
FRUIT.ASM (281): error: Value in 'byte dc 343' must be <$100.
FRUIT.ASM (281): error: Value in 'byte dc 367' must be <$100.
    281  d63c		       57 6f		      DC.B	>FRUITCHR+$90,>FRUITCHR+$A8
    282  d63e		       28 40 58    NLSTAMP    DC.B	<FRUITNUM,<FRUITNUM+$18,<FRUITNUM+$30
    283  d641		       70 88 a0 	      DC.B	<FRUITNUM+$48,<FRUITNUM+$60,<FRUITNUM+$78
    284  d644		       b8 d0		      DC.B	<FRUITNUM+$90,<FRUITNUM+$A8
    285  d646		       c8 e0 f8    NHSTAMP    DC.B	>FRUITNUM,>FRUITNUM+$18,>FRUITNUM+$30
FRUIT.ASM (286): error: Value in 'byte dc 272' must be <$100.
FRUIT.ASM (286): error: Value in 'byte dc 296' must be <$100.
FRUIT.ASM (286): error: Value in 'byte dc 320' must be <$100.
    286  d649		       10 28 40 	      DC.B	>FRUITNUM+$48,>FRUITNUM+$60,>FRUITNUM+$78
FRUIT.ASM (287): error: Value in 'byte dc 344' must be <$100.
FRUIT.ASM (287): error: Value in 'byte dc 368' must be <$100.
    287  d64c		       58 70		      DC.B	>FRUITNUM+$90,>FRUITNUM+$A8
    288  d64e
    289  d64e							;*  TABLES TO SET FRUIT COLORS
    290  d64e		       00 00 01 02*FPALETTE   DC.B	0,0,1,2,0,0,3,4
    291  d656		       32 32 35 e7*FCOLOR1    DC.B	RED,RED,ORANGE,GREEN,YELLOW
    292  d65b		       0c 0c 15 0c*FCOLOR2    DC.B	WHITE,WHITE,BROWN,WHITE,BLACK
    293  d660		       15 e7 e7 15*FCOLOR3    DC.B	BROWN,GREEN,GREEN,BROWN,BLACK
    294  d665
    295  d665							;*  TABLES TO SET TUNNEL ENTRANCES
    296  d665		       07 10 01 16 TNLZONE    DC.B	$07,$10,$01,$16
    297  d669		       08 08 0c 0f	      DC.B	$08,$08,$0C,$0F
    298  d66d		       00 1b	   TNLCOL     DC.B	$00,$1B
    299  d66f		       13 8b	   TNLHPOS    DC.B	LEFTWRAP,RGHTWRAP
    300  d671		       02 19 02 19*TNLCOLG    DC.B	$02,$19,$02,$19,$05,$16,$02,$19
    301  d679		       00 1b 00 1b*	      DC.B	$00,$1B,$00,$1B,$03,$18,$03,$18
    302  d681
    303  d681							;*  TABLES FOR FRUIT GOALS
    304  d681		       10 0a 10    GOALZONE   DC.B	$10,$0A,$10
    305  d684		       0f 10 0f    GOALCOL    DC.B	$0F,$10,$0F
    306  d687							; END
------- FILE MDOIT.ASM
     52  d688		       00		      align	2
------- FILE MONSTER.ASM LEVEL 2 PASS 2
      0  d688					      include	"MONSTER.ASM"
      1  d688					      processor	6502
      2  d688							;*
      3  d688							;*  MONSTER.S	     BASIC MONSTER CODE FOR MS PAC-MAN
      4  d688							;*
      5  d688
      6  d688							;* SETMON, SET THE NEXT INTERUPT
      7  d688				   SETMON
      8  d688		       a5 a1		      LDA	RTLOCAL+1
      9  d68a		       18		      CLC
     10  d68b		       69 01		      ADC	#WAITMON
     11  d68d		       85 d8		      STA	MONWAIT
     12  d68f		       60		      RTS
     13  d690
     14  d690							;* MAIN LOOP FOR MONSTER ALGORITM, JUST CALL DOMONSTR WITH X=3->0
     15  d690		       20 a2 d6    MONSTER    JSR	MONTUNE
     16  d693		       20 b2 d6 	      JSR	MONBEFOR
     17  d696		       18		      CLC
     18  d697		       a2 03		      LDX	#3
     19  d699		       20 e6 d6    MONSTRLP   JSR	MONLOOP	;		  ; TOP OF MONSTER LOOP
     20  d69c		       ca		      DEX
     21  d69d		       10 fa		      BPL	MONSTRLP
     22  d69f		       4c e0 d6 	      JMP	MONAFTER
     23  d6a2
     24  d6a2
     25  d6a2							;*  MAKE SURE THE MONSTER TUNE IS PLAYING
     26  d6a2		       a9 0a	   MONTUNE    LDA	#$0A
     27  d6a4		       cd 04 1d 	      CMP	TUNINDEX	;		 ;MAKE SURE IT ISN"T PLAYING
     28  d6a7		       f0 08		      BEQ	MTOUT
     29  d6a9		       cd 05 1d 	      CMP	TUNINDEX+1
     30  d6ac		       f0 03		      BEQ	MTOUT
     31  d6ae		       20 43 ea 	      JSR	DOTUNE	;		   ;JUST TRY TO PUT IT OUT
     32  d6b1		       60	   MTOUT      RTS
     33  d6b2
     34  d6b2
     35  d6b2							;* MONBEFOR	    -STUFF AT TOP OF MONSTER LOOP
     36  d6b2							;*
     37  d6b2
     38  d6b2		       20 88 d6    MONBEFOR   JSR	SETMON
     39  d6b5		       20 d8 de 	      JSR	INCMSPED
     40  d6b8		       a5 fd		      LDA	ISBLUE
     41  d6ba		       20 5b dc 	      JSR	CHKBLUE	;		  ;SEE IF TIME TO DO SOMETHING WITH BLUE
     42  d6bd		       a5 dc		      LDA	BLUWAIT	;		  ;DO NOT CHECK FOR REVERSAL IF BLUE
     43  d6bf		       d0 1e		      BNE	MOREMON
     44  d6c1				   NOTBLUE
     45  d6c1		       e6 fc		      INC	NORMTIME+1
     46  d6c3		       d0 02		      BNE	CHKREV
     47  d6c5		       e6 fb		      INC	NORMTIME
     48  d6c7				   CHKREV
     49  d6c7		       a5 fb		      LDA	NORMTIME
     50  d6c9		       cd 6c 21 	      CMP	REVWAIT
     51  d6cc		       90 11		      BCC	MOREMON
     52  d6ce
     53  d6ce		       a5 fc		      LDA	NORMTIME+1
     54  d6d0		       cd 6d 21 	      CMP	REVWAIT+1
     55  d6d3		       90 0a		      BCC	MOREMON
     56  d6d5
     57  d6d5		       ad 6c 21 	      LDA	REVWAIT
     58  d6d8		       c9 ff		      CMP	#$FF
     59  d6da		       f0 03		      BEQ	MOREMON
     60  d6dc
     61  d6dc		       4c 4c db 	      JMP	MONFLIP
     62  d6df
     63  d6df				   MOREMON
     64  d6df		       60	   MONLPEND   RTS
     65  d6e0
     66  d6e0							;* MONAFTER	    -STUFF AT BOTTOM OF MONSTER LOOP
     67  d6e0							;*
     68  d6e0
     69  d6e0				   MONAFTER
     70  d6e0		       20 4e e0 	      JSR	PMINTR
     71  d6e3		       4c 72 db 	      JMP	RELEASE
     72  d6e6
     73  d6e6							;* MONLOOP	    - MONSTER PROCESSING LOOP
     74  d6e6							;*	    IN:     X IS THE MONSTER NUMBER
     75  d6e6							;*	    OUT:
     76  d6e6							;*	    USES:   EVERYTHING EXCEPT X
     77  d6e6
     78  d6e6		       20 0e df    MONLOOP    JSR	CHKMON	;		   ; TOP OF MONSTER LOOP
     79  d6e9		       f0 f4		      BEQ	MONLPEND	;		 ;JUST AN RTS
     80  d6eb
     81  d6eb		       bd 38 21 	      LDA	M0STATE,X	;		; CHECK THE MONSTER STATE
     82  d6ee		       c9 02		      CMP	#MSTLVPEN
     83  d6f0		       30 03		      BMI	MONSTR1
     84  d6f2		       4c 5a d8 	      JMP	MMVPEN	;		   ; IT"S IN THE PEN, SO SPCL CASE IT
     85  d6f5				   MONSTR1
     86  d6f5		       b5 64		      LDA	M0OFF,X	;		  ;MAKE SURE WE ARE AT THE CENTER
     87  d6f7		       c9 03		      CMP	#3
     88  d6f9		       d0 2c		      BNE	MONSTRMV
     89  d6fb		       bd 24 21 	      LDA	M0HPOS,X
     90  d6fe		       29 03		      AND	#3
     91  d700		       c9 01		      CMP	#1
     92  d702		       d0 23		      BNE	MONSTRMV
     93  d704		       bd 4c 21 	      LDA	M0FLIP,X	;		 ;SEE IF MONSTER IS TO BE FLIPPED
     94  d707		       f0 0f		      BEQ	MONSTRZZ
     95  d709		       bd 30 21 	      LDA	M0DIR,X
     96  d70c		       49 02		      EOR	#$02
     97  d70e		       9d 30 21 	      STA	M0DIR,X
     98  d711		       a9 00		      LDA	#$00
     99  d713		       9d 4c 21 	      STA	M0FLIP,X
    100  d716		       f0 0f		      BEQ	MONSTRMV	;		 ;DO NOT CHECK FOR TURN IF FLIPPED
    101  d718		       bd 48 21    MONSTRZZ   LDA	M0TUNNEL,X	;	       ;SEE IF IN TUNNEL, IF SO JUST MOVE
    102  d71b		       d0 0a		      BNE	MONSTRMV
    103  d71d		       20 c3 dc 	      JSR	MNCHKDIR	;		 ; FIND OUT IF WE ARE AT INTERSECT
    104  d720		       c9 00		      CMP	#0
    105  d722		       d0 03		      BNE	MONSTRMV	;		 ;IF WE ARE NOT, JUST MOVE
    106  d724		       20 2a d7 	      JSR	MONNEWDR	;		 ;GET NEW DIRECTION
    107  d727		       4c da d8    MONSTRMV   JMP	MOVEMON	;		  ; MOVE THE MONSTER
    108  d72a
    109  d72a							;* WE NEED A NEW DIRECTION FOR THIS MONSTER
    110  d72a		       bd 38 21    MONNEWDR   LDA	M0STATE,X	;		;LOOK AT THE STATE AGAIN
    111  d72d		       c9 00		      CMP	#MSTNORM
    112  d72f		       d0 12		      BNE	MONSTR2
    113  d731		       bd 40 21 	      LDA	M0BLUE,X	;		 ; SEE IF IS IS BLUE
    114  d734		       f0 03		      BEQ	MONSTR3
    115  d736		       4c 46 d7 	      JMP	MMVBLUE
    116  d739		       a5 ff	   MONSTR3    LDA	BORED	;		    ; SEE IF IT"S BORED
    117  d73b		       f0 03		      BEQ	MONSTR5
    118  d73d		       4c 61 d7 	      JMP	MMVBORED
    119  d740		       4c 8e d7    MONSTR5    JMP	MMVINTER	;		 ; ELSE IT"S INTERESTED
    120  d743		       4c 56 d7    MONSTR2    JMP	MMVEYES	;		  ; IT"S EYES
    121  d746
    122  d746
    123  d746							;* MMVBLUE	    - BLUE MONSTER MOVEMENT
    124  d746							;*	    IN:     X IS MONSTER NUMBER, TEMP12-15 IS INTERSECTION STATE
    125  d746							;*	    OUT:
    126  d746							;*	    USE: EVERYTHING EXCEPT X
    127  d746
    128  d746		       20 13 f5    MMVBLUE    JSR	RAND
    129  d749		       29 03		      AND	#3
    130  d74b		       a8		      TAY
    131  d74c		       b9 bc 00 	      LDA	TEMP12,Y
    132  d74f		       d0 f5		      BNE	MMVBLUE
    133  d751		       98		      TYA
    134  d752		       9d 30 21 	      STA	M0DIR,X
    135  d755		       60		      RTS
    136  d756
    137  d756							;* MMVEYES	    - EYES MONSTER MOVEMENT
    138  d756							;*	    IN:     X IS MONSTER NUMBER, TEMP12-15 IS INTERSECTION STATE
    139  d756							;*	    OUT:
    140  d756							;*	    USE: EVERYTHING EXCEPT X
    141  d756
    142  d756		       a9 0a	   MMVEYES    LDA	#$0A
    143  d758		       85 b7		      STA	TEMP7
    144  d75a		       a9 0f		      LDA	#$0F
    145  d75c		       85 b8		      STA	TEMP8
    146  d75e		       4c 44 d8 	      JMP	STWHCHWY
    147  d761
    148  d761							;* MMVBORED	    - BORED MONSTER MOVEMENT
    149  d761							;*	    IN:     X CONTAINS MONSTER NUMBER, TEMP12-15 CONTAISN INTERSECT STATE
    150  d761							;*	    OUT:    M0DIR,X IS SET TO NEW DIRECTION
    151  d761							;*	    USES:   EVERYTHING EXCEPT X
    152  d761
    153  d761		       8a	   MMVBORED   TXA
    154  d762		       c9 02		      CMP	#02
    155  d764		       f0 12		      BEQ	MMVBORD1
    156  d766		       10 1b		      BPL	MMVBORD2
    157  d768
    158  d768		       20 13 f5    MMVBORD3   JSR	RAND	;		     ; RED AND PINK
    159  d76b		       29 03		      AND	#3
    160  d76d		       a8		      TAY
    161  d76e		       b9 bc 00 	      LDA	TEMP12,Y
    162  d771		       d0 f5		      BNE	MMVBORD3
    163  d773		       98		      TYA
    164  d774		       9d 30 21 	      STA	M0DIR,X
    165  d777		       60		      RTS
    166  d778
    167  d778		       a9 1c	   MMVBORD1   LDA	#$1C
    168  d77a		       85 b7		      STA	TEMP7
    169  d77c		       a9 1a		      LDA	#$1A
    170  d77e		       85 b8		      STA	TEMP8
    171  d780		       4c 8b d7 	      JMP	MMVBORD4
    172  d783
    173  d783				   MMVBORD2		;				 ;GOLD
    174  d783		       a9 1c		      LDA	#$1C
    175  d785		       85 b7		      STA	TEMP7
    176  d787		       a9 01		      LDA	#$01
    177  d789		       85 b8		      STA	TEMP8
    178  d78b
    179  d78b		       4c 44 d8    MMVBORD4   JMP	STWHCHWY
    180  d78e
    181  d78e							;* MMVINTER	    - INTERESTED MONSTER MOVEMENT
    182  d78e							;*	    IN:     X HAS MONSTER NUMBER, TEMP12-15 HAS INTERSECTION STATE
    183  d78e							;*	    OUT:    M0DIR,X IS SET TO NEW DIRECTION
    184  d78e							;*	    USED:   EVERYTHING EXCEPT X
    185  d78e
    186  d78e		       8a	   MMVINTER   TXA
    187  d78f		       c9 02		      CMP	#2
    188  d791		       f0 54		      BEQ	MMVINTR1
    189  d793		       10 74		      BPL	MMVINTR3
    190  d795		       c9 01		      CMP	#1
    191  d797		       f0 36		      BEQ	MMVINTR2
    192  d799
    193  d799		       ad 3b 21 	      LDA	M0STATE+3	;		;SEE IF GOLD GUY IN NORMAL STATE
    194  d79c		       c9 00		      CMP	#MSTNORM	;		 ;  IF NOT, RED GUY MOVES NORMAL
    195  d79e		       d0 1d		      BNE	REDSPD2
    196  d7a0		       a9 f0		      LDA	#$F0
    197  d7a2		       38		      SEC
    198  d7a3		       e5 aa		      SBC	DOTSEATN
    199  d7a5		       c5 fa		      CMP	REDTHRSH+1
    200  d7a7		       b0 08		      BCS	REDSPD1
    201  d7a9		       a9 04		      LDA	#SPDRED2
    202  d7ab		       8d 44 21 	      STA	M0SPEED	;		  ;RED GUY MOVING FASTEST
    203  d7ae		       4c c2 d7 	      JMP	REDSPD3
    204  d7b1				   REDSPD1
    205  d7b1		       c5 f9		      CMP	REDTHRSH
    206  d7b3		       b0 08		      BCS	REDSPD2
    207  d7b5		       a9 03		      LDA	#SPDRED1	;		 ;RED GUY MOVING FASTER
    208  d7b7		       8d 44 21 	      STA	M0SPEED
    209  d7ba		       4c c2 d7 	      JMP	REDSPD3
    210  d7bd				   REDSPD2
    211  d7bd		       a9 00		      LDA	#SPDNORM	;		 ;RED GUY MOVING NORMAL SPEED
    212  d7bf		       8d 44 21 	      STA	M0SPEED
    213  d7c2				   REDSPD3
    214  d7c2
    215  d7c2		       ad 02 21 	      LDA	PZONE	;		    ; RED
    216  d7c5		       85 b7		      STA	TEMP7
    217  d7c7		       ad 03 21 	      LDA	PCOL
    218  d7ca		       85 b8		      STA	TEMP8
    219  d7cc		       4c 41 d8 	      JMP	MMVINTR4
    220  d7cf
    221  d7cf				   MMVINTR2
    222  d7cf		       ac 04 21 	      LDY	PDIR	;		     ; PINK
    223  d7d2		       ad 02 21 	      LDA	PZONE
    224  d7d5		       18		      CLC
    225  d7d6		       79 00 dd 	      ADC	DIROFFZ4,Y
    226  d7d9		       85 b7		      STA	TEMP7
    227  d7db		       ad 03 21 	      LDA	PCOL
    228  d7de		       18		      CLC
    229  d7df		       79 04 dd 	      ADC	DIROFFC4,Y
    230  d7e2		       85 b8		      STA	TEMP8
    231  d7e4		       4c 41 d8 	      JMP	MMVINTR4
    232  d7e7
    233  d7e7		       ac 04 21    MMVINTR1   LDY	PDIR	;		     ;BLUE - GOAL ON OTHER SIDE OF MS FROM R
    234  d7ea		       b9 08 dd 	      LDA	DIROFFZ2,Y	;	       ;START WITH THE OFFSET TO LOOK AHEAD
    235  d7ed		       18		      CLC
    236  d7ee		       6d 02 21 	      ADC	PZONE	;		    ;ADD TO MS PAC"S ZONE
    237  d7f1		       0a		      ASL
    238  d7f2		       38		      SEC
    239  d7f3		       ed 28 21 	      SBC	M0ZONE	;		   ;SUBTRACT RED MONSTER"S ZONE
    240  d7f6		       85 b7		      STA	TEMP7	;		    ;= ADJ MS - (DELTA BETWEEN MS AND RED)
    241  d7f8		       b9 0c dd 	      LDA	DIROFFC2,Y	;	       ;START WITH THE OFFSET TO LOOK AHEAD
    242  d7fb		       18		      CLC
    243  d7fc		       6d 03 21 	      ADC	PCOL	;		     ;ADD TO MS PAC"S COLUMN
    244  d7ff		       0a		      ASL
    245  d800		       38		      SEC
    246  d801		       ed 2c 21 	      SBC	M0COL	;		    ;SUBTRACT RED MONSTER"S COLUMN
    247  d804		       85 b8		      STA	TEMP8	;		    ;= ADJ MS - (DELTA BETWEEN MS AND RED)
    248  d806		       4c 41 d8 	      JMP	MMVINTR4
    249  d809
    250  d809				   MMVINTR3
    251  d809		       ad 02 21 	      LDA	PZONE	;		    ; GOLD
    252  d80c		       85 b7		      STA	TEMP7
    253  d80e		       ad 03 21 	      LDA	PCOL
    254  d811		       85 b8		      STA	TEMP8
    255  d813		       38		      SEC
    256  d814		       fd 2c 21 	      SBC	M0COL,X
    257  d817		       85 b0		      STA	TEMP0
    258  d819		       10 05		      BPL	GOLD1
    259  d81b		       a9 00		      LDA	#0
    260  d81d		       38		      SEC
    261  d81e		       e5 b0		      SBC	TEMP0
    262  d820		       85 b1	   GOLD1      STA	TEMP1	;		    ; TEMP1 = ABS(PCOL-MCOL)
    263  d822		       ad 02 21 	      LDA	PZONE
    264  d825		       38		      SEC
    265  d826		       fd 28 21 	      SBC	M0ZONE,X
    266  d829		       85 b0		      STA	TEMP0
    267  d82b		       10 05		      BPL	GOLD2
    268  d82d		       a9 00		      LDA	#0
    269  d82f		       38		      SEC
    270  d830		       e5 b0		      SBC	TEMP0
    271  d832		       18	   GOLD2      CLC		;			      ; A = ABS(PZONE-MZONE)
    272  d833		       65 b1		      ADC	TEMP1
    273  d835		       c9 08		      CMP	#8	;		       ; IF ABS(PCOL-MCOL)+ABS(PZONE-MZONE)>8
    274  d837		       10 08		      BPL	MMVINTR4
    275  d839		       a9 15		      LDA	#$15
    276  d83b		       85 b7		      STA	TEMP7
    277  d83d		       a9 06		      LDA	#$06
    278  d83f		       85 b8		      STA	TEMP8
    279  d841		       4c 44 d8    MMVINTR4   JMP	STWHCHWY
    280  d844
    281  d844							;* STWHCHWY	    - SET UP FOR MONSTER"S WHCHWAY CALL
    282  d844							;*	    IN:     MONSTER VALUE IN X, INTERSECTION STATE IN TEMP12-15
    283  d844							;*	    OUT:    ALL PARAMETERS FOR WHCHWAY EXCEPT GOALZONE AND GOALCOL
    284  d844							;*	    USES:   ALL EXCEPT X
    285  d844
    286  d844		       bd 28 21    STWHCHWY   LDA	M0ZONE,X
    287  d847		       85 b4		      STA	TEMP4
    288  d849		       bd 2c 21 	      LDA	M0COL,X
    289  d84c		       85 b5		      STA	TEMP5
    290  d84e		       bd 30 21 	      LDA	M0DIR,X
    291  d851		       85 b6		      STA	TEMP6
    292  d853		       20 b1 dd 	      JSR	WHCHWAY
    293  d856		       9d 30 21 	      STA	M0DIR,X
    294  d859		       60		      RTS
    295  d85a
    296  d85a							;* MMVPEN	    - MONSTER PEN MOVEMENT STUFF
    297  d85a							;*	    IN:     X IS MONSTER NUMBER
    298  d85a							;*	    USE:
    299  d85a
    300  d85a		       bd 3c 21    MMVPEN     LDA	M0SLOW,X	;		 ;SLOW THEM DOWN IN PEN
    301  d85d		       49 01		      EOR	#$01
    302  d85f		       9d 3c 21 	      STA	M0SLOW,X
    303  d862		       d0 01		      BNE	MMVPBODY
    304  d864		       60		      RTS
    305  d865
    306  d865		       bd 38 21    MMVPBODY   LDA	M0STATE,X
    307  d868		       c9 04		      CMP	#MSTATPEN	;		; SEE IF HE"S JUST HANGING ARROUND
    308  d86a		       d0 1b		      BNE	MMVPEN1
    309  d86c
    310  d86c		       bd 20 21 	      LDA	M0VPOS,X	;		 ; SEE WHERE IT IS
    311  d86f		       c9 48		      CMP	#$48	;		      ; IF IT IS AT THE TOP
    312  d871		       b0 08		      BCS	MMVPEN4
    313  d873		       a9 01		      LDA	#DDOWN	;		   ; THEN MOVE IT DOWN
    314  d875		       9d 30 21 	      STA	M0DIR,X
    315  d878		       4c da d8 	      JMP	MMVPEN3
    316  d87b
    317  d87b		       c9 4e	   MMVPEN4    CMP	#$4E	;		      ; IF ITS AT THE BOTTOM
    318  d87d		       90 05		      BCC	MMVPEN5
    319  d87f		       a9 03		      LDA	#DUP	;		     ; THEM MOVE IT UP
    320  d881		       9d 30 21 	      STA	M0DIR,X
    321  d884		       4c da d8    MMVPEN5    JMP	MMVPEN3	;		  ; THEN GET OUT
    322  d887
    323  d887		       c9 03	   MMVPEN1    CMP	#MSTINPEN	;		; SEE IF HE WANTS TO GET IN
    324  d889		       d0 2b		      BNE	MMVPEN2
    325  d88b
    326  d88b		       bd 20 21 	      LDA	M0VPOS,X	;		 ; SEE IF ITS IN YET
    327  d88e		       c9 4e		      CMP	#$4E
    328  d890		       90 48		      BCC	MMVPEN6
    329  d892		       bd f8 dc 	      LDA	HOMEDIR,X	;		; MOVE IT TOWATRDS IT"S HOME SLOT
    330  d895		       9d 30 21 	      STA	M0DIR,X
    331  d898		       bd 24 21 	      LDA	M0HPOS,X
    332  d89b		       dd e8 dc 	      CMP	IMHPOS,X
    333  d89e		       d0 3a		      BNE	MMVPEN6
    334  d8a0		       a9 04		      LDA	#MSTATPEN
    335  d8a2		       9d 38 21 	      STA	M0STATE,X
    336  d8a5		       a9 03		      LDA	#DUP
    337  d8a7		       9d 30 21 	      STA	M0DIR,X
    338  d8aa		       20 15 da 	      JSR	MONSTAMP	;		 ;MAKE IT LOOK NORMAL
    339  d8ad		       8a		      TXA
    340  d8ae		       d0 03		      BNE	MMVPEN7
    341  d8b0		       20 cd da 	      JSR	GETOUT
    342  d8b3				   MMVPEN7
    343  d8b3		       4c da d8 	      JMP	MMVPEN3
    344  d8b6
    345  d8b6				   MMVPEN2		;				 ; HE IS TRYING TO GET OUT
    346  d8b6		       bd 24 21 	      LDA	M0HPOS,X
    347  d8b9		       c9 4f		      CMP	#$37+LEFTSIDE
    348  d8bb		       d0 1d		      BNE	MMVPEN6
    349  d8bd		       a9 03		      LDA	#DUP
    350  d8bf		       9d 30 21 	      STA	M0DIR,X
    351  d8c2		       bd 20 21 	      LDA	M0VPOS,X	;		 ; SEE OF HE"S OUT YET
    352  d8c5		       c9 3a		      CMP	#$3A	;		     ;SZY-4C????
    353  d8c7		       b0 11		      BCS	MMVPEN3
    354  d8c9
    355  d8c9		       a9 02		      LDA	#DLEFT	;		   ;SET IT"S DIRECTION
    356  d8cb		       bc 40 21 	      LDY	M0BLUE,X
    357  d8ce		       f0 02		      BEQ	MMVPENDR
    358  d8d0		       a9 00		      LDA	#DRIGHT
    359  d8d2		       9d 30 21    MMVPENDR   STA	M0DIR,X
    360  d8d5		       a9 00		      LDA	#MSTNORM
    361  d8d7		       9d 38 21 	      STA	M0STATE,X	;		; IF HE IS THEN ALL IS BACK TO NORMAL
    362  d8da
    363  d8da				   MMVPEN3
    364  d8da				   MMVPEN6
    365  d8da
    366  d8da							;* MOVEMON	    - MONSTER MOVEMENT STUFF
    367  d8da							;*	    IN:     X IS MONSTER NUMBER
    368  d8da							;*	    USE:
    369  d8da
    370  d8da		       20 38 d9    MOVEMON    JSR	ADJSTMON	;		 ;FIRST, ADJUST THE POSITION
    371  d8dd
    372  d8dd		       bd 48 21 	      LDA	M0TUNNEL,X
    373  d8e0		       d0 17		      BNE	MVTUNNEL	;		 ;DIFFERENT CODE FOR TUNNEL MOVEMENT
    374  d8e2
    375  d8e2		       bd 24 21 	      LDA	M0HPOS,X	;		 ;SEE IF MOVING INTO TUNNEL
    376  d8e5		       c9 83		      CMP	#RGHTEDGE
    377  d8e7		       90 03		      BCC	MVZZJMP0
    378  d8e9		       9d 48 21 	      STA	M0TUNNEL,X
    379  d8ec		       c9 1b	   MVZZJMP0   CMP	#LEFTEDGE
    380  d8ee		       b0 03		      BCS	MVZZJMP1
    381  d8f0		       9d 48 21 	      STA	M0TUNNEL,X
    382  d8f3
    383  d8f3		       20 b0 d9    MVZZJMP1   JSR	DISPMON	;		  ;UPDATE THE MONSTER DISPLAY
    384  d8f6		       4c 60 d9 	      JMP	CHKPEN
    385  d8f9
    386  d8f9		       bd 30 21    MVTUNNEL   LDA	M0DIR,X	;		  ;MOVEMENT THROUGH TUNNEL
    387  d8fc		       f0 1d		      BEQ	MVTRIGHT
    388  d8fe		       bd 24 21 	      LDA	M0HPOS,X	;		 ;MOVING LEFT
    389  d901		       c9 13		      CMP	#LEFTWRAP	;		;SEE IF WRAP TIME
    390  d903		       b0 06		      BCS	MVTLJMP0
    391  d905		       18		      CLC
    392  d906		       69 78		      ADC	#WRAPSIZE
    393  d908		       9d 24 21 	      STA	M0HPOS,X
    394  d90b		       c9 83	   MVTLJMP0   CMP	#RGHTEDGE
    395  d90d		       b0 09		      BCS	MVTLJMP1
    396  d90f		       c9 50		      CMP	#80
    397  d911		       90 05		      BCC	MVTLJMP1
    398  d913		       a9 00		      LDA	#$00
    399  d915		       9d 48 21 	      STA	M0TUNNEL,X
    400  d918		       4c c6 d9    MVTLJMP1   JMP	WRTMON	;		   ;WRITE IT AND LEAVE
    401  d91b
    402  d91b		       bd 24 21    MVTRIGHT   LDA	M0HPOS,X	;		 ;MOVING RIGHT
    403  d91e		       c9 8b		      CMP	#RGHTWRAP	;		;SEE IF WRAP TIME
    404  d920		       90 06		      BCC	MVTRJMP0
    405  d922		       38		      SEC
    406  d923		       e9 78		      SBC	#WRAPSIZE
    407  d925		       9d 24 21 	      STA	M0HPOS,X
    408  d928		       c9 1b	   MVTRJMP0   CMP	#LEFTEDGE
    409  d92a		       90 09		      BCC	MVTRJMP1
    410  d92c		       c9 50		      CMP	#80
    411  d92e		       b0 05		      BCS	MVTRJMP1
    412  d930		       a9 00		      LDA	#$00
    413  d932		       9d 48 21 	      STA	M0TUNNEL,X
    414  d935		       4c c6 d9    MVTRJMP1   JMP	WRTMON	;		   ;WRITE IT, THEN WE"RE DONE
    415  d938
    416  d938							;*  ADJUST THE POSITION OF THE MONSTER
    417  d938		       bd 34 21    ADJSTMON   LDA	M0DISP,X	;		 ;FIRST, ANIMATE THE MONSTER
    418  d93b		       49 10		      EOR	#$10
    419  d93d		       9d 34 21 	      STA	M0DISP,X
    420  d940
    421  d940		       bc 30 21 	      LDY	M0DIR,X	;		  ;NOW, MOVE IT
    422  d943		       bd 24 21 	      LDA	M0HPOS,X
    423  d946		       20 a6 e9 	      JSR	HPOSADJ	;		  ;ADJUST HORIZONTALLY
    424  d949		       9d 24 21 	      STA	M0HPOS,X
    425  d94c		       86 b0		      STX	TEMP0
    426  d94e		       b5 64		      LDA	M0OFF,X
    427  d950		       85 b1		      STA	TEMP1
    428  d952		       bd 20 21 	      LDA	M0VPOS,X
    429  d955		       a6 b1		      LDX	TEMP1
    430  d957		       20 ab e9 	      JSR	VPOSADJ	;		  ;ADJUST VERTICALLY
    431  d95a		       a6 b0		      LDX	TEMP0
    432  d95c		       9d 20 21 	      STA	M0VPOS,X
    433  d95f		       60		      RTS
    434  d960
    435  d960							;* SPECIAL CODE FOR GETTING EYES INTO PEN
    436  d960				   CHKPEN
    437  d960		       bd 38 21 	      LDA	M0STATE,X
    438  d963		       c9 01		      CMP	#MSTEYES
    439  d965		       d0 48		      BNE	MMOVEND	;		 ; IF IT"S NOT EYES ITS NOT INTERESTED
    440  d967
    441  d967		       a9 13		      LDA	#$13	;		     ;SEE IF EYE TUNE PLAYING
    442  d969		       cd 04 1d 	      CMP	TUNINDEX
    443  d96c		       f0 08		      BEQ	CPJMP0
    444  d96e		       cd 05 1d 	      CMP	TUNINDEX+1
    445  d971		       f0 03		      BEQ	CPJMP0
    446  d973		       20 43 ea 	      JSR	DOTUNE	;		   ;MAKE IT PLAY
    447  d976
    448  d976		       a9 39	   CPJMP0     LDA	#$39	;		     ; NOW SEE IF ITS AT THE ENTRY POINT
    449  d978		       dd 20 21 	      CMP	M0VPOS,X
    450  d97b		       d0 32		      BNE	MMOVEND
    451  d97d		       a9 4f		      LDA	#$37+LEFTSIDE
    452  d97f		       dd 24 21 	      CMP	M0HPOS,X
    453  d982		       d0 2b		      BNE	MMOVEND
    454  d984		       a9 03		      LDA	#MSTINPEN
    455  d986		       9d 38 21 	      STA	M0STATE,X	;		; IT IS NOW GOING INTO PEN
    456  d989		       a9 01		      LDA	#DDOWN
    457  d98b		       9d 30 21 	      STA	M0DIR,X
    458  d98e
    459  d98e		       ad 38 21 	      LDA	M0STATE+0
    460  d991		       c9 01		      CMP	#MSTEYES
    461  d993		       f0 1a		      BEQ	MMOVEND
    462  d995		       ad 39 21 	      LDA	M0STATE+1
    463  d998		       c9 01		      CMP	#MSTEYES
    464  d99a		       f0 13		      BEQ	MMOVEND
    465  d99c		       ad 3a 21 	      LDA	M0STATE+2
    466  d99f		       c9 01		      CMP	#MSTEYES
    467  d9a1		       f0 0c		      BEQ	MMOVEND
    468  d9a3		       ad 3b 21 	      LDA	M0STATE+3
    469  d9a6		       c9 01		      CMP	#MSTEYES
    470  d9a8		       f0 05		      BEQ	MMOVEND
    471  d9aa		       a9 13		      LDA	#$13
    472  d9ac		       20 6d ea 	      JSR	KILLTUNE
    473  d9af
    474  d9af		       60	   MMOVEND    RTS
    475  d9b0
    476  d9b0
    477  d9b0							;*  THIS ROUTINE ADJUSTS THE CURRENT COLUMN, ZONE, AND OFFSET, THEN FALLS THROUGH
    478  d9b0							;*  TO WRTMON
    479  d9b0		       bd 24 21    DISPMON    LDA	M0HPOS,X	;		 ;ADJUST COLUMN
    480  d9b3		       20 db e9 	      JSR	HTOC
    481  d9b6		       9d 2c 21 	      STA	M0COL,X
    482  d9b9		       bd 20 21 	      LDA	M0VPOS,X	;		 ;ADJUST ZONE AND OFFSET
    483  d9bc		       20 e7 e9 	      JSR	VTOZO
    484  d9bf		       95 64		      STA	M0OFF,X
    485  d9c1		       c8		      INY
    486  d9c2		       98		      TYA
    487  d9c3		       9d 28 21 	      STA	M0ZONE,X
    488  d9c6							;				 ;NOW - FALL THROUGH TO WRTMON
    489  d9c6
    490  d9c6							;* WRTMON	    - WRITE THE MONSTER ON THE SCREEN
    491  d9c6							;*	    IN	    X IS MONSTER NUMBER
    492  d9c6							;*	    USES
    493  d9c6
    494  d9c6		       bd 24 21    WRTMON     LDA	M0HPOS,X	;		 ;UPDATE HPOS
    495  d9c9		       38		      SEC
    496  d9ca		       e9 03		      SBC	#3
    497  d9cc		       95 58		      STA	HPLIST+2,X
    498  d9ce		       bc 28 21 	      LDY	M0ZONE,X	;		 ;UPDATE ZONE
    499  d9d1		       88		      DEY
    500  d9d2		       98		      TYA
    501  d9d3		       95 5e		      STA	VZLIST+2,X
    502  d9d5
    503  d9d5		       bd 34 21 	      LDA	M0DISP,X	;		 ;FIND WHICH STAMP TO USE
    504  d9d8		       29 10		      AND	#$10	;		     ;FIRST, SET A TO 4 OR 0 DEPENDING
    505  d9da		       4a		      LSR		;			;  ON WHICH ANIMATION CURRENTLY IN
    506  d9db		       4a		      LSR
    507  d9dc		       1d 30 21 	      ORA	M0DIR,X	;		  ;SET BOTTOM BITS TO DIRECTION
    508  d9df		       1d 40 21 	      ORA	M0BLUE,X	;		 ;NORMAL, BLUE, OR EYES
    509  d9e2		       a8		      TAY		;			      ;THIS IS OUR INDEX
    510  d9e3		       b9 24 dd 	      LDA	MONSTMPH,Y	;	       ;SET THE STAMP
    511  d9e6		       95 70		      STA	SHLIST+2,X
    512  d9e8		       b9 3c dd 	      LDA	MONSTMPL,Y
    513  d9eb		       95 6a		      STA	SLLIST+2,X
    514  d9ed
    515  d9ed		       a9 01		      LDA	#$01
    516  d9ef		       95 76		      STA	DOLIST+2,X	;	       ;TELL LOADER TO GET IT
    517  d9f1		       60		      RTS
    518  d9f2
    519  d9f2
    520  d9f2							;* EYESTAMP	    - FILL IN STAMP FOR EYES
    521  d9f2							;*	    IN:     X IS MONSTER NUMBER
    522  d9f2							;*	    OUT:
    523  d9f2							;*	    USE:    TEMP0,Y
    524  d9f2
    525  d9f2		       a9 10	   EYESTAMP   LDA	#$10	;		     ;SET "M0BLUE" TO EYES
    526  d9f4		       9d 40 21 	      STA	M0BLUE,X
    527  d9f7		       8a		      TXA
    528  d9f8		       0a		      ASL
    529  d9f9		       0a		      ASL
    530  d9fa		       a8		      TAY
    531  d9fb		       a9 0c		      LDA	#WHITE	;		   ;ADJUST COLOR
    532  d9fd		       99 8e 00 	      STA	P3C2,Y
    533  da00		       60		      RTS
    534  da01
    535  da01							;* BLUSTAMP	    - FILL IN STAMP FOR BLUR MONSTERS
    536  da01							;*	    IN:     X IS MONSTER NUMBER
    537  da01							;*	    OUT:
    538  da01							;*	    USE:    TEMP0,Y
    539  da01
    540  da01		       a9 08	   BLUSTAMP   LDA	#$08	;		     ;SET "M0BLUE" TO BLUE
    541  da03		       9d 40 21 	      STA	M0BLUE,X
    542  da06		       8a		      TXA
    543  da07		       0a		      ASL
    544  da08		       0a		      ASL
    545  da09		       a8		      TAY
    546  da0a		       a9 82		      LDA	#DKBLUE	;		  ;ADJUST COLOR
    547  da0c		       99 8d 00 	      STA	P3C1,Y
    548  da0f		       a9 5e		      LDA	#LTPINK
    549  da11		       99 8e 00 	      STA	P3C2,Y
    550  da14		       60		      RTS
    551  da15
    552  da15							;* MONSTAMP	    - FILL IN STAMP FOR MONSTER
    553  da15							;*	    IN:     X IS MONSTER NUMBER
    554  da15							;*	    OUT:
    555  da15							;*	    USE:    TEMP0,Y
    556  da15
    557  da15		       a9 00	   MONSTAMP   LDA	#$00	;		     ;SET "M0BLUE" TO NORMAL MONSTER
    558  da17		       9d 40 21 	      STA	M0BLUE,X
    559  da1a		       8a		      TXA
    560  da1b		       0a		      ASL
    561  da1c		       0a		      ASL
    562  da1d		       a8		      TAY
    563  da1e		       bd f4 dc 	      LDA	IMCOLOR,X	;		;ADJUST COLOR
    564  da21		       99 8d 00 	      STA	P3C1,Y
    565  da24		       a9 0c		      LDA	#WHITE
    566  da26		       99 8e 00 	      STA	P3C2,Y
    567  da29		       a9 98		      LDA	#BLUE
    568  da2b		       99 8f 00 	      STA	P3C3,Y
    569  da2e		       60		      RTS
    570  da2f
    571  da2f							;* SCORSTMP	    - FILL IN SCORE FOR MONSTER
    572  da2f							;*	    IN:     X IS MONSTER NUMBER
    573  da2f							;*	    OUT:
    574  da2f							;*	    USE:    TEMP0,Y
    575  da2f
    576  da2f				   SCORSTMP
    577  da2f		       a4 fe		      LDY	GREEDCNT
    578  da31		       b9 54 dd 	      LDA	MSCRTBLH,Y
    579  da34		       95 70		      STA	SHLIST+2,X
    580  da36		       b9 58 dd 	      LDA	MSCRTBLL,Y
    581  da39		       95 6a		      STA	SLLIST+2,X
    582  da3b		       a9 01		      LDA	#$01
    583  da3d		       95 76		      STA	DOLIST+2,X
    584  da3f		       8a		      TXA
    585  da40		       0a		      ASL
    586  da41		       0a		      ASL
    587  da42		       a8		      TAY
    588  da43		       a9 eb		      LDA	#LTGREEN	;		 ;ADJUST COLOR
    589  da45		       99 8e 00 	      STA	P3C2,Y
    590  da48		       60		      RTS
    591  da49
    592  da49							;* INITMON	    - INITIALIZE MONSTER DATA
    593  da49							;*	    USES:
    594  da49							;*
    595  da49
    596  da49				   INITMON
    597  da49		       a2 03		      LDX	#3
    598  da4b				   INITMNLP
    599  da4b
    600  da4b		       bd e4 dc 	      LDA	IMVPOS,X
    601  da4e		       9d 20 21 	      STA	M0VPOS,X
    602  da51		       bd e8 dc 	      LDA	IMHPOS,X
    603  da54		       9d 24 21 	      STA	M0HPOS,X
    604  da57		       bd ec dc 	      LDA	IMDIR,X
    605  da5a		       9d 30 21 	      STA	M0DIR,X
    606  da5d		       a9 00		      LDA	#0
    607  da5f		       9d 34 21 	      STA	M0DISP,X
    608  da62		       9d 44 21 	      STA	M0SPEED,X
    609  da65		       9d 48 21 	      STA	M0TUNNEL,X
    610  da68		       9d 4c 21 	      STA	M0FLIP,X
    611  da6b		       9d 3c 21 	      STA	M0SLOW,X
    612  da6e		       bd f0 dc 	      LDA	IMSTATE,X
    613  da71		       9d 38 21 	      STA	M0STATE,X
    614  da74		       20 15 da 	      JSR	MONSTAMP
    615  da77		       20 b0 d9 	      JSR	DISPMON
    616  da7a
    617  da7a		       ca		      DEX
    618  da7b		       10 ce		      BPL	INITMNLP
    619  da7d
    620  da7d		       a9 01		      LDA	#1
    621  da7f		       85 ff		      STA	BORED
    622  da81		       a9 00		      LDA	#0
    623  da83		       85 fd		      STA	ISBLUE
    624  da85		       85 fb		      STA	NORMTIME
    625  da87		       85 fc		      STA	NORMTIME+1
    626  da89		       85 f7		      STA	EATNDOTS
    627  da8b		       85 f8		      STA	TRELEASE
    628  da8d		       20 88 d6 	      JSR	SETMON
    629  da90
    630  da90		       a5 a6		      LDA	LEVEL
    631  da92		       c9 02		      CMP	#2
    632  da94		       10 0f		      BPL	INITREL1
    633  da96		       a9 00		      LDA	#$00
    634  da98		       85 f4		      STA	M1REL
    635  da9a		       a9 1a		      LDA	#$1A
    636  da9c		       85 f5		      STA	M2REL
    637  da9e		       a9 34		      LDA	#$34
    638  daa0		       85 f6		      STA	M3REL
    639  daa2		       4c be da 	      JMP	INITBLTM
    640  daa5				   INITREL1
    641  daa5		       c9 03		      CMP	#3
    642  daa7		       10 0d		      BPL	INITREL2
    643  daa9		       a9 00		      LDA	#$00
    644  daab		       85 f4		      STA	M1REL
    645  daad		       85 f5		      STA	M2REL
    646  daaf		       a9 20		      LDA	#$20
    647  dab1		       85 f6		      STA	M3REL
    648  dab3		       4c be da 	      JMP	INITBLTM
    649  dab6				   INITREL2
    650  dab6		       a9 00		      LDA	#$00
    651  dab8		       85 f4		      STA	M1REL
    652  daba		       85 f5		      STA	M2REL
    653  dabc		       85 f6		      STA	M3REL
    654  dabe
    655  dabe				   INITBLTM		;				 ;NOW SET UP BLUE TIME
    656  dabe		       a5 a6		      LDA	LEVEL
    657  dac0		       c9 14		      CMP	#20
    658  dac2		       30 02		      BMI	BLUTIM
    659  dac4		       a9 13		      LDA	#19
    660  dac6		       aa	   BLUTIM     TAX
    661  dac7		       bd 10 dd 	      LDA	BTIME,X
    662  daca		       85 f3		      STA	BLUETIME
    663  dacc		       60		      RTS
    664  dacd
    665  dacd							;*	    STATE CHANGE ROUTINES;	    ;*
    666  dacd
    667  dacd							;* GETOUT	    DOES THE STATE CHANGE TO GET OUT OF THE PEN)
    668  dacd							;*	    IN:     A IS MONSTER NUMBER
    669  dacd							;*	    USES:
    670  dacd
    671  dacd				   GETOUT
    672  dacd		       aa		      TAX
    673  dace		       a9 02		      LDA	#MSTLVPEN
    674  dad0		       9d 38 21 	      STA	M0STATE,X
    675  dad3		       bd fc dc 	      LDA	OUTDIR,X
    676  dad6		       9d 30 21 	      STA	M0DIR,X
    677  dad9		       60		      RTS
    678  dada
    679  dada							;* TURNBLUE	    TURNS A MONSTER BLUE
    680  dada							;*	    USES
    681  dada
    682  dada				   TURNBLUE
    683  dada		       a2 03		      LDX	#3
    684  dadc				   TRNBLULP
    685  dadc		       bd 38 21 	      LDA	M0STATE,X
    686  dadf		       c9 01		      CMP	#MSTEYES
    687  dae1		       f0 17		      BEQ	TRNBLUND
    688  dae3		       c9 03		      CMP	#MSTINPEN
    689  dae5		       f0 13		      BEQ	TRNBLUND
    690  dae7		       a9 01		      LDA	#SPDBLUE
    691  dae9		       9d 44 21 	      STA	M0SPEED,X
    692  daec		       20 01 da 	      JSR	BLUSTAMP
    693  daef		       bd 38 21 	      LDA	M0STATE,X
    694  daf2		       d0 06		      BNE	TRNBLUND
    695  daf4		       fe 4c 21 	      INC	M0FLIP,X
    696  daf7		       20 c6 d9 	      JSR	WRTMON
    697  dafa		       ca	   TRNBLUND   DEX
    698  dafb		       10 df		      BPL	TRNBLULP
    699  dafd
    700  dafd		       a9 01		      LDA	#1
    701  daff		       85 fd		      STA	ISBLUE
    702  db01		       a9 00		      LDA	#0
    703  db03		       85 fe		      STA	GREEDCNT
    704  db05		       a5 f3		      LDA	BLUETIME
    705  db07		       85 dc		      STA	BLUWAIT
    706  db09		       a9 0d		      LDA	#$0D	;		     ;MAKE ENERGIZED SOUND
    707  db0b		       20 43 ea 	      JSR	DOTUNE
    708  db0e		       60		      RTS
    709  db0f
    710  db0f							;* TURNNORM	    TURNS A MONSTER NORMAL
    711  db0f							;*	    USES
    712  db0f
    713  db0f				   TURNNORM
    714  db0f		       a2 03	   FOO	      LDX	#3
    715  db11				   TRNNRMLP
    716  db11		       bd 38 21 	      LDA	M0STATE,X
    717  db14		       c9 01		      CMP	#MSTEYES
    718  db16		       f0 12		      BEQ	TRNNRMND
    719  db18		       bd 38 21 	      LDA	M0STATE,X
    720  db1b		       c9 03		      CMP	#MSTINPEN
    721  db1d		       f0 0b		      BEQ	TRNNRMND
    722  db1f		       a9 00		      LDA	#SPDNORM
    723  db21		       9d 44 21 	      STA	M0SPEED,X
    724  db24		       20 15 da 	      JSR	MONSTAMP
    725  db27		       20 c6 d9 	      JSR	WRTMON
    726  db2a		       ca	   TRNNRMND   DEX
    727  db2b		       10 e4		      BPL	TRNNRMLP
    728  db2d
    729  db2d		       a9 00		      LDA	#0
    730  db2f		       85 fd		      STA	ISBLUE
    731  db31		       85 dc		      STA	BLUWAIT
    732  db33		       20 d5 dc 	      JSR	KILLBSND
    733  db36		       60		      RTS
    734  db37
    735  db37							;* TURNEYES	    TURNS A MONSTER INTO EYES
    736  db37							;*	    IN	    X IS A MONETR NUMBER
    737  db37							;*	    USES
    738  db37
    739  db37				   TURNEYES
    740  db37		       a9 00		      LDA	#$00	;		     ;TURN FLIP OFF, JUST IN CASE
    741  db39		       9d 4c 21 	      STA	M0FLIP,X
    742  db3c		       a9 01		      LDA	#MSTEYES
    743  db3e		       9d 38 21 	      STA	M0STATE,X
    744  db41		       a9 00		      LDA	#SPDNORM
    745  db43		       9d 44 21 	      STA	M0SPEED,X
    746  db46		       20 f2 d9 	      JSR	EYESTAMP
    747  db49		       4c c6 d9 	      JMP	WRTMON
    748  db4c
    749  db4c							;* MONFLIP	    DOES THE MONSTER FLIP
    750  db4c							;*	    USES
    751  db4c
    752  db4c		       a2 03	   MONFLIP    LDX	#3
    753  db4e		       bd 38 21    FLIPLOOP   LDA	M0STATE,X
    754  db51		       d0 03		      BNE	FLIPEND
    755  db53		       fe 4c 21 	      INC	M0FLIP,X
    756  db56		       ca	   FLIPEND    DEX
    757  db57		       10 f5		      BPL	FLIPLOOP
    758  db59
    759  db59		       a9 00		      LDA	#0
    760  db5b		       85 ff		      STA	BORED
    761  db5d		       ad 6e 21 	      LDA	REVWAIT+2
    762  db60		       8d 6c 21 	      STA	REVWAIT
    763  db63		       ad 6f 21 	      LDA	REVWAIT+3
    764  db66		       8d 6d 21 	      STA	REVWAIT+1
    765  db69		       a9 ff		      LDA	#$FF
    766  db6b		       8d 6e 21 	      STA	REVWAIT+2
    767  db6e		       8d 6f 21 	      STA	REVWAIT+3
    768  db71
    769  db71		       60		      RTS
    770  db72							;*
    771  db72							;* RELEASE	    -CHECK FOR MONSTER RELEASES FORM PEN
    772  db72							;*
    773  db72
    774  db72				   RELEASE
    775  db72		       a5 a6		      LDA	LEVEL	;		    ; FIRST CHECK FOR TIMED RELEASE
    776  db74		       c9 05		      CMP	#5
    777  db76		       30 09		      BMI	TIMEREL1
    778  db78		       a5 f8		      LDA	TRELEASE
    779  db7a		       c9 b4		      CMP	#$B4
    780  db7c		       90 3a		      BCC	PINKREL
    781  db7e		       4c 87 db 	      JMP	DOREL
    782  db81				   TIMEREL1
    783  db81		       a5 f8		      LDA	TRELEASE
    784  db83		       c9 f0		      CMP	#$F0
    785  db85		       90 31		      BCC	PINKREL
    786  db87				   DOREL		;				 ;TIME TO RELEASE SOMEONE
    787  db87		       a9 00		      LDA	#0
    788  db89		       85 f8		      STA	TRELEASE
    789  db8b		       ad 39 21 	      LDA	M0STATE+1
    790  db8e		       c9 04		      CMP	#MSTATPEN
    791  db90		       d0 08		      BNE	WHCHREL1
    792  db92		       a9 01		      LDA	#1
    793  db94		       20 cd da 	      JSR	GETOUT
    794  db97		       4c b8 db 	      JMP	PINKREL
    795  db9a				   WHCHREL1
    796  db9a		       ad 3a 21 	      LDA	M0STATE+2
    797  db9d		       c9 04		      CMP	#MSTATPEN
    798  db9f		       d0 08		      BNE	WHCHREL2
    799  dba1		       a9 02		      LDA	#2
    800  dba3		       20 cd da 	      JSR	GETOUT
    801  dba6		       4c b8 db 	      JMP	PINKREL
    802  dba9				   WHCHREL2
    803  dba9		       ad 3b 21 	      LDA	M0STATE+3
    804  dbac		       c9 04		      CMP	#MSTATPEN
    805  dbae		       d0 08		      BNE	PINKREL
    806  dbb0		       a9 03		      LDA	#3
    807  dbb2		       20 cd da 	      JSR	GETOUT
    808  dbb5		       4c b8 db 	      JMP	PINKREL
    809  dbb8				   PINKREL
    810  dbb8		       ad 39 21 	      LDA	M0STATE+1
    811  dbbb		       c9 04		      CMP	#MSTATPEN
    812  dbbd		       d0 1d		      BNE	BLUEREL
    813  dbbf		       a5 ab		      LDA	DEATHFLG
    814  dbc1		       f0 0e		      BEQ	PINKREL1
    815  dbc3		       a5 f7		      LDA	EATNDOTS
    816  dbc5		       c9 06		      CMP	#6
    817  dbc7		       d0 13		      BNE	BLUEREL
    818  dbc9		       a9 01		      LDA	#1
    819  dbcb		       20 cd da 	      JSR	GETOUT
    820  dbce		       4c dc db 	      JMP	BLUEREL
    821  dbd1		       a5 ac	   PINKREL1   LDA	PINKDOTS
    822  dbd3		       c5 f4		      CMP	M1REL
    823  dbd5		       90 05		      BCC	BLUEREL
    824  dbd7		       a9 01		      LDA	#1
    825  dbd9		       20 cd da 	      JSR	GETOUT
    826  dbdc
    827  dbdc				   BLUEREL
    828  dbdc		       ad 3a 21 	      LDA	M0STATE+2
    829  dbdf		       c9 04		      CMP	#MSTATPEN
    830  dbe1		       d0 1d		      BNE	GOLDREL
    831  dbe3		       a5 ab		      LDA	DEATHFLG
    832  dbe5		       f0 0e		      BEQ	BLUEREL1
    833  dbe7		       a5 f7		      LDA	EATNDOTS
    834  dbe9		       c9 0f		      CMP	#15
    835  dbeb		       d0 13		      BNE	GOLDREL
    836  dbed		       a9 02		      LDA	#2
    837  dbef		       20 cd da 	      JSR	GETOUT
    838  dbf2		       4c 00 dc 	      JMP	GOLDREL
    839  dbf5		       a5 ad	   BLUEREL1   LDA	BLUEDOTS
    840  dbf7		       c5 f5		      CMP	M2REL
    841  dbf9		       90 05		      BCC	GOLDREL
    842  dbfb		       a9 02		      LDA	#2
    843  dbfd		       20 cd da 	      JSR	GETOUT
    844  dc00
    845  dc00				   GOLDREL
    846  dc00		       ad 3b 21 	      LDA	M0STATE+3
    847  dc03		       c9 04		      CMP	#MSTATPEN
    848  dc05		       d0 1e		      BNE	RELOUT
    849  dc07		       a5 ab		      LDA	DEATHFLG
    850  dc09		       f0 0f		      BEQ	GOLDREL1
    851  dc0b		       a5 f7		      LDA	EATNDOTS
    852  dc0d		       c9 1c		      CMP	#28
    853  dc0f		       d0 14		      BNE	RELOUT
    854  dc11		       a9 00		      LDA	#0
    855  dc13		       85 ab		      STA	DEATHFLG
    856  dc15		       85 f7		      STA	EATNDOTS
    857  dc17		       4c 25 dc 	      JMP	RELOUT
    858  dc1a				   GOLDREL1
    859  dc1a		       a5 ae		      LDA	GOLDDOTS
    860  dc1c		       c5 f6		      CMP	M3REL
    861  dc1e		       90 05		      BCC	RELOUT
    862  dc20		       a9 03		      LDA	#3
    863  dc22		       20 cd da 	      JSR	GETOUT
    864  dc25				   RELOUT
    865  dc25		       60		      RTS
    866  dc26
    867  dc26							;*
    868  dc26							;* FLASHON
    869  dc26
    870  dc26		       a9 82	   FLASHON    LDA	#DKBLUE	;		  ;FLASH COLOR
    871  dc28		       85 c1		      STA	TEMP17
    872  dc2a		       a9 5e		      LDA	#LTPINK
    873  dc2c		       85 c2		      STA	TEMP18
    874  dc2e		       4c 39 dc 	      JMP	FLASHMON
    875  dc31
    876  dc31							;*
    877  dc31							;* FLASHOFF
    878  dc31
    879  dc31		       a9 0c	   FLASHOFF   LDA	#WHITE	;		   ;FLASH COLOR
    880  dc33		       85 c1		      STA	TEMP17
    881  dc35		       a9 57		      LDA	#PINK
    882  dc37		       85 c2		      STA	TEMP18
    883  dc39
    884  dc39
    885  dc39							;*  THIS ROUTINE FLASHES A MONSTER
    886  dc39		       a2 03	   FLASHMON   LDX	#3	;		       ;DO FOR EACH MONSTER
    887  dc3b		       bd 40 21    FLSHLOOP   LDA	M0BLUE,X
    888  dc3e		       c9 08		      CMP	#$08
    889  dc40		       d0 15		      BNE	FLASHEND
    890  dc42		       bd 38 21 	      LDA	M0STATE,X
    891  dc45		       c9 03		      CMP	#MSTINPEN
    892  dc47		       f0 0e		      BEQ	FLASHEND
    893  dc49		       8a		      TXA
    894  dc4a		       0a		      ASL
    895  dc4b		       0a		      ASL
    896  dc4c		       a8		      TAY
    897  dc4d		       a5 c1		      LDA	TEMP17	;		   ;BLUE MONSTER - FLASH COLOR
    898  dc4f		       99 8d 00 	      STA	P3C1,Y
    899  dc52		       a5 c2		      LDA	TEMP18
    900  dc54		       99 8e 00 	      STA	P3C2,Y
    901  dc57
    902  dc57		       ca	   FLASHEND   DEX
    903  dc58		       10 e1		      BPL	FLSHLOOP
    904  dc5a		       60		      RTS
    905  dc5b
    906  dc5b
    907  dc5b							;* CHKBLUE
    908  dc5b							;*
    909  dc5b		       a5 a1	   CHKBLUE    LDA	RTLOCAL+1	;		;ONLY EXECUTE EVERY OTHER TIME
    910  dc5d		       29 01		      AND	#$01
    911  dc5f		       f0 17		      BEQ	CKBOUT
    912  dc61		       a5 dc		      LDA	BLUWAIT	;		  ;IF BLUWAIT <> 0, WE ARE BLUE
    913  dc63		       f0 13		      BEQ	CKBOUT
    914  dc65		       c6 dc		      DEC	BLUWAIT
    915  dc67		       f0 10		      BEQ	CKBNORM
    916  dc69
    917  dc69		       a0 04		      LDY	#$04	;		     ;SEE IF TIME TO FLASH
    918  dc6b		       d9 87 dc    CKBLOOP    CMP	ONFLASH,Y
    919  dc6e		       f0 0c		      BEQ	CKBONFL
    920  dc70		       d9 82 dc 	      CMP	OFFFLASH,Y
    921  dc73		       f0 0a		      BEQ	CKBOFFFL
    922  dc75		       88		      DEY
    923  dc76		       10 f3		      BPL	CKBLOOP
    924  dc78		       60	   CKBOUT     RTS
    925  dc79
    926  dc79		       4c 0f db    CKBNORM    JMP	TURNNORM	;		 ;TURN MONSTER NORMAL
    927  dc7c		       4c 26 dc    CKBONFL    JMP	FLASHON	;		  ;FLASH MONSTER ON
    928  dc7f		       4c 31 dc    CKBOFFFL   JMP	FLASHOFF	;		 ;FLASH MONSTER OFF
    929  dc82
    930  dc82		       07 13 1f 2b*OFFFLASH   DC.B	$07,$13,$1F,$2B,$37	;TIMES MONSTERS FLASH PINK
    931  dc87		       0d 19 25 31*ONFLASH    DC.B	$0D,$19,$25,$31,$3D	;TIMES MONSTERS FLASH BLUE
    932  dc8c
    933  dc8c
    934  dc8c							;* TIGHT LOOP FOR MOVING EYES DURRING SCORE DISPLAY
    935  dc8c				   TIGHT
    936  dc8c		       86 c0		      STX	TEMP16
    937  dc8e		       a2 03		      LDX	#3
    938  dc90				   TIGHTLP		;				 ; TOP OF TIGHT LOOP
    939  dc90		       bd 38 21 	      LDA	M0STATE,X
    940  dc93		       c9 01		      CMP	#MSTEYES
    941  dc95		       f0 0a		      BEQ	DOTIGHT
    942  dc97		       c9 03		      CMP	#MSTINPEN
    943  dc99		       d0 22		      BNE	TIGHTEND
    944  dc9b		       20 5a d8 	      JSR	MMVPEN
    945  dc9e		       4c bd dc 	      JMP	TIGHTEND
    946  dca1				   DOTIGHT
    947  dca1		       20 c3 dc 	      JSR	MNCHKDIR	;		 ; FIND OUT IF WE ARE AT INTERSECT
    948  dca4		       c9 00		      CMP	#0
    949  dca6		       d0 12		      BNE	TIGHTMV	;		  ; WE ARE NOT, SO JUST MOVE
    950  dca8		       b5 64		      LDA	M0OFF,X	;		  ; AND MAKE SURE WE ARE AT THE CENTER
    951  dcaa		       c9 03		      CMP	#3
    952  dcac		       d0 0c		      BNE	TIGHTMV
    953  dcae		       bd 24 21 	      LDA	M0HPOS,X
    954  dcb1		       29 03		      AND	#3
    955  dcb3		       c9 01		      CMP	#1
    956  dcb5		       d0 03		      BNE	TIGHTMV
    957  dcb7		       20 56 d7 	      JSR	MMVEYES	;		  ; IT"S EYES
    958  dcba		       20 da d8    TIGHTMV    JSR	MOVEMON	;		  ; MOVE THE MONSTER
    959  dcbd				   TIGHTEND
    960  dcbd		       ca		      DEX
    961  dcbe		       10 d0		      BPL	TIGHTLP
    962  dcc0		       a6 c0		      LDX	TEMP16
    963  dcc2		       60		      RTS
    964  dcc3
    965  dcc3
    966  dcc3							;*  THIS ROUTINE IS SIMPLY ONE TO CHECK IF A MONSTER IS IN AN INTERSECTION
    967  dcc3		       bd 28 21    MNCHKDIR   LDA	M0ZONE,X
    968  dcc6		       85 b4		      STA	TEMP4
    969  dcc8		       bd 2c 21 	      LDA	M0COL,X
    970  dccb		       85 b5		      STA	TEMP5
    971  dccd		       bd 30 21 	      LDA	M0DIR,X
    972  dcd0		       85 b6		      STA	TEMP6
    973  dcd2		       4c 60 dd 	      JMP	CHECKDIR
    974  dcd5
    975  dcd5
    976  dcd5							;*  THIS ROUTINE GETS RID OF THE ENERGIZED SOUND
    977  dcd5		       a9 0d	   KILLBSND   LDA	#$0D	;		     ;3 TUNES - D, E, AND F - TO KILL
    978  dcd7		       20 6d ea 	      JSR	KILLTUNE
    979  dcda		       a9 0e		      LDA	#$0E
    980  dcdc		       20 6d ea 	      JSR	KILLTUNE
    981  dcdf		       a9 0f		      LDA	#$0F
    982  dce1		       4c 6d ea 	      JMP	KILLTUNE
    983  dce4
    984  dce4
    985  dce4		       39 4b 4b 4b IMVPOS     DC.B	$39,$4B,$4B,$4B
    986  dce8		       4f 4f 47 57 IMHPOS     DC.B	$37+LEFTSIDE,$37+LEFTSIDE,$2F+LEFTSIDE,$3F+LEFTSIDE
    987  dcec		       02 03 01 01 IMDIR      DC.B	DLEFT,DUP,DDOWN,DDOWN
    988  dcf0		       00 04 04 04 IMSTATE    DC.B	MSTNORM,MSTATPEN,MSTATPEN,MSTATPEN
    989  dcf4		       57 5e ae 2a IMCOLOR    DC.B	PINK,LTPINK,LTBLUE,GOLD
    990  dcf8
    991  dcf8		       03 03 02 00 HOMEDIR    DC.B	DUP,DUP,DLEFT,DRIGHT
    992  dcfc		       03 03 00 02 OUTDIR     DC.B	DUP,DUP,DRIGHT,DLEFT
    993  dd00
    994  dd00		       00 04 00 fc DIROFFZ4   DC.B	$00,$04,$00,$FC
    995  dd04		       04 00 fc 00 DIROFFC4   DC.B	$04,$00,$FC,$00
    996  dd08		       00 02 00 fe DIROFFZ2   DC.B	$00,$02,$00,$FE
    997  dd0c		       02 00 fe 00 DIROFFC2   DC.B	$02,$00,$FE,$00
    998  dd10
    999  dd10		       c0 b4 96 78*BTIME      DC.B	$C0,$B4,$96,$78,$5A,$3C,$96,$3C,$3C,$1E
   1000  dd1a		       96 3c 1e 1e*	      DC.B	$96,$3C,$1E,$1E,$5A,$1E,$1E,$01,$1E,$01
   1001  dd24
   1002  dd24							;*  STAMPS FOR THE MONSTERS - INDEX: M0BLUE + M0DIR + (M0STATE ^ $10)/4
MONSTER.ASM (1003): error: Value in 'byte dc 293' must be <$100.
MONSTER.ASM (1003): error: Value in 'byte dc 341' must be <$100.
   1003  dd24		       c5 f5 25 55 MONSTMPH   DC.B	>NRMMONST,>NRMMONST+48,>NRMMONST+96,>NRMMONST+144
MONSTER.ASM (1004): error: Value in 'byte dc 269' must be <$100.
MONSTER.ASM (1004): error: Value in 'byte dc 317' must be <$100.
MONSTER.ASM (1004): error: Value in 'byte dc 365' must be <$100.
   1004  dd28		       dd 0d 3d 6d	      DC.B	>NRMMONST+24,>NRMMONST+72,>NRMMONST+120,>NRMMONST+168
   1005  dd2c		       c6 c6 c6 c6	      DC.B	>BLUMONST,>BLUMONST,>BLUMONST,>BLUMONST
   1006  dd30		       de de de de	      DC.B	>BLUMONST+24,>BLUMONST+24,>BLUMONST+24,>BLUMONST+24
MONSTER.ASM (1007): error: Value in 'byte dc 270' must be <$100.
   1007  dd34		       c6 de f6 0e	      DC.B	>EYEMONST,>EYEMONST+24,>EYEMONST+48,>EYEMONST+72
MONSTER.ASM (1008): error: Value in 'byte dc 270' must be <$100.
   1008  dd38		       c6 de f6 0e	      DC.B	>EYEMONST,>EYEMONST+24,>EYEMONST+48,>EYEMONST+72
   1009  dd3c		       58 88 b8 e8 MONSTMPL   DC.B	<NRMMONST,<NRMMONST+48,<NRMMONST+96,<NRMMONST+144
MONSTER.ASM (1010): error: Value in 'byte dc 256' must be <$100.
   1010  dd40		       70 a0 d0 00	      DC.B	<NRMMONST+24,<NRMMONST+72,<NRMMONST+120,<NRMMONST+168
   1011  dd44		       18 18 18 18	      DC.B	<BLUMONST,<BLUMONST,<BLUMONST,<BLUMONST
   1012  dd48		       30 30 30 30	      DC.B	<BLUMONST+24,<BLUMONST+24,<BLUMONST+24,<BLUMONST+24
   1013  dd4c		       48 60 78 90	      DC.B	<EYEMONST,<EYEMONST+24,<EYEMONST+48,<EYEMONST+72
   1014  dd50		       48 60 78 90	      DC.B	<EYEMONST,<EYEMONST+24,<EYEMONST+48,<EYEMONST+72
   1015  dd54
   1016  dd54							;*  TABLES OF SCORE BITMAPS
MONSTER.ASM (1017): error: Value in 'byte dc 272' must be <$100.
   1017  dd54		       c8 e0 f8 10 MSCRTBLH   DC.B	>MONSTNUM,>MONSTNUM+24,>MONSTNUM+48,>MONSTNUM+72
MONSTER.ASM (1018): error: Value in 'byte dc 256' must be <$100.
MONSTER.ASM (1018): error: Value in 'byte dc 280' must be <$100.
MONSTER.ASM (1018): error: Value in 'byte dc 304' must be <$100.
   1018  dd58		       e8 00 18 30 MSCRTBLL   DC.B	<MONSTNUM,<MONSTNUM+24,<MONSTNUM+48,<MONSTNUM+72
   1019  dd5c
   1020  dd5c							;*  HACK TABLE TO SLOW MONSTERS IN PEN
   1021  dd5c		       00 ff 00 01 HACKVPOS   DC.B	$00,$FF,$00,$01
   1022  dd60							; END
------- FILE MDOIT.ASM
------- FILE PATH.ASM LEVEL 2 PASS 2
      0  dd60					      include	"PATH.ASM"
      1  dd60					      processor	6502
      2  dd60
      3  dd60							;* PATH.S	    ROUTINES FOR PATH ANALYSIS IN MS PAC-MAN
      4  dd60							;*
      5  dd60
      6  dd60							;* CHECKDIR  - CHECK FOR DIRECTIONS FROM A LOCATION
      7  dd60							;*	    IN:     TEMP4 = ZONE, TEMP5 = COLUMN, TEMP6 = DIR
      8  dd60							;*	    OUT:    T12=RIGHT, T13=DOWN, T14=LEFT, T15=UP,(LEGIT=0,BACK=1,WALL=-1)
      9  dd60							;*		    A=~INTERSECT
     10  dd60							;*  Y IS DISTORTED, X IS SAVED
     11  dd60							;*  TEMP0-3,10-11 ARE USED
     12  dd60
     13  dd60		       86 bb	   CHECKDIR   STX	TEMP11
     14  dd62		       a9 00		      LDA	#0
     15  dd64		       85 bc		      STA	TEMP12
     16  dd66		       85 bd		      STA	TEMP13
     17  dd68		       85 be		      STA	TEMP14
     18  dd6a		       85 bf		      STA	TEMP15
     19  dd6c		       aa		      TAX
     20  dd6d
     21  dd6d		       bd 9a de    CHDLOOP    LDA	T4OFF,X	;		  ;GET ZONE AND COLUMN NEXT TO POS
     22  dd70		       18		      CLC
     23  dd71		       65 b4		      ADC	TEMP4
     24  dd73		       85 b0		      STA	TEMP0
     25  dd75		       bd 9e de 	      LDA	T5OFF,X
     26  dd78		       18		      CLC
     27  dd79		       65 b5		      ADC	TEMP5
     28  dd7b		       85 b1		      STA	TEMP1
     29  dd7d		       20 0d f6 	      JSR	GETCHAR	;		  ;FIND OUT WHAT IS THERE
     30  dd80		       c9 50		      CMP	#BLNKCHAR	;		;SEE IF VALID PLACE TO GO
     31  dd82		       10 04		      BPL	CHDNEXT
     32  dd84		       a9 ff		      LDA	#-1	;		      ;NO GOOD
     33  dd86		       95 bc		      STA	TEMP12,X
     34  dd88		       e8	   CHDNEXT    INX
     35  dd89		       e0 04		      CPX	#$04
     36  dd8b		       30 e0		      BMI	CHDLOOP
     37  dd8d
     38  dd8d		       a5 b6		      LDA	TEMP6	;		    ;SET DIRECTION WE CAME FROM
     39  dd8f		       18		      CLC
     40  dd90		       69 02		      ADC	#2
     41  dd92		       29 03		      AND	#3
     42  dd94		       aa		      TAX
     43  dd95		       a9 01		      LDA	#1
     44  dd97		       95 bc		      STA	TEMP12,X
     45  dd99
     46  dd99		       a5 b6		      LDA	TEMP6	;		    ;SEE IF IN INTERSECTION
     47  dd9b		       18		      CLC
     48  dd9c		       69 01		      ADC	#1
     49  dd9e		       29 03		      AND	#3
     50  dda0		       aa		      TAX
     51  dda1		       18		      CLC
     52  dda2		       69 02		      ADC	#2
     53  dda4		       29 03		      AND	#3
     54  dda6		       a8		      TAY
     55  dda7		       a9 ff		      LDA	#$FF
     56  dda9		       35 bc		      AND	TEMP12,X
     57  ddab		       39 bc 00 	      AND	TEMP12,Y
     58  ddae		       a6 bb		      LDX	TEMP11
     59  ddb0		       60		      RTS
     60  ddb1
     61  ddb1							;* WHCHWAY - GIVEN A INTERSECTION AND A GOAL, FIGURE OUT BEST PATH
     62  ddb1							;*	    IN:     TEMP4=CURRENT ZONE, TEMP5=CURRENT COL, TEMP6= CURRENT DIR
     63  ddb1							;*		    TEMP7=GOAL ZONE, TEMP8=GOAL COL, TEMP12-15 INTERSECTION STATE
     64  ddb1							;*	    OUT:    A=GOAL DIR
     65  ddb1							;*	    USES:   TEMP0-3,9-11
     66  ddb1							;*	    SAVES:  X,Y
     67  ddb1
     68  ddb1		       8a	   WHCHWAY    TXA		;			      ;STORE REGISTERS ON STACK
     69  ddb2		       48		      PHA
     70  ddb3		       98		      TYA
     71  ddb4		       48		      PHA
     72  ddb5		       20 f0 dd 	      JSR	NORMGOAL	;		 ;NORMALIZE GOAL
     73  ddb8		       20 45 de 	      JSR	SETSQUAR
     74  ddbb		       a5 b6		      LDA	TEMP6
     75  ddbd		       85 b2		      STA	TEMP2	;		    ; CURRENT BEST DIRECTION
     76  ddbf		       a9 8f		      LDA	#$8F	;		     ; LARGE NEG NUMBER
     77  ddc1		       85 b3		      STA	TEMP3	;		    ; -(CURRENT DISTANCE IN BEST DIRECTION)
     78  ddc3		       a2 00		      LDX	#0
     79  ddc5
     80  ddc5		       bd 9a de    WWLOOP     LDA	T4OFF,X	;		  ;ADJUST ZONE AND COLUMN
     81  ddc8		       18		      CLC
     82  ddc9		       65 b4		      ADC	TEMP4
     83  ddcb		       85 b9		      STA	TEMP9
     84  ddcd		       bd 9e de 	      LDA	T5OFF,X
     85  ddd0		       18		      CLC
     86  ddd1		       65 b5		      ADC	TEMP5
     87  ddd3		       85 ba		      STA	TEMP10
     88  ddd5		       b5 bc		      LDA	TEMP12,X	;		 ;GET STATE THERE, SEE IF VALID
     89  ddd7		       d0 0b		      BNE	WWNEXT
     90  ddd9		       20 0c de 	      JSR	CALCDIST	;		 ;FIND DISTANCE TO GOAL
     91  dddc		       c5 b3		      CMP	TEMP3	;		    ;SEE IF SHORTER
     92  ddde		       90 04		      BCC	WWNEXT
     93  dde0		       85 b3		      STA	TEMP3	;		    ;NEW CURRENT DISTANCE
     94  dde2		       86 b2		      STX	TEMP2	;		    ;NEW DIRECTION
     95  dde4		       e8	   WWNEXT     INX
     96  dde5		       e0 04		      CPX	#$04
     97  dde7		       30 dc		      BMI	WWLOOP
     98  dde9
     99  dde9		       68		      PLA		;			      ;RESTORE REGISTERS FROM STACK
    100  ddea		       a8		      TAY
    101  ddeb		       68		      PLA
    102  ddec		       aa		      TAX
    103  dded		       a5 b2		      LDA	TEMP2
    104  ddef		       60		      RTS
    105  ddf0
    106  ddf0
    107  ddf0							;*  NORMGOAL	    NORMALIZES THE GOAL ZONE AND COLUMN.  MAKES SURE THEY ARE IN
    108  ddf0							;*		    THE RANGE 0..3F
    109  ddf0							;*	    IN:     TEMP7=GOAL ZONE, TEMP8=GOAL COLUMN
    110  ddf0							;*	    OUT:    TEMP7, TEMP8 NORMALIZED
    111  ddf0		       a5 b7	   NORMGOAL   LDA	TEMP7	;		    ;FIRST DO ZONE
    112  ddf2		       20 ff dd 	      JSR	NORMLIZE
    113  ddf5		       85 b7		      STA	TEMP7
    114  ddf7		       a5 b8		      LDA	TEMP8	;		    ;THEN COLUMN
    115  ddf9		       20 ff dd 	      JSR	NORMLIZE
    116  ddfc		       85 b8		      STA	TEMP8
    117  ddfe		       60		      RTS
    118  ddff
    119  ddff		       30 05	   NORMLIZE   BMI	NMLFLOOR	;		 ;SEE IF TOO LOW
    120  de01		       c9 40		      CMP	#$40
    121  de03		       10 04		      BPL	NMLTOP	;		   ;SEE IF TOO HI
    122  de05		       60		      RTS
    123  de06		       a9 00	   NMLFLOOR   LDA	#$00	;		     ;TOO LOW - USE 0
    124  de08		       60		      RTS
    125  de09		       a9 3f	   NMLTOP     LDA	#$3F	;		     ;TOO HI - USE 3F
    126  de0b		       60		      RTS
    127  de0c
    128  de0c
    129  de0c							;* CALCDIST	    CALCULATES DISTANCE BETWEEN TWO POINTS
    130  de0c							;*	    INT:    (TEMP7,TEMP8) FIRST POINT (TEMP9, TEMP10) SECOND POINT
    131  de0c							;*	    OUT:    A= NEGOTIVE OF DISTANCE
    132  de0c							;*	    USES:   TEMP0,1
    133  de0c
    134  de0c				   CALCDIST
    135  de0c		       a5 b7		      LDA	TEMP7
    136  de0e		       38		      SEC
    137  de0f		       e5 b9		      SBC	TEMP9
    138  de11		       85 b1		      STA	TEMP1
    139  de13		       10 07		      BPL	CALCDIS1
    140  de15		       a9 00		      LDA	#0
    141  de17		       38		      SEC
    142  de18		       e5 b1		      SBC	TEMP1
    143  de1a		       85 b1		      STA	TEMP1
    144  de1c
    145  de1c				   CALCDIS1
    146  de1c		       a5 b8		      LDA	TEMP8
    147  de1e		       38		      SEC
    148  de1f		       e5 ba		      SBC	TEMP10
    149  de21		       85 b0		      STA	TEMP0
    150  de23		       10 07		      BPL	CALCDIS2
    151  de25		       a9 00		      LDA	#0
    152  de27		       38		      SEC
    153  de28		       e5 b0		      SBC	TEMP0
    154  de2a		       85 b0		      STA	TEMP0
    155  de2c
    156  de2c		       8a	   CALCDIS2   TXA		;			      ;GET TEMP11+X INTO Y
    157  de2d		       18		      CLC
    158  de2e		       65 bb		      ADC	TEMP11
    159  de30		       a8		      TAY
    160  de31		       a5 b0		      LDA	TEMP0	;		    ;GET SUM OF DISTANCES
    161  de33		       18		      CLC
    162  de34		       65 b1		      ADC	TEMP1
    163  de36		       18		      CLC
    164  de37		       69 02		      ADC	#2	;		       ;GIVE SOME ROOM FOR SQUARE ADJUSTMENT
    165  de39		       18		      CLC
    166  de3a		       79 8a de 	      ADC	SQUARTAB,Y
    167  de3d		       85 b1		      STA	TEMP1	;		    ;AND NOW INVERT IT
    168  de3f		       a9 00		      LDA	#0
    169  de41		       38		      SEC
    170  de42		       e5 b1		      SBC	TEMP1
    171  de44		       60		      RTS
    172  de45
    173  de45
    174  de45							;*  THIS ROUTINE FINDS OUT WHAT DIRECTION SHOULD BE FAVORED, AND WHAT SHOULD BE
    175  de45							;*  SHUNNED.  THIS SETS UP TEMP11, WHICH SHOULD BE USED WITH THE DIRECTION AS
    176  de45							;*  AN OFFSET INTO SQUARTAB.
    177  de45							;*  THIS SHOULD BE CALLED SOON ENOUGH THAT TEMP0-3 CAN BE USED
    178  de45		       a9 00	   SETSQUAR   LDA	#$00
    179  de47		       85 b0		      STA	TEMP0	;		    ;VERTICAL FLIP BIT
    180  de49		       85 b1		      STA	TEMP1	;		    ;HORIZONTAL FLIP BIT
    181  de4b
    182  de4b		       a5 b7		      LDA	TEMP7	;		    ;GOAL FOR ZONE
    183  de4d		       38		      SEC
    184  de4e		       e5 b4		      SBC	TEMP4	;		    ;OUR ZONE
    185  de50		       85 b2		      STA	TEMP2	;		    ;VERTICAL DELTA
    186  de52		       10 0b		      BPL	SSQHOR
    187  de54		       a9 08		      LDA	#$08
    188  de56		       85 b0		      STA	TEMP0	;		    ;VERTICAL FLIP
    189  de58		       a9 00		      LDA	#$00
    190  de5a		       38		      SEC
    191  de5b		       e5 b2		      SBC	TEMP2
    192  de5d		       85 b2		      STA	TEMP2
    193  de5f
    194  de5f		       a5 b8	   SSQHOR     LDA	TEMP8	;		    ;GOAL FOR COLUMN
    195  de61		       38		      SEC
    196  de62		       e5 b5		      SBC	TEMP5	;		    ;OUR COLUMN
    197  de64		       85 b3		      STA	TEMP3	;		    ;HORIZONTAL DELTA
    198  de66		       10 0b		      BPL	SSQCOMP
    199  de68		       a9 08		      LDA	#$08
    200  de6a		       85 b1		      STA	TEMP1	;		    ;HORIZONTAL FLIP
    201  de6c		       a9 00		      LDA	#$00
    202  de6e		       38		      SEC
    203  de6f		       e5 b3		      SBC	TEMP3
    204  de71		       85 b3		      STA	TEMP3
    205  de73
    206  de73		       a5 b2	   SSQCOMP    LDA	TEMP2	;		    ;VERTICAL DELTA
    207  de75		       38		      SEC
    208  de76		       e5 b3		      SBC	TEMP3	;		    ;HORIZONTAL DELTA
    209  de78		       30 08		      BMI	HORMORE
    210  de7a
    211  de7a		       a9 04		      LDA	#$04	;		     ;VERTICAL MORE
    212  de7c		       18		      CLC
    213  de7d		       65 b0		      ADC	TEMP0	;		    ;8 MORE IF VERTICAL FLIPPED
    214  de7f		       85 bb		      STA	TEMP11
    215  de81		       60		      RTS
    216  de82
    217  de82		       a9 00	   HORMORE    LDA	#$00	;		     ;HORIZONTAL MORE
    218  de84		       18		      CLC
    219  de85		       65 b1		      ADC	TEMP1	;		    ;8 MORE IF HORIZONTAL FLIPPED
    220  de87		       85 bb		      STA	TEMP11
    221  de89		       60		      RTS
    222  de8a
    223  de8a
    224  de8a
    225  de8a							;*  THIS TABLE IS TO ADD A SLIGHT COMPENSATION TO MAKE IT LOOK MORE LIKE A SQUARE
    226  de8a		       ff 00 01 00*SQUARTAB   DC.B	-1,0,1,0,0,-1,0,1,1,0,-1,0,0,1,0,-1
    227  de9a
    228  de9a							;*  THIS TABLE USED FOR OFFSETS FOR ZONES AROUND
    229  de9a		       00 01 00 ff T4OFF      DC.B	0,1,0,-1
    230  de9e		       01 00 ff 00 T5OFF      DC.B	1,0,-1,0
    231  dea2							; END
------- FILE MDOIT.ASM
     55  dea2					      align	2
------- FILE SPEED.ASM LEVEL 2 PASS 2
      0  dea2					      include	"SPEED.ASM"
      1  dea2					      processor	6502
      2  dea2							;*
      3  dea2							;*  SPEED.S	     SPEED REGISTER CODE
      4  dea2							;*
      5  dea2
      6  dea2							;*
      7  dea2							;* INITSPED	    - INITIALIZE SPEED REGISTERS
      8  dea2							;*
      9  dea2				   INITSPED
     10  dea2		       a4 a6		      LDY	LEVEL	;		    ;GET THE RIGHT INITIAL SPEEDS
     11  dea4		       c0 15		      CPY	#21
     12  dea6		       30 05		      BMI	ISSMALL
     13  dea8		       a2 9f		      LDX	#31+128
     14  deaa		       4c b6 de 	      JMP	INITSPD
     15  dead
     16  dead		       c0 05	   ISSMALL    CPY	#$05
     17  deaf		       30 02		      BMI	ISSMALER
     18  deb1		       a0 05		      LDY	#$05
     19  deb3		       be fb df    ISSMALER   LDX	ISPED,Y
     20  deb6
     21  deb6
     22  deb6		       a0 1f	   INITSPD    LDY	#31
     23  deb8		       bd 38 df    SPDLOOP    LDA	SPEEDS,X
     24  debb		       99 50 21 	      STA	M0SPEED0,Y
     25  debe		       ca		      DEX
     26  debf		       88		      DEY
     27  dec0		       10 f6		      BPL	SPDLOOP
     28  dec2
     29  dec2		       a6 a5		      LDX	RACK	;		     ;GET OFFSET FOR THE RIGHT RED THRESHOLD
     30  dec4		       e0 12		      CPX	#18
     31  dec6		       30 02		      BMI	INITREDS
     32  dec8		       a2 18		      LDX	#$18
     33  deca
     34  deca		       bc e8 df    INITREDS   LDY	REDSOFF,X
     35  decd		       b9 d8 df 	      LDA	REDS,Y
     36  ded0		       85 f9		      STA	REDTHRSH
     37  ded2		       b9 d9 df 	      LDA	REDS+1,Y
     38  ded5		       85 fa		      STA	REDTHRSH+1
     39  ded7		       60		      RTS
     40  ded8
     41  ded8							;*
     42  ded8							;* INCMSPED	    - INCREMENT MONSTER SPEEDS
     43  ded8							;*
     44  ded8		       a2 04	   INCMSPED   LDX	#4
     45  deda		       18	   INCMLOOP   CLC
     46  dedb		       3e 50 21 	      ROL	M0SPEED0,X
     47  dede		       3e 55 21 	      ROL	M0SPEED1,X
     48  dee1		       3e 5a 21 	      ROL	M0SPEED2,X
     49  dee4		       3e 5f 21 	      ROL	M0SPEED3,X
     50  dee7		       bd 50 21 	      LDA	M0SPEED0,X
     51  deea		       69 00		      ADC	#0
     52  deec		       9d 50 21 	      STA	M0SPEED0,X
     53  deef		       ca		      DEX
     54  def0		       10 e8		      BPL	INCMLOOP
     55  def2		       60		      RTS
     56  def3
     57  def3							;*
     58  def3							;* INCPSPED	    - INCREMENT PAC SPEEDS
     59  def3							;*
     60  def3		       a2 01	   INCPSPED   LDX	#1
     61  def5		       18	   INCPLOOP   CLC
     62  def6		       3e 64 21 	      ROL	P0SPEED0,X
     63  def9		       3e 66 21 	      ROL	P0SPEED1,X
     64  defc		       3e 68 21 	      ROL	P0SPEED2,X
     65  deff		       3e 6a 21 	      ROL	P0SPEED3,X
     66  df02		       bd 64 21 	      LDA	P0SPEED0,X
     67  df05		       69 00		      ADC	#0
     68  df07		       9d 64 21 	      STA	P0SPEED0,X
     69  df0a		       ca		      DEX
     70  df0b		       10 e8		      BPL	INCPLOOP
     71  df0d
     72  df0d		       60		      RTS
     73  df0e
     74  df0e							;* CHKMON: SETS A IF THIS MONSTER IS TO MOVE THIS CYCLE
     75  df0e							;*	    IN	    X IS THE MONSTER NUMBER
     76  df0e							;*	    OUT     A IS TRUE IF IT IS TIME TO MOVE
     77  df0e							;*	    USES    A,Y
     78  df0e
     79  df0e				   CHKMON
     80  df0e		       bd 38 21 	      LDA	M0STATE,X
     81  df11		       c9 01		      CMP	#MSTEYES
     82  df13		       d0 03		      BNE	CHKMON1
     83  df15		       a9 01		      LDA	#1
     84  df17		       60		      RTS
     85  df18				   CHKMON1
     86  df18		       bc 44 21 	      LDY	M0SPEED,X
     87  df1b		       bd 48 21 	      LDA	M0TUNNEL,X
     88  df1e		       f0 02		      BEQ	CHKMON2
     89  df20		       a0 02		      LDY	#SPDSLOW
     90  df22				   CHKMON2
     91  df22		       b9 50 21 	      LDA	M0SPEED0,Y
     92  df25		       29 01		      AND	#1
     93  df27		       60		      RTS
     94  df28
     95  df28							;* CHKPAC: SETS A IF PAC IS TO MOVE THIS CYCLE
     96  df28							;*	    IN
     97  df28							;*	    OUT     A IS TRUE IF IT IS TIME TO MOVE
     98  df28							;*	    USES    A,Y
     99  df28
    100  df28				   CHKPAC
    101  df28		       a5 fd		      LDA	ISBLUE
    102  df2a		       d0 06		      BNE	CHKPAC1
    103  df2c		       ad 64 21 	      LDA	P0SPEED0
    104  df2f		       29 01		      AND	#1
    105  df31		       60		      RTS
    106  df32				   CHKPAC1
    107  df32		       ad 65 21 	      LDA	P0SPEED0+1
    108  df35		       29 01		      AND	#1
    109  df37		       60		      RTS
    110  df38
    111  df38		       22 21 21 89*SPEEDS     DC.B	$22,$21,$21,$89,$89	;MONSTER SPEEDS RACK 0
    112  df3d		       22 08 08 12*	      DC.B	$22,$08,$08,$12,$12	;  8,6,6,9,9
    113  df42		       22 21 21 24*	      DC.B	$22,$21,$21,$24,$24
    114  df47		       22 08 08 44*	      DC.B	$22,$08,$08,$44,$44
    115  df4c		       4a 2a		      DC.B	$4A,$2A	;		  ;PAC SPEEDS RACK 0
    116  df4e		       52 95		      DC.B	$52,$95	;		  ;  13,14
    117  df50		       95 2a		      DC.B	$95,$2A
    118  df52		       29 95		      DC.B	$29,$95
    119  df54		       07 a4		      DC.B	$07,$A4	;		  ; REVERSE TIMES(HAVE SAME RACKS)
    120  df56		       19 54		      DC.B	$19,$54
    121  df58
    122  df58		       2a 24 22 55*	      DC.B	$2A,$24,$22,$55,$6A	;MONSTER SPEEDS RACK 1
    123  df5d		       aa 92 22 55*	      DC.B	$AA,$92,$22,$55,$AA	;  15,10,8,16,17
    124  df62		       55 24 22 55*	      DC.B	$55,$24,$22,$55,$D5
    125  df67		       55 92 22 55*	      DC.B	$55,$92,$22,$55,$55
    126  df6c		       55 6a		      DC.B	$55,$6A	;		  ;PAC SPEEDS RACK 1
    127  df6e		       55 d5		      DC.B	$55,$D5	;		  ;  16,17
    128  df70		       55 6a		      DC.B	$55,$6A
    129  df72		       55 d5		      DC.B	$55,$D5
    130  df74		       01 a4		      DC.B	$01,$A4	;		  ; REVERSE TIMES(HAVE SAME RACKS)
    131  df76		       06 54		      DC.B	$06,$54
    132  df78
    133  df78		       6a 24 24 6a*	      DC.B	$6A,$24,$24,$6A,$5A	;MONSTER SPEEDS RACK 2-4
    134  df7d		       aa 92 48 d5*	      DC.B	$AA,$92,$48,$D5,$D6	;  17,11,9,18,19
    135  df82		       d5 49 91 6a*	      DC.B	$D5,$49,$91,$6A,$B5
    136  df87		       55 25 22 d5*	      DC.B	$55,$25,$22,$D5,$AD
    137  df8c		       6a 5a		      DC.B	$6A,$5A	;		  ;PAC SPEEDS RACK 2-4
    138  df8e		       d5 d6		      DC.B	$D5,$D6	;		  ;  18,19
    139  df90		       6a b5		      DC.B	$6A,$B5
    140  df92		       d5 ad		      DC.B	$D5,$AD
    141  df94		       01 a4		      DC.B	$01,$A4	;		  ; REVERSE TIMES(HAVE SAME RACKS)
    142  df96		       06 54		      DC.B	$06,$54
    143  df98
    144  df98		       5a 25 24 6d*	      DC.B	$5A,$25,$24,$6D,$6D	;MONSTER SPEEDS RACK 5-20
    145  df9d		       d6 25 92 6d*	      DC.B	$D6,$25,$92,$6D,$B6	;  19,12,10,20,20
    146  dfa2		       b5 25 24 6d*	      DC.B	$B5,$25,$24,$6D,$6D
    147  dfa7		       ad 25 92 6d*	      DC.B	$AD,$25,$92,$6D,$B6
    148  dfac		       6d 6d		      DC.B	$6D,$6D	;		  ;PAC SPEEDS RACK 5-20
    149  dfae		       6d 6d		      DC.B	$6D,$6D	;		  ;  20,20
    150  dfb0		       6d 6d		      DC.B	$6D,$6D
    151  dfb2		       6d 6d		      DC.B	$6D,$6D
    152  dfb4		       01 2c		      DC.B	$01,$2C	;		  ; REVERSE TIMES(HAVE SAME RACKS)
    153  dfb6		       05 dc		      DC.B	$05,$DC
    154  dfb8
    155  dfb8		       5a 24 24 6d*	      DC.B	$5A,$24,$24,$6D,$6D	;MONSTER SPEEDS RACK 21-
    156  dfbd		       d6 48 92 6d*	      DC.B	$D6,$48,$92,$6D,$B6	;  19,9,10,20,20
    157  dfc2		       b5 91 24 6d*	      DC.B	$B5,$91,$24,$6D,$DB
    158  dfc7		       ad 22 92 6d*	      DC.B	$AD,$22,$92,$6D,$6D
    159  dfcc		       6a 6a		      DC.B	$6A,$6A	;		  ;PAC SPEEDS RACK 21-
    160  dfce		       d5 d5		      DC.B	$D5,$D5	;		  ;  18,18
    161  dfd0		       6a 6a		      DC.B	$6A,$6A
    162  dfd2		       d5 d5		      DC.B	$D5,$D5
    163  dfd4		       01 2c		      DC.B	$01,$2C	;		  ; REVERSE TIMES(HAVE SAME RACKS)
    164  dfd6		       05 dc		      DC.B	$05,$DC
    165  dfd8
    166  dfd8
    167  dfd8		       24 1a	   REDS       DC.B	$24,$1A	;		  ;THRESHOLDS FOR RED MONSTER GETTING
    168  dfda		       2e 1f		      DC.B	$2E,$1F	;		  ;  MEAN - NOTE:  I HAVE INCREASED ALL
    169  dfdc		       38 24		      DC.B	$38,$24	;		  ;  THESE VALUES BY $10 TO COMPENSATE
    170  dfde		       42 29		      DC.B	$42,$29	;		  ;  FOR THE SMALLER MAZES
    171  dfe0		       4c 2e		      DC.B	$4C,$2E
    172  dfe2		       60 38		      DC.B	$60,$38
    173  dfe4		       74 42		      DC.B	$74,$42
    174  dfe6		       88 4c		      DC.B	$88,$4C
    175  dfe8
    176  dfe8							;*  OFFSETS INTO ABOVE TABLE BY RACK
    177  dfe8		       00 00 02 04*REDSOFF    DC.B	$00,$00,$02,$04,$04,$04,$06,$06
    178  dff0		       06 08 08 08*	      DC.B	$06,$08,$08,$08,$0A,$0A,$0A,$0C
    179  dff8		       0c 0c 0e 	      DC.B	$0C,$0C,$0E
    180  dffb
    181  dffb							;*  INITIAL SPEED TABLE, BY RACK THROUGH RACK 5
    182  dffb		       1f 3f 5f 5f*ISPED      DC.B	31,31+32,31+64,31+64,31+64,31+96
    183  e001							; END
------- FILE MDOIT.ASM
------- FILE INTRSECT.ASM LEVEL 2 PASS 2
      0  e001					      include	"INTRSECT.ASM"
      1  e001					      processor	6502
      2  e001							;*
      3  e001							;* INTRSECT.S	    PAC-FRUIT AND PAC-MONSTER INTERSECT ROUTINES
      4  e001							;*
      5  e001
      6  e001							;* PFINTR	    PAC-FRUIT INTERSECT ROUTINE
      7  e001							;*	    IN:
      8  e001							;*	    USES:
      9  e001
     10  e001				   PFINTR
     11  e001		       ad 10 21 	      LDA	FENABLE	;		  ;MAKE SURE FRUIT ON
     12  e004		       f0 47		      BEQ	PFIEND
     13  e006		       ad 1b 21 	      LDA	FSCORE	;		   ;MAKE SURE FRUIT NOT SCORE
     14  e009		       d0 42		      BNE	PFIEND
     15  e00b
     16  e00b		       ad 01 21 	      LDA	PHPOS
     17  e00e		       38		      SEC
     18  e00f		       ed 12 21 	      SBC	FHPOS
     19  e012		       85 b0		      STA	TEMP0
     20  e014		       10 07		      BPL	PFINTR1
     21  e016		       a9 00		      LDA	#0
     22  e018		       38		      SEC
     23  e019		       e5 b0		      SBC	TEMP0
     24  e01b		       85 b0		      STA	TEMP0	;		    ; TEMP0 = ABS(PHPOS-FHPOS)
     25  e01d		       c9 06	   PFINTR1    CMP	#$06
     26  e01f		       b0 2c		      BCS	PFIEND
     27  e021
     28  e021		       ad 00 21 	      LDA	PVPOS
     29  e024		       38		      SEC
     30  e025		       ed 11 21 	      SBC	FVPOS
     31  e028		       85 b1		      STA	TEMP1
     32  e02a		       10 07		      BPL	PFINTR2
     33  e02c		       a9 00		      LDA	#0
     34  e02e		       38		      SEC
     35  e02f		       e5 b1		      SBC	TEMP1
     36  e031		       85 b1		      STA	TEMP1	;		    ; TEMP1 = ABS(PVPOS-FVPOS)
     37  e033		       a4 b0	   PFINTR2    LDY	TEMP0
     38  e035		       d9 f4 e0 	      CMP	INTRSECT,Y
     39  e038		       b0 13		      BCS	PFIEND
     40  e03a
     41  e03a		       ac 16 21 	      LDY	FFRUIT
     42  e03d		       b9 02 e1 	      LDA	FRTSCORH,Y
     43  e040		       85 bb		      STA	TEMP11
     44  e042		       b9 0a e1 	      LDA	FRTSCORL,Y
     45  e045		       85 bc		      STA	TEMP12
     46  e047		       20 28 f6 	      JSR	ADDTOTAL
     47  e04a		       4c 0c d6 	      JMP	EATFRT
     48  e04d
     49  e04d		       60	   PFIEND     RTS
     50  e04e
     51  e04e							;* PMINTR	    PAC-MONSTER INTERSECT ROUTINE
     52  e04e							;*	    IN:
     53  e04e							;*	    USES:
     54  e04e
     55  e04e				   PMINTR
     56  e04e		       a2 03		      LDX	#3
     57  e050				   PMILOOP
     58  e050		       ad 01 21 	      LDA	PHPOS
     59  e053		       38		      SEC
     60  e054		       fd 24 21 	      SBC	M0HPOS,X
     61  e057		       85 b0		      STA	TEMP0
     62  e059		       10 07		      BPL	PMINTR1
     63  e05b		       a9 00		      LDA	#0
     64  e05d		       38		      SEC
     65  e05e		       e5 b0		      SBC	TEMP0
     66  e060		       85 b0		      STA	TEMP0	;		    ; TEMP0 = ABS(PHPOS-MHPOS)
     67  e062		       c9 06	   PMINTR1    CMP	#$06
     68  e064		       b0 44		      BCS	PMIEND
     69  e066
     70  e066		       ad 00 21 	      LDA	PVPOS
     71  e069		       38		      SEC
     72  e06a		       fd 20 21 	      SBC	M0VPOS,X
     73  e06d		       85 b1		      STA	TEMP1
     74  e06f		       10 07		      BPL	PMINTR2
     75  e071		       a9 00		      LDA	#0
     76  e073		       38		      SEC
     77  e074		       e5 b1		      SBC	TEMP1
     78  e076		       85 b1		      STA	TEMP1	;		    ; TEMP1 = ABS(PVPOS-MVPOS)
     79  e078		       a4 b0	   PMINTR2    LDY	TEMP0
     80  e07a		       d9 f4 e0 	      CMP	INTRSECT,Y
     81  e07d		       b0 2b		      BCS	PMIEND
     82  e07f
     83  e07f		       bd 38 21 	      LDA	M0STATE,X
     84  e082		       d0 26		      BNE	PMIEND
     85  e084		       bd 40 21 	      LDA	M0BLUE,X
     86  e087		       d0 06		      BNE	PMINTR3
     87  e089		       20 87 d3 	      JSR	KILLPAC
     88  e08c		       4c b8 f6 	      JMP	DECLIVES
     89  e08f				   PMINTR3
     90  e08f		       c9 08		      CMP	#$08
     91  e091		       d0 17		      BNE	PMIEND
     92  e093		       20 ae e0 	      JSR	MONDEATH
     93  e096		       20 37 db 	      JSR	TURNEYES
     94  e099		       a4 fe		      LDY	GREEDCNT
     95  e09b		       b9 fa e0 	      LDA	MONSCORH,Y
     96  e09e		       85 bb		      STA	TEMP11
     97  e0a0		       b9 fe e0 	      LDA	MONSCORL,Y
     98  e0a3		       85 bc		      STA	TEMP12
     99  e0a5		       20 28 f6 	      JSR	ADDTOTAL
    100  e0a8		       e6 fe		      INC	GREEDCNT
    101  e0aa
    102  e0aa		       ca	   PMIEND     DEX
    103  e0ab		       10 a3		      BPL	PMILOOP
    104  e0ad		       60		      RTS
    105  e0ae
    106  e0ae							;*
    107  e0ae							;* MONDEATH	    -MONSTER DEATH CODE
    108  e0ae							;*	    IN	    X IS MONSTER NUMBER
    109  e0ae
    110  e0ae				   MONDEATH
    111  e0ae		       20 2f da 	      JSR	SCORSTMP
    112  e0b1		       20 d6 d2 	      JSR	ERASEPAC
    113  e0b4		       20 8e ea 	      JSR	CLEARTUN
    114  e0b7		       a9 11		      LDA	#$11
    115  e0b9		       20 43 ea 	      JSR	DOTUNE
    116  e0bc		       a5 a0		      LDA	RTLOCAL
    117  e0be		       85 d4		      STA	RTSAVE
    118  e0c0		       a5 a1		      LDA	RTLOCAL+1
    119  e0c2		       85 d5		      STA	RTSAVE+1
    120  e0c4
    121  e0c4		       18		      CLC
    122  e0c5		       69 01		      ADC	#1
    123  e0c7		       85 dd		      STA	SCORWAIT
    124  e0c9		       a9 3c		      LDA	#60
    125  e0cb		       85 f2		      STA	SCORTIME
    126  e0cd				   DEATHLP
    127  e0cd		       20 25 cb 	      JSR	SEEBNORM
    128  e0d0		       a5 a1		      LDA	RTLOCAL+1
    129  e0d2		       c5 dd		      CMP	SCORWAIT
    130  e0d4		       30 f7		      BMI	DEATHLP
    131  e0d6		       20 8c dc 	      JSR	TIGHT
    132  e0d9		       a5 a1		      LDA	RTLOCAL+1
    133  e0db		       18		      CLC
    134  e0dc		       69 01		      ADC	#1
    135  e0de		       85 dd		      STA	SCORWAIT
    136  e0e0				   DEATHEND
    137  e0e0		       c6 f2		      DEC	SCORTIME
    138  e0e2		       10 e9		      BPL	DEATHLP
    139  e0e4
    140  e0e4		       a5 d5		      LDA	RTSAVE+1
    141  e0e6		       85 a1		      STA	RTLOCAL+1
    142  e0e8		       a5 d4		      LDA	RTSAVE
    143  e0ea		       85 a0		      STA	RTLOCAL
    144  e0ec		       86 c0		      STX	TEMP16
    145  e0ee		       20 b2 d2 	      JSR	WRITEPAC
    146  e0f1		       a6 c0		      LDX	TEMP16
    147  e0f3		       60		      RTS
    148  e0f4
    149  e0f4		       05 04 03 02*INTRSECT   DC.B	$05,$04,$03,$02,$01,$00
    150  e0fa		       00 00 00 01 MONSCORH   DC.B	$00,$00,$00,$01
    151  e0fe		       20 40 80 60 MONSCORL   DC.B	$20,$40,$80,$60
    152  e102		       00 00 00 00*FRTSCORH   DC.B	$00,$00,$00,$00,$00,$01,$02,$05
    153  e10a		       05 10 20 50*FRTSCORL   DC.B	$05,$10,$20,$50,$70,$00,$00,$00
    154  e112							; END
------- FILE MDOIT.ASM
     58  e112					      align	2
------- FILE ANIMATE.ASM LEVEL 2 PASS 2
      0  e112					      include	"ANIMATE.ASM"
      1  e112					      processor	6502
      2  e112
      3  e112							;*  ANIMATE.S	    THE MS PAC MAN ANIMATIONS
      4  e112
      5  e112
      6  e112							;*  START THE ANIMATIONS
      7  e112		       8d 24 21    ANIMATE    STA	ANWHICH	;		  ;STORE WHICH ANIMATION
      8  e115		       20 8e ea 	      JSR	CLEARTUN
      9  e118		       20 d7 cc 	      JSR	CLRSCRN	;		  ;TURN OFF INDICATORS
     10  e11b							;   PFILL   SCREEN,#$00,#$04	    ;ERASE SCREEN
     11  e11b		       a9 00		      LDA	#$00
     12  e11d		       8d 00 18 	      STA	SCREEN
     13  e120		       a9 04		      LDA	#$04
     14  e122		       8d 00 18 	      STA	SCREEN, 1	;		 Nico's change to erase the screen
     15  e125
     16  e125							;*	    JSR     LOADDLST;		    ;RE-LOAD DISPLAY LIST
     17  e125
     18  e125		       a9 0c		      LDA	#WHITE	;		   ;SET UP COLOR FOR WORDS
     19  e127		       a0 18		      LDY	#$18
     20  e129		       99 83 00    ANLOOP0    STA	P0C3,Y
     21  e12c		       88		      DEY
     22  e12d		       88		      DEY
     23  e12e		       88		      DEY
     24  e12f		       88		      DEY
     25  e130		       10 f7		      BPL	ANLOOP0
     26  e132		       20 80 cd 	      JSR	BARSOFF	;		  ;GET BLACK BARS OFF THE SCREEN
     27  e135
     28  e135		       20 66 e1 	      JSR	ANITUNE	;		  ;START TUNE
     29  e138		       20 75 e1 	      JSR	ANIWORDS	;		 ;PUT UP ACT
     30  e13b
     31  e13b							;   PFILL   SCREEN,#$00,#$04	    ;ERASE SCREEN
     32  e13b		       a9 00		      LDA	#$00
     33  e13d		       8d 00 18 	      STA	SCREEN
     34  e140		       a9 04		      LDA	#$04
     35  e142		       8d 00 18 	      STA	SCREEN, 1	;		 Nico's change to erase the screen again
     36  e145
     37  e145		       ae 24 21 	      LDX	ANWHICH
     38  e148		       bd d3 e3 	      LDA	ANASTART,X	;	       ;GET OFFSET INTO ANIMATION DATA
     39  e14b		       8d 20 21 	      STA	ANAOFF
     40  e14e		       bd d6 e3 	      LDA	ANSSTART,X	;	       ;GET OFFSET INTO SEGMENT DATA
     41  e151		       8d 21 21 	      STA	ANSOFF
     42  e154		       bd d9 e3 	      LDA	ANFRAMES,X	;	       ;GET NUMBER OF FRAMES PER TIC
     43  e157		       8d 25 21 	      STA	ANFRM
     44  e15a		       20 16 e2 	      JSR	ANINEXT	;		  ;DO ANIMATION
     45  e15d
     46  e15d		       20 25 cb    ABOGLOOP   JSR	SEEBNORM
     47  e160		       ad 00 1d 	      LDA	TUNON	;		    ;MAKE SURE TUNE OVER
     48  e163		       d0 f8		      BNE	ABOGLOOP
     49  e165
     50  e165		       60		      RTS
     51  e166
     52  e166
     53  e166							;*  START THE ANIMATION TUNE
     54  e166		       ae 24 21    ANITUNE    LDX	ANWHICH
     55  e169		       bd 4f e3 	      LDA	TUNE1,X
     56  e16c		       20 43 ea 	      JSR	DOTUNE
     57  e16f		       bd 52 e3 	      LDA	TUNE2,X
     58  e172		       4c 43 ea 	      JMP	DOTUNE
     59  e175
     60  e175
     61  e175							;*  PUT THE INITIAL MESSAGE UP
     62  e175		       ad 24 21    ANIWORDS   LDA	ANWHICH
     63  e178		       18		      CLC
     64  e179		       69 1b		      ADC	#$1B
     65  e17b		       a8		      TAY
     66  e17c		       20 9e f8 	      JSR	WRTMESG	;		  ;WRITE THE ACT NUMBER
     67  e17f
     68  e17f		       ad 24 21 	      LDA	ANWHICH
     69  e182		       18		      CLC
     70  e183		       69 1e		      ADC	#$1E
     71  e185		       a8		      TAY
     72  e186		       20 9e f8 	      JSR	WRTMESG	;		  ;WRITE THE MESSAGE
     73  e189
     74  e189		       a2 02		      LDX	#$02	;		     ;SET UP BASE OF CLAPBOARD
     75  e18b		       bd 55 e3    AWLOOP2    LDA	ACTBASH,X
     76  e18e		       95 59		      STA	HPLIST+3,X
     77  e190		       bd 58 e3 	      LDA	ACTBASV,X
     78  e193		       20 e7 e9 	      JSR	VTOZO
     79  e196		       95 65		      STA	VOLIST+3,X
     80  e198		       98		      TYA
     81  e199		       95 5f		      STA	VZLIST+3,X
     82  e19b		       bd 61 e3 	      LDA	ACTBASSL,X
     83  e19e		       95 6b		      STA	SLLIST+3,X
     84  e1a0		       bd 6a e3 	      LDA	ACTBASSH,X
     85  e1a3		       95 71		      STA	SHLIST+3,X
     86  e1a5		       95 77		      STA	DOLIST+3,X
     87  e1a7		       ca		      DEX
     88  e1a8		       10 e1		      BPL	AWLOOP2
     89  e1aa
     90  e1aa		       20 d2 e1 	      JSR	AWUPSTMP	;		 ;WRITE UP CLAPBOARD
     91  e1ad		       a9 40		      LDA	#$40	;		     ;DO A LITTLE WAIT
     92  e1af		       20 c3 e1 	      JSR	AWWAIT
     93  e1b2
     94  e1b2		       20 f4 e1 	      JSR	AWDNSTMP	;		 ;WRITE DOWN CLAPBOARD
     95  e1b5		       a9 10		      LDA	#$10	;		     ;DO A LITTLE WAIT
     96  e1b7		       20 c3 e1 	      JSR	AWWAIT
     97  e1ba
     98  e1ba		       20 d2 e1 	      JSR	AWUPSTMP	;		 ;WRITE UP CLAPBOARD
     99  e1bd		       a9 30		      LDA	#$30	;		     ;DO A LITTLE WAIT
    100  e1bf		       20 c3 e1 	      JSR	AWWAIT
    101  e1c2
    102  e1c2		       60		      RTS
    103  e1c3
    104  e1c3							;*  WAIT A BIT - VALUE OF RTLOCAL+1 IN A
    105  e1c3		       18	   AWWAIT     CLC		;			      ;ADD IT TO PRESENT TIME
    106  e1c4		       65 a1		      ADC	RTLOCAL+1
    107  e1c6		       85 c0		      STA	TEMP16
    108  e1c8		       20 25 cb    AWWLOOP    JSR	SEEBNORM	;		 ;SEE IF ANYTHING TO DO
    109  e1cb		       a5 c0		      LDA	TEMP16	;		   ;SEE IF DONE YET
    110  e1cd		       c5 a1		      CMP	RTLOCAL+1
    111  e1cf		       10 f7		      BPL	AWWLOOP
    112  e1d1		       60		      RTS
    113  e1d2
    114  e1d2
    115  e1d2							;*  SET UP STAMPS FOR UP CLAPBOARD
    116  e1d2		       a2 02	   AWUPSTMP   LDX	#$02	;		     ;SET UP BASE OF CLAPBOARD
    117  e1d4		       bd 55 e3    AULOOP     LDA	ACTUPH,X
    118  e1d7		       95 56		      STA	HPLIST,X
    119  e1d9		       bd 5b e3 	      LDA	ACTUPV,X
    120  e1dc		       20 e7 e9 	      JSR	VTOZO
    121  e1df		       95 62		      STA	VOLIST,X
    122  e1e1		       98		      TYA
    123  e1e2		       95 5c		      STA	VZLIST,X
    124  e1e4		       bd 64 e3 	      LDA	ACTUPSL,X
    125  e1e7		       95 68		      STA	SLLIST,X
    126  e1e9		       bd 6d e3 	      LDA	ACTUPSH,X
    127  e1ec		       95 6e		      STA	SHLIST,X
    128  e1ee		       95 74		      STA	DOLIST,X
    129  e1f0		       ca		      DEX
    130  e1f1		       10 e1		      BPL	AULOOP
    131  e1f3		       60		      RTS
    132  e1f4
    133  e1f4
    134  e1f4							;*  SET UP STAMPS FOR DOWN CLAPBOARD
    135  e1f4		       a2 02	   AWDNSTMP   LDX	#$02	;		     ;SET UP BASE OF CLAPBOARD
    136  e1f6		       bd 55 e3    ADLOOP     LDA	ACTDNH,X
    137  e1f9		       95 56		      STA	HPLIST,X
    138  e1fb		       bd 5e e3 	      LDA	ACTDNV,X
    139  e1fe		       20 e7 e9 	      JSR	VTOZO
    140  e201		       95 62		      STA	VOLIST,X
    141  e203		       98		      TYA
    142  e204		       95 5c		      STA	VZLIST,X
    143  e206		       bd 67 e3 	      LDA	ACTDNSL,X
    144  e209		       95 68		      STA	SLLIST,X
    145  e20b		       bd 70 e3 	      LDA	ACTDNSH,X
    146  e20e		       95 6e		      STA	SHLIST,X
    147  e210		       95 74		      STA	DOLIST,X
    148  e212		       ca		      DEX
    149  e213		       10 e1		      BPL	ADLOOP
    150  e215		       60		      RTS
    151  e216
    152  e216
    153  e216							;* SET UP THE STATE FOR AN ANIMATION SEGMENT AND DO IT
    154  e216		       20 31 e3    ANINEXT    JSR	ANICLEAR	;		 ;CLEAR THE OLD ANIMATIONS
    155  e219		       ae 20 21 	      LDX	ANAOFF	;		   ;LOAD IN A SET OF ANIMATIONS
    156  e21c		       ee 20 21 	      INC	ANAOFF
    157  e21f		       bd f0 e3 	      LDA	ANCHARS,X	;		;NUMBER TO SET UP THIS TIME
    158  e222		       d0 01		      BNE	ANCONT
    159  e224		       60		      RTS		;			      ;ALL DONE
    160  e225
    161  e225		       85 b0	   ANCONT     STA	TEMP0
    162  e227		       bd dc e3 	      LDA	ANTICS,X	;		 ;SEE HOW MANY TICS TILL NEXT SEGMENT
    163  e22a		       8d 22 21 	      STA	ANCOUNT
    164  e22d		       a9 00		      LDA	#$00	;		     ;WILL USE ANSTATE FOR WHICH CHAR SLOT
    165  e22f		       8d 23 21 	      STA	ANSTATE
    166  e232
    167  e232		       ac 21 21    ANLOOP     LDY	ANSOFF	;		   ;Y IS OFFSET INTO SEGMENT DATA
    168  e235		       ae 23 21 	      LDX	ANSTATE	;		  ;X IS WHAT CHARACTER SLOT WE DEAL WITH
    169  e238		       a9 01		      LDA	#$01
    170  e23a		       9d 30 21 	      STA	A0ENABLE,X	;	       ;TURN THIS ONE ON
    171  e23d		       b9 04 e4 	      LDA	ANIHPOS,Y	;		;STORE THE STAMP INFO
    172  e240		       f0 02		      BEQ	ANLJMP0	;		  ;IF 0 - LEAVE CURRENT HPOS
    173  e242		       95 56		      STA	HPLIST,X
    174  e244		       b9 3e e4    ANLJMP0    LDA	ANIVPOS,Y
    175  e247		       f0 03		      BEQ	ANLJMP1	;		  ;IF 0 - LEAVE CURRENT VPOS
    176  e249		       9d 36 21 	      STA	A0VPOS,X	;		 ;STORE VPOS
    177  e24c		       b9 78 e4    ANLJMP1    LDA	ANICHAR,Y	;		;STORE STARTING CHARACTER
    178  e24f		       9d 3c 21 	      STA	A0CHAR,X
    179  e252		       b9 ec e4 	      LDA	ANIHPDIF,Y	;	       ;STORE WHERE DELTAS TO POSITION ARE
    180  e255		       9d 42 21 	      STA	A0HPDIF,X
    181  e258		       b9 26 e5 	      LDA	ANIVPDIF,Y
    182  e25b		       9d 48 21 	      STA	A0VPDIF,X
    183  e25e		       b9 60 e5 	      LDA	ANIANDIF,Y	;	       ;AND ANIMATION SEQUENCE
    184  e261		       9d 4e 21 	      STA	A0ANDIF,X
    185  e264		       b9 b2 e4 	      LDA	ANIPALET,Y	;	       ;SET COLORS
    186  e267		       a8		      TAY		;			      ;Y IS NOW OFFSET INTO PALETTE INFO
    187  e268		       8a		      TXA		;			      ;SET X TO 4;*CHAR NUMBER
    188  e269		       0a		      ASL		;			;  THUS, INDEX INTO PALETTES
    189  e26a		       0a		      ASL
    190  e26b		       aa		      TAX
    191  e26c		       b9 9a e5 	      LDA	ANPALET1,Y
    192  e26f		       95 85		      STA	P1C1,X
    193  e271		       b9 9e e5 	      LDA	ANPALET2,Y
    194  e274		       95 86		      STA	P1C2,X
    195  e276		       b9 a2 e5 	      LDA	ANPALET3,Y
    196  e279		       95 87		      STA	P1C3,X
    197  e27b
    198  e27b		       ee 23 21 	      INC	ANSTATE	;		  ;UPDATE STATE VARIABLES
    199  e27e		       ee 21 21 	      INC	ANSOFF
    200  e281		       c6 b0		      DEC	TEMP0
    201  e283		       d0 ad		      BNE	ANLOOP
    202  e285
    203  e285		       20 3c e3 	      JSR	CHRCLEAR	;		 ;CLEAR SCREEN
    204  e288		       a9 07		      LDA	#$07
    205  e28a		       8d 23 21 	      STA	ANSTATE	;		  ;THIS WILL NOW BE 7,6,5,4,3,2,1,0,7,...
    206  e28d
    207  e28d
    208  e28d							;* MAIN LOOP FOR THE CURRENT ANIMATION
    209  e28d		       20 a9 e2    ANIDOIT    JSR	ANIMOVE	;		  ;MOVE THEM ALL
    210  e290		       a5 a1		      LDA	RTLOCAL+1	;		;WAIT FOR A BIT
    211  e292		       18		      CLC
    212  e293		       6d 25 21 	      ADC	ANFRM
    213  e296		       85 c0		      STA	TEMP16
    214  e298		       20 25 cb    ADWLOOP    JSR	SEEBNORM	;		 ;SEE IF ANY BUTTONS HIT
    215  e29b		       a5 c0		      LDA	TEMP16	;		   ;SEE IF WAIT OVER YET
    216  e29d		       c5 a1		      CMP	RTLOCAL+1
    217  e29f		       d0 f7		      BNE	ADWLOOP
    218  e2a1
    219  e2a1		       ce 22 21 	      DEC	ANCOUNT
    220  e2a4		       d0 e7		      BNE	ANIDOIT
    221  e2a6		       4c 16 e2 	      JMP	ANINEXT	;		  ;TIME FOR NEXT READ
    222  e2a9
    223  e2a9
    224  e2a9							;*  MOVE THE ANIMATION CHARACTERS
    225  e2a9		       a2 05	   ANIMOVE    LDX	#$05	;		     ;MOVE THEM ALL
    226  e2ab		       bd 30 21    ANMLOOP    LDA	A0ENABLE,X
    227  e2ae		       f0 03		      BEQ	ANMNEXT
    228  e2b0		       20 f1 e2 	      JSR	ANIDISP	;		  ;SHOW THE ANIMATION
    229  e2b3		       ca	   ANMNEXT    DEX
    230  e2b4		       10 f5		      BPL	ANMLOOP
    231  e2b6
    232  e2b6		       a2 05		      LDX	#$05	;		     ;SET UP FOR WHICHEVER LOOP
    233  e2b8		       ce 23 21 	      DEC	ANSTATE	;		  ;NEXT STATE
    234  e2bb		       10 27		      BPL	ANMINC	;		   ;SEE IF WRAP
    235  e2bd
    236  e2bd		       ad 23 21 	      LDA	ANSTATE	;		  ;WRAP - GET ANSTATE BACK AGAIN
    237  e2c0		       29 07		      AND	#$07
    238  e2c2		       8d 23 21 	      STA	ANSTATE
    239  e2c5		       bd 42 21    ANMWLOOP   LDA	A0HPDIF,X	;		;AND WRAP THE OFFSETS BACK AGAIN
    240  e2c8		       38		      SEC
    241  e2c9		       e9 07		      SBC	#$07
    242  e2cb		       9d 42 21 	      STA	A0HPDIF,X
    243  e2ce		       bd 48 21 	      LDA	A0VPDIF,X
    244  e2d1		       38		      SEC
    245  e2d2		       e9 07		      SBC	#$07
    246  e2d4		       9d 48 21 	      STA	A0VPDIF,X
    247  e2d7		       bd 4e 21 	      LDA	A0ANDIF,X
    248  e2da		       38		      SEC
    249  e2db		       e9 07		      SBC	#$07
    250  e2dd		       9d 4e 21 	      STA	A0ANDIF,X
    251  e2e0		       ca		      DEX
    252  e2e1		       10 e2		      BPL	ANMWLOOP
    253  e2e3		       60		      RTS
    254  e2e4
    255  e2e4		       fe 42 21    ANMINC     INC	A0HPDIF,X	;		;INCREMENT OUR OFFSETS
    256  e2e7		       fe 48 21 	      INC	A0VPDIF,X
    257  e2ea		       fe 4e 21 	      INC	A0ANDIF,X
    258  e2ed		       ca		      DEX
    259  e2ee		       10 f4		      BPL	ANMINC
    260  e2f0		       60		      RTS
    261  e2f1
    262  e2f1
    263  e2f1							;*  THIS ROUTINE MOVES A SINGLE ANIMATION FIGURE.  THE CHARACTER IS IN X, THIS
    264  e2f1							;*  MUST BE PRESERVED
    265  e2f1		       b5 56	   ANIDISP    LDA	HPLIST,X	;		 ;MODIFY HPOS
    266  e2f3		       bc 42 21 	      LDY	A0HPDIF,X	;		;INDEX FOR MODIFICATION
    267  e2f6		       18		      CLC
    268  e2f7		       79 a6 e5 	      ADC	ANHPMOVE,Y	;	       ;MODIFICATION
    269  e2fa		       95 56		      STA	HPLIST,X
    270  e2fc
    271  e2fc		       bd 36 21 	      LDA	A0VPOS,X	;		 ;MODIFY VPOS
    272  e2ff		       bc 48 21 	      LDY	A0VPDIF,X	;		;INDEX FOR MODIFICATION
    273  e302		       18		      CLC
    274  e303		       79 fe e5 	      ADC	ANVPMOVE,Y	;	       ;MODIFICATION
    275  e306		       9d 36 21 	      STA	A0VPOS,X
    276  e309		       20 e7 e9 	      JSR	VTOZO	;		    ;CONVERT IT TO ZONE AND COLUMN
    277  e30c		       95 62		      STA	VOLIST,X
    278  e30e		       98		      TYA
    279  e30f		       95 5c		      STA	VZLIST,X
    280  e311
    281  e311		       bd 3c 21 	      LDA	A0CHAR,X	;		 ;MODIFY CHAR
    282  e314		       bc 4e 21 	      LDY	A0ANDIF,X	;		;INDEX FOR MODIFICATION
    283  e317		       18		      CLC
    284  e318		       79 26 e6 	      ADC	ANANMOVE,Y	;	       ;MODIFICATION
    285  e31b		       9d 3c 21 	      STA	A0CHAR,X
    286  e31e
    287  e31e		       a8		      TAY		;			      ;GET THE NEW STAMP
    288  e31f		       a9 18		      LDA	#<MSCHAR	;	       ;OFFSET FROM THE BASE OF MSCHAR
    289  e321		       18		      CLC
    290  e322		       79 73 e3 	      ADC	CHAROFFL,Y
    291  e325		       95 68		      STA	SLLIST,X
    292  e327		       a9 c3		      LDA	#>MSCHAR
    293  e329		       79 a3 e3 	      ADC	CHAROFFH,Y
    294  e32c		       95 6e		      STA	SHLIST,X
    295  e32e		       95 74		      STA	DOLIST,X	;		 ;AND TELL LOADER TO DISPLAY IT
    296  e330		       60		      RTS
    297  e331
    298  e331
    299  e331							;*  CLEAR OUT THE ANIMATION THINGS
    300  e331		       a0 05	   ANICLEAR   LDY	#$05
    301  e333		       a9 00		      LDA	#$00
    302  e335		       99 30 21    ACLOOP     STA	A0ENABLE,Y
    303  e338		       88		      DEY
    304  e339		       10 fa		      BPL	ACLOOP
    305  e33b		       60		      RTS
    306  e33c
    307  e33c
    308  e33c							;*  CLEAR OUT THE CHARACTER THINGS
    309  e33c		       a0 05	   CHRCLEAR   LDY	#$05
    310  e33e		       a9 b0		      LDA	#OFFSCRN
    311  e340		       be 30 21    CCLOOP     LDX	A0ENABLE,Y
    312  e343		       d0 06		      BNE	CCNEXT
    313  e345		       99 56 00 	      STA	HPLIST,Y
    314  e348		       99 74 00 	      STA	DOLIST,Y
    315  e34b		       88	   CCNEXT     DEY
    316  e34c		       10 f2		      BPL	CCLOOP
    317  e34e		       60		      RTS
    318  e34f
    319  e34f
    320  e34f							;*  TUNES FOR THE ANIMATIONS
    321  e34f		       02 04 08    TUNE1      DC.B	2,4,8
    322  e352		       03 06 09    TUNE2      DC.B	3,6,9
    323  e355
    324  e355							;*  TABLES FOR POSITIONS OF CLAPBOARD STAMPS
    325  e355				   ACTBASH		;				 ;HORIZONTAL POSITIONS
    326  e355				   ACTUPH
    327  e355		       26 2e 36    ACTDNH     DC.B	$0E+LEFTSIDE,$16+LEFTSIDE,$1E+LEFTSIDE
    328  e358		       55 55 55    ACTBASV    DC.B	$55,$55,$55	;	      ;VERTICAL POSITONS
    329  e35b		       4a 42 3a    ACTUPV     DC.B	$4A,$42,$3A
    330  e35e		       51 51 51    ACTDNV     DC.B	$51,$51,$51
    331  e361		       48 60 78    ACTBASSL   DC.B	<CLAPBRD,<CLAPBRD+24,<CLAPBRD+48	;STAMP LOW BYTE
ANIMATE.ASM (332): error: Value in 'byte dc 264' must be <$100.
    332  e364		       d8 f0 08    ACTUPSL    DC.B	<CLAPBRDU,<CLAPBRDU+24,<CLAPBRDU+48
    333  e367		       90 a8 c0    ACTDNSL    DC.B	<CLAPBRDD,<CLAPBRDD+24,<CLAPBRDD+48
    334  e36a		       c9 e1 f9    ACTBASSH   DC.B	>CLAPBRD,>CLAPBRD+24,>CLAPBRD+48	;STAMP HI BYTE
    335  e36d		       c9 e1 f9    ACTUPSH    DC.B	>CLAPBRDU,>CLAPBRDU+24,>CLAPBRDU+48
    336  e370		       c9 e1 f9    ACTDNSH    DC.B	>CLAPBRDD,>CLAPBRDD+24,>CLAPBRDD+48
    337  e373
    338  e373
    339  e373							;*  OFFSET TABLES FROM CHARACTER INDEX TO OFFSET
    340  e373		       00 18 30 48*CHAROFFL   DC.B	$00,$18,$30,$48,$60,$78,$90,$A8
    341  e37b		       c0 d8 f0 08*	      DC.B	$C0,$D8,$F0,$08,$20,$38,$50,$68
    342  e383		       80 98 b0 c8*	      DC.B	$80,$98,$B0,$C8,$E0,$F8,$10,$28
    343  e38b		       40 58 70 88*	      DC.B	$40,$58,$70,$88,$A0,$B8,$D0,$E8
    344  e393		       00 18 30 48*	      DC.B	$00,$18,$30,$48,$60,$78,$90,$A8
    345  e39b		       c0 d8 f0 08*	      DC.B	$C0,$D8,$F0,$08,$20,$38,$50,$68
    346  e3a3		       00 00 00 00*CHAROFFH   DC.B	$00,$00,$00,$00,$00,$00,$00,$00
    347  e3ab		       00 00 00 01*	      DC.B	$00,$00,$00,$01,$01,$01,$01,$01
    348  e3b3		       01 01 01 01*	      DC.B	$01,$01,$01,$01,$01,$01,$02,$02
    349  e3bb		       02 02 02 02*	      DC.B	$02,$02,$02,$02,$02,$02,$02,$02
    350  e3c3		       03 03 03 03*	      DC.B	$03,$03,$03,$03,$03,$03,$03,$03
    351  e3cb		       03 03 03 04*	      DC.B	$03,$03,$03,$04,$04,$04,$04,$04
    352  e3d3
    353  e3d3
    354  e3d3							;*  GLOBAL INFORMATION FOR ANIMATIONS
    355  e3d3		       00 07 0f    ANASTART   DC.B	$00,$07,$0F	;	      ;OFFSET INTO ANIMATION INFORMATION
    356  e3d6		       00 16 22    ANSSTART   DC.B	$00,$16,$22	;	      ;OFFSET INTO ANIMATION SEGMENT INFO
    357  e3d9		       01 01 02    ANFRAMES   DC.B	$01,$01,$02	;	      ;FRAMES PER TIC
    358  e3dc
    359  e3dc
    360  e3dc							;*  INFORMATION ABOUT EACH ANIMATION
    361  e3dc		       db 4d 0e 18*ANTICS     DC.B	$DB,$4D,$0E,$18,$0C,$1D,$00	;TICS PER ANIMATION SEGMENT
    362  e3e3		       22 d6 be be*	      DC.B	$22,$D6,$BE,$BE,$32,$38,$60,$00
    363  e3eb		       30 20 10 30*	      DC.B	$30,$20,$10,$30,$00
    364  e3f0		       04 04 04 04*ANCHARS    DC.B	4,4,4,4,3,3,0	;		    ;CHARACTERS PER ANIMATION
    365  e3f7		       01 02 02 02*	      DC.B	1,2,2,2,2,2,1,0
    366  e3ff		       06 06 06 06*	      DC.B	6,6,6,6,0
    367  e404
    368  e404
    369  e404							;*  INFORMATION ABOUT EACH ANIMATION SEGMENT
    370  e404		       ff 90 e0 b0 ANIHPOS    DC.B	$FF,$90,$E0,$B0	;		  ;STARTING HPOS
    371  e408		       91 fe a5 ea	      DC.B	$91,$FE,$A5,$EA
    372  e40c		       00 00 00 00	      DC.B	$00,$00,$00,$00
    373  e410		       00 00 00 00	      DC.B	$00,$00,$00,$00
    374  e414		       00 00 48 	      DC.B	$00,$00,$48
    375  e417		       00 00 00 	      DC.B	$00,$00,$00
    376  e41a
    377  e41a		       f0		      DC.B	$F0
    378  e41b		       e0 ff		      DC.B	$E0,$FF
    379  e41d		       90 b0		      DC.B	$90,$B0
    380  e41f		       e0 ff		      DC.B	$E0,$FF
    381  e421		       90 b0		      DC.B	$90,$B0
    382  e423		       e0 ff		      DC.B	$E0,$FF
    383  e425		       f0		      DC.B	$F0
    384  e426
    385  e426		       10 20 8e 90*	      DC.B	$10,$20,$8E,$90,$98,$A0
    386  e42c		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00
    387  e432		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00
    388  e438		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00
    389  e43e
    390  e43e
    391  e43e		       60 a0 60 a0 ANIVPOS    DC.B	$60,$A0,$60,$A0	;		  ;STARTING VPOS
    392  e442		       80 80 80 80	      DC.B	$80,$80,$80,$80
    393  e446		       00 00 00 00	      DC.B	$00,$00,$00,$00
    394  e44a		       00 00 00 00	      DC.B	$00,$00,$00,$00
    395  e44e		       00 00 28 	      DC.B	$00,$00,$28
    396  e451		       00 00 00 	      DC.B	$00,$00,$00
    397  e454
    398  e454		       00		      DC.B	$00
    399  e455		       40 40		      DC.B	$40,$40
    400  e457		       80 80		      DC.B	$80,$80
    401  e459		       60 60		      DC.B	$60,$60
    402  e45b		       40 40		      DC.B	$40,$40
    403  e45d		       80 80		      DC.B	$80,$80
    404  e45f		       00		      DC.B	$00
    405  e460
    406  e460		       80 80 40 3e*	      DC.B	$80,$80,$40,$3E,$3E,$3E
    407  e466		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00
    408  e46c		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00
    409  e472		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00
    410  e478
    411  e478
    412  e478		       00 12 18 1c ANICHAR    DC.B	$00,$12,$18,$1C	;		  ;STARTING CHARACTER
    413  e47c		       06 0c 1c 18	      DC.B	$06,$0C,$1C,$18
    414  e480		       09 15 1c 18	      DC.B	$09,$15,$1C,$18
    415  e484		       09 15 18 1c	      DC.B	$09,$15,$18,$1C
    416  e488		       06 0c 26 	      DC.B	$06,$0C,$26
    417  e48b		       08 0e 26 	      DC.B	$08,$0E,$26
    418  e48e
    419  e48e		       00		      DC.B	$00
    420  e48f		       00 0c		      DC.B	$00,$0C
    421  e491		       06 12		      DC.B	$06,$12
    422  e493		       00 0c		      DC.B	$00,$0C
    423  e495		       06 12		      DC.B	$06,$12
    424  e497		       00 0c		      DC.B	$00,$0C
    425  e499		       00		      DC.B	$00
    426  e49a
    427  e49a		       02 0e 27 29*	      DC.B	$02,$0E,$27,$29,$2A,$2C
    428  e4a0		       02 0e 27 29*	      DC.B	$02,$0E,$27,$29,$2A,$2C
    429  e4a6		       02 0e 27 29*	      DC.B	$02,$0E,$27,$29,$2A,$2C
    430  e4ac		       02 0e 28 29*	      DC.B	$02,$0E,$28,$29,$2A,$2C
    431  e4b2
    432  e4b2		       00 00 01 02 ANIPALET   DC.B	$00,$00,$01,$02	;		  ;PALETTE
    433  e4b6		       00 00 01 02	      DC.B	$00,$00,$01,$02
    434  e4ba		       00 00 01 02	      DC.B	$00,$00,$01,$02
    435  e4be		       00 00 01 02	      DC.B	$00,$00,$01,$02
    436  e4c2		       00 00 00 	      DC.B	$00,$00,$00
    437  e4c5		       00 00 00 	      DC.B	$00,$00,$00
    438  e4c8
    439  e4c8		       00		      DC.B	$00
    440  e4c9		       00 00		      DC.B	$00,$00
    441  e4cb		       00 00		      DC.B	$00,$00
    442  e4cd		       00 00		      DC.B	$00,$00
    443  e4cf		       00 00		      DC.B	$00,$00
    444  e4d1		       00 00		      DC.B	$00,$00
    445  e4d3		       00		      DC.B	$00
    446  e4d4
    447  e4d4		       00 00 03 03*	      DC.B	$00,$00,$03,$03,$03,$03
    448  e4da		       00 00 03 03*	      DC.B	$00,$00,$03,$03,$03,$03
    449  e4e0		       00 00 03 03*	      DC.B	$00,$00,$03,$03,$03,$03
    450  e4e6		       00 00 00 03*	      DC.B	$00,$00,$00,$03,$03,$03
    451  e4ec
    452  e4ec		       10 28 18 30 ANIHPDIF   DC.B	$10,$28,$18,$30	;		  ;CHANGES TO HPOS
    453  e4f0		       28 10 30 18	      DC.B	$28,$10,$30,$18
    454  e4f4		       00 00 30 18	      DC.B	$00,$00,$30,$18
    455  e4f8		       00 00 08 20	      DC.B	$00,$00,$08,$20
    456  e4fc		       00 00 00 	      DC.B	$00,$00,$00
    457  e4ff		       00 00 00 	      DC.B	$00,$00,$00
    458  e502
    459  e502		       00		      DC.B	$00
    460  e503		       18 10		      DC.B	$18,$10
    461  e505		       28 30		      DC.B	$28,$30
    462  e507		       18 10		      DC.B	$18,$10
    463  e509		       48 50		      DC.B	$48,$50
    464  e50b		       40 38		      DC.B	$40,$38
    465  e50d		       00		      DC.B	$00
    466  e50e
    467  e50e		       00 00 30 30*	      DC.B	$00,$00,$30,$30,$30,$30
    468  e514		       00 00 30 30*	      DC.B	$00,$00,$30,$30,$30,$30
    469  e51a		       00 00 20 30*	      DC.B	$00,$00,$20,$30,$30,$30
    470  e520		       00 00 00 30*	      DC.B	$00,$00,$00,$30,$30,$30
    471  e526
    472  e526		       00 00 00 00 ANIVPDIF   DC.B	$00,$00,$00,$00	;		  ;CHANGES TO VPOS
    473  e52a		       00 00 00 00	      DC.B	$00,$00,$00,$00
    474  e52e		       08 08 00 00	      DC.B	$08,$08,$00,$00
    475  e532		       08 08 10 10	      DC.B	$08,$08,$10,$10
    476  e536		       00 00 00 	      DC.B	$00,$00,$00
    477  e539		       00 00 00 	      DC.B	$00,$00,$00
    478  e53c
    479  e53c		       00		      DC.B	$00
    480  e53d		       00 00		      DC.B	$00,$00
    481  e53f		       00 00		      DC.B	$00,$00
    482  e541		       00 00		      DC.B	$00,$00
    483  e543		       00 00		      DC.B	$00,$00
    484  e545		       00 00		      DC.B	$00,$00
    485  e547		       00		      DC.B	$00
    486  e548
    487  e548		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$20,$20
    488  e54e		       00 00 18 00*	      DC.B	$00,$00,$18,$00,$20,$20
    489  e554		       00 00 10 00*	      DC.B	$00,$00,$10,$00,$20,$20
    490  e55a		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$20,$20
    491  e560
    492  e560		       08 08 10 10 ANIANDIF   DC.B	$08,$08,$10,$10	;		  ;CHANGES TO ANIMATION CHARS
    493  e564		       08 08 10 10	      DC.B	$08,$08,$10,$10
    494  e568		       08 08 10 10	      DC.B	$08,$08,$10,$10
    495  e56c		       08 08 10 10	      DC.B	$08,$08,$10,$10
    496  e570		       08 08 00 	      DC.B	$08,$08,$00
    497  e573		       00 00 00 	      DC.B	$00,$00,$00
    498  e576
    499  e576		       00		      DC.B	$00
    500  e577		       08 08		      DC.B	$08,$08
    501  e579		       08 08		      DC.B	$08,$08
    502  e57b		       08 08		      DC.B	$08,$08
    503  e57d		       08 08		      DC.B	$08,$08
    504  e57f		       08 08		      DC.B	$08,$08
    505  e581		       00		      DC.B	$00
    506  e582
    507  e582		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$18,$18
    508  e588		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$18,$18
    509  e58e		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$18,$18
    510  e594		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$18,$18
    511  e59a
    512  e59a
    513  e59a							;*  PALETTE TABLES
    514  e59a		       1e 32 ae 1e ANPALET1   DC.B	YELLOW,RED,LTBLUE,YELLOW	;PALETTES FOR STAMPS
    515  e59e		       57 0c 0c 98 ANPALET2   DC.B	PINK,WHITE,WHITE,BLUE
    516  e5a2		       00 98 98 0c ANPALET3   DC.B	BLACK,BLUE,BLUE,WHITE
    517  e5a6
    518  e5a6
    519  e5a6							;*  HPOS MOVEMENT TABLES
    520  e5a6		       00 00 00 00*ANHPMOVE   DC.B	0,0,0,0,0,0,0,0	;		  ;0 POSSIBLE MOVEMENTS FOR CHARS
    521  e5ae		       01 00 01 00*	      DC.B	1,0,1,0,1,0,1,0	;		  ;8
    522  e5b6		       01 01 01 01*	      DC.B	1,1,1,1,1,1,1,0	;		  ;10
    523  e5be		       01 01 01 01*	      DC.B	1,1,1,1,1,1,1,1	;		  ;18
    524  e5c6		       ff 00 ff 00*	      DC.B	-1,0,-1,0,-1,0,-1,0	;	      ;20
    525  e5ce		       ff ff ff ff*	      DC.B	-1,-1,-1,-1,-1,-1,-1,0	;28
    526  e5d6		       ff ff ff ff*	      DC.B	-1,-1,-1,-1,-1,-1,-1,-1	;30
    527  e5de		       03 03 02 03*	      DC.B	3,3,2,3,3,2,3,2	;		  ;38
    528  e5e6		       03 03 03 03*	      DC.B	3,3,3,3,3,3,3,3	;		  ;40
    529  e5ee		       fd fd fe fd*	      DC.B	-3,-3,-2,-3,-3,-2,-3,-2	;48
    530  e5f6		       fd fd fd fd*	      DC.B	-3,-3,-3,-3,-3,-3,-3,-3	;50
    531  e5fe
    532  e5fe
    533  e5fe							;*  VPOS MOVEMENT TABLES
    534  e5fe		       00 00 00 00*ANVPMOVE   DC.B	0,0,0,0,0,0,0,0	;		  ;0 POSSIBLE MOVEMENTS FOR CHARS
    535  e606		       fe fe fe fe*	      DC.B	-2,-2,-2,-2,-2,-2,-2,-2	;8
    536  e60e		       ff ff 00 00*	      DC.B	-1,-1,0,0,1,1,0,0	;		;10
    537  e616		       02 02 02 02*	      DC.B	2,2,2,2,2,2,2,2	;		  ;18
    538  e61e		       00 00 fe 00*	      DC.B	0,0,-2,0,0,0,2,0	;		 ;20
    539  e626
    540  e626
    541  e626							;*  ANIMATION TABLES
    542  e626		       00 00 00 00*ANANMOVE   DC.B	0,0,0,0,0,0,0,0	;		  ;0 MOVEMENTS FOR ANIMATIONS
    543  e62e		       00 01 00 01*	      DC.B	0,1,0,1,0,-1,0,-1	;		;8
    544  e636		       00 01 00 ff*	      DC.B	0,1,0,-1,0,1,0,-1	;		;10
    545  e63e		       00 00 01 00*	      DC.B	0,0,1,0,0,0,-1,0	;		 ;18
    546  e646
    547  e646
    548  e646							; END
------- FILE MDOIT.ASM
     60  e646					      align	2
------- FILE TITLE.ASM LEVEL 2 PASS 2
      0  e646					      include	"TITLE.ASM"
      1  e646					      processor	6502
      2  e646
      3  e646							;*  TITLE.S	    ROUTINES TO CONTROL THE TITLE PAGE
      4  e646
      5  e646							;*  THIS IS THE ENTRY ROUTINE.  IT DOES ALL THE WORK.
      6  e646		       20 5f e6    DOTITLE    JSR	TITLESET	;		 ;DO BASIC SETUP
      7  e649		       20 73 e6 	      JSR	INITSTMP	;		 ;INITIALIZE THE STAMPS
      8  e64c
      9  e64c		       a2 00		      LDX	#$00
     10  e64e		       20 2a e7    DTLOOP     JSR	WRTNAME	;		  ;WRITE THE MONSTER"S NAME
     11  e651		       20 3e e7 	      JSR	TMOVEMON	;		 ;MOVE THE MONSTER
     12  e654		       e8		      INX		;			      ;GET THE NEXT ONE
     13  e655		       e0 04		      CPX	#$04
     14  e657		       30 f5		      BMI	DTLOOP
     15  e659
     16  e659		       20 34 e7 	      JSR	WRTPNAME	;		 ;WRITE MS PAC-MAN"S NAME
     17  e65c		       4c 65 e7 	      JMP	TMOVEPAC	;		 ;MOVE HER
     18  e65f
     19  e65f
     20  e65f							;*  THIS ROUTINE DOES BASIC SET UP FOR TITLE PAGE AND MENU
     21  e65f		       20 b7 cd    TITLESET   JSR	ZERORAM	;		  ;GET RID OF THE MAZE (IF ANY)
     22  e662		       20 8e ea 	      JSR	CLEARTUN
     23  e665		       20 5b cd 	      JSR	LOADDLST	;		 ;RELOAD DISPLAY LISTS
     24  e668		       20 b6 cc 	      JSR	SCREENON	;		 ;DISPLAY BACK ON
     25  e66b		       20 ad e6 	      JSR	INITSCRN	;		 ;INITIALIZE THE SCREEN
     26  e66e		       a9 00		      LDA	#$00	;		     ;LOOK AT PLAYER 1 JOYSTICK
     27  e670		       85 45		      STA	PLAYER
     28  e672		       60		      RTS
     29  e673
     30  e673
     31  e673							;*  INITIALIZE THE STAMPS - SET COLORS AND PUT OFF SCREEN
     32  e673		       a2 03	   INITSTMP   LDX	#$03	;		     ;SET THE MONSTERS TO THE SAME PLACE
     33  e675		       a9 8b	   ISLOOP     LDA	#RGHTWRAP
     34  e677		       9d 24 21 	      STA	M0HPOS,X
     35  e67a		       8d 01 21 	      STA	PHPOS
     36  e67d		       a9 8c		      LDA	#$8C
     37  e67f		       9d 20 21 	      STA	M0VPOS,X
     38  e682		       8d 00 21 	      STA	PVPOS
     39  e685		       a9 00		      LDA	#$00	;		     ;AND MAKE SURE THEY AREN"T BLUE OR EYES
     40  e687		       9d 40 21 	      STA	M0BLUE,X
     41  e68a		       9d 34 21 	      STA	M0DISP,X	;		 ;INITIALIZE DISP STATE
     42  e68d		       a9 02		      LDA	#DLEFT
     43  e68f		       9d 30 21 	      STA	M0DIR,X	;		  ;FACING LEFT
     44  e692		       8d 04 21 	      STA	PDIR
     45  e695		       20 b0 d9 	      JSR	DISPMON	;		  ;PUT IT ON SCREEN UNDER BAR
     46  e698		       20 15 da 	      JSR	MONSTAMP	;		 ;SET MONSTER COLORS
     47  e69b		       ca		      DEX
     48  e69c		       10 d7		      BPL	ISLOOP
     49  e69e
     50  e69e		       a9 01		      LDA	#$01	;		     ;INITIALIZE DISP STATE
     51  e6a0		       8d 05 21 	      STA	PDISP
     52  e6a3		       20 5c d1 	      JSR	PACVTOZO	;		 ;ADJUST ZONE AND COLUMN
     53  e6a6		       20 b2 d2 	      JSR	WRITEPAC	;		 ;PUT IT ON SCREEN UNDER BAR
     54  e6a9		       20 a5 d2 	      JSR	PACSTAMP	;		 ;SET MS PAC COLORS
     55  e6ac
     56  e6ac		       60		      RTS
     57  e6ad
     58  e6ad
     59  e6ad							;*  INITIALIZE THE SCREEN FOR THE TITLE PAGE
     60  e6ad		       a9 0c	   INITSCRN   LDA	#WHITE	;		   ;FIRST - SET COLORS
     61  e6af		       85 83		      STA	P0C3
     62  e6b1		       a9 1e		      LDA	#YELLOW
     63  e6b3		       85 82		      STA	P0C2
     64  e6b5		       a9 57		      LDA	#PINK
     65  e6b7		       85 81		      STA	P0C1
     66  e6b9		       85 9e		      STA	P7C2	;		     ;SET COLOR FOR SECOND PLAYER
     67  e6bb
     68  e6bb		       20 1f e7 	      JSR	TITLEIND	;		 ;SET UP INDICATORS FOR TITLE PAGE
     69  e6be
     70  e6be		       a0 08		      LDY	#$08	;		     ;NOW, WRITE THE MS PAC-MAN LOGO
     71  e6c0		       20 9e f8 	      JSR	WRTMESG
     72  e6c3		       a0 09		      LDY	#$09
     73  e6c5		       20 9e f8 	      JSR	WRTMESG
     74  e6c8		       a0 0a		      LDY	#$0A
     75  e6ca		       20 9e f8 	      JSR	WRTMESG
     76  e6cd		       a0 0b		      LDY	#$0B
     77  e6cf		       20 9e f8 	      JSR	WRTMESG
     78  e6d2		       a0 0c		      LDY	#$0C
     79  e6d4		       20 9e f8 	      JSR	WRTMESG
     80  e6d7		       a0 05		      LDY	#$05	;		     ;WRITE THE "COPYRIGHT ATARI 1983"
     81  e6d9		       20 9e f8 	      JSR	WRTMESG
     82  e6dc
     83  e6dc		       a9 09		      LDA	#$09	;		     ;SET UP STATE FOR PUTTING MARQUIS DOTS
     84  e6de		       85 b0		      STA	TEMP0
     85  e6e0		       a9 06		      LDA	#$06
     86  e6e2		       85 b1		      STA	TEMP1
     87  e6e4		       a2 7b		      LDX	#MARQCHAR
     88  e6e6
     89  e6e6		       20 f7 f5    ISCLOOP0   JSR	PLOPCHAR	;		 ;MOVE DOWN
     90  e6e9		       20 c9 e7 	      JSR	NEXTMARQ
     91  e6ec		       e6 b0		      INC	TEMP0
     92  e6ee		       a5 b0		      LDA	TEMP0
     93  e6f0		       c9 12		      CMP	#$12
     94  e6f2		       d0 f2		      BNE	ISCLOOP0
     95  e6f4
     96  e6f4		       20 f7 f5    ISCLOOP1   JSR	PLOPCHAR	;		 ;MOVE RIGHT
     97  e6f7		       20 c9 e7 	      JSR	NEXTMARQ
     98  e6fa		       e6 b1		      INC	TEMP1
     99  e6fc		       a5 b1		      LDA	TEMP1
    100  e6fe		       c9 15		      CMP	#$15
    101  e700		       d0 f2		      BNE	ISCLOOP1
    102  e702
    103  e702		       20 f7 f5    ISCLOOP2   JSR	PLOPCHAR	;		 ;MOVE UP
    104  e705		       20 c9 e7 	      JSR	NEXTMARQ
    105  e708		       c6 b0		      DEC	TEMP0
    106  e70a		       a5 b0		      LDA	TEMP0
    107  e70c		       c9 09		      CMP	#$09
    108  e70e		       d0 f2		      BNE	ISCLOOP2
    109  e710
    110  e710		       20 f7 f5    ISCLOOP3   JSR	PLOPCHAR	;		 ;MOVE LEFT
    111  e713		       20 c9 e7 	      JSR	NEXTMARQ
    112  e716		       c6 b1		      DEC	TEMP1
    113  e718		       a5 b1		      LDA	TEMP1
    114  e71a		       c9 06		      CMP	#$06
    115  e71c		       d0 f2		      BNE	ISCLOOP3
    116  e71e
    117  e71e		       60		      RTS
    118  e71f
    119  e71f
    120  e71f							;*  THIS ROUTINE PUTS UP THE FRUIT INDICATOR AND SCORE FOR TITLE PAGE
    121  e71f		       a5 40	   TITLEIND   LDA	STLEVEL	;		  ;GET READY FOR WRITING INDICATORS
    122  e721		       85 a6		      STA	LEVEL
    123  e723		       a9 00		      LDA	#$00
    124  e725		       85 a4		      STA	LIVES
    125  e727		       4c f6 cc 	      JMP	WRTINDS	;		  ;WRITE INDICATORS
    126  e72a
    127  e72a
    128  e72a							;*  WRITE THE NAME OF A MONSTER UP
    129  e72a		       8a	   WRTNAME    TXA		;			      ;NOW, WRITE MONSTERS NAME
    130  e72b		       a8		      TAY
    131  e72c		       20 9e f8 	      JSR	WRTMESG
    132  e72f		       a0 06		      LDY	#$06	;		     ;WRITE THE "WITH"
    133  e731		       4c 9e f8 	      JMP	WRTMESG
    134  e734
    135  e734
    136  e734							;*  WRITE MS PAC"S NAME UP
    137  e734		       a0 07	   WRTPNAME   LDY	#$07	;		     ;FIRST - WRITE "STARRING"
    138  e736		       20 9e f8 	      JSR	WRTMESG
    139  e739		       a0 04		      LDY	#$04	;		     ;NOW, WRITE "MS PAC-MAN"
    140  e73b		       4c 9e f8 	      JMP	WRTMESG
    141  e73e
    142  e73e
    143  e73e							;*  THIS ROUTINE MOVES A MONSTER.
    144  e73e							;*  INPUT: X = MONSTER
    145  e73e		       20 38 d9    TMOVEMON   JSR	ADJSTMON	;		 ;ADJUST THE MONSTER POSITION
    146  e741		       20 5f e7 	      JSR	TWRTMON	;		  ;WRITE IT
    147  e744		       bd 24 21 	      LDA	M0HPOS,X	;		 ;SEE IF LEFT YET
    148  e747		       c9 23		      CMP	#LEFTEDGE+8
    149  e749		       b0 f3		      BCS	TMOVEMON
    150  e74b
    151  e74b		       a9 03		      LDA	#DUP	;		     ;MAKE IT LOOK UP
    152  e74d		       9d 30 21 	      STA	M0DIR,X
    153  e750
    154  e750		       20 38 d9    TMLOOP     JSR	ADJSTMON
    155  e753		       20 5f e7 	      JSR	TWRTMON	;		  ;WRITE IT
    156  e756		       bd 28 21 	      LDA	M0ZONE,X	;		 ;SEE IF IN PLACE YET
    157  e759		       dd b7 e8 	      CMP	TENDZONE,X
    158  e75c		       10 f2		      BPL	TMLOOP
    159  e75e
    160  e75e		       60		      RTS
    161  e75f
    162  e75f							;*  THIS ROUTINE WRITES THE MONSTER AND FLIPS IT"S STATE
    163  e75f		       20 b0 d9    TWRTMON    JSR	DISPMON	;		  ;WRITE IT
    164  e762		       4c 8a e7 	      JMP	TWAIT	;		    ;WAIT A BIT
    165  e765
    166  e765
    167  e765							;*  THIS ROUTINE MOVES MS PAC ALONG THE BOTTOM
    168  e765		       ad 01 21    TMOVEPAC   LDA	PHPOS	;		    ;ADJUST HPOS
    169  e768		       ac 04 21 	      LDY	PDIR
    170  e76b		       20 a6 e9 	      JSR	HPOSADJ
    171  e76e		       8d 01 21 	      STA	PHPOS
    172  e771		       20 cb d1 	      JSR	PACCHOMP	;		 ;SWITCH DISPLAY STATE
    173  e774		       20 b2 d2 	      JSR	WRITEPAC	;		 ;WRITE IT
    174  e777		       20 8a e7 	      JSR	TWAIT	;		    ;WAIT A BIT
    175  e77a		       ad 01 21 	      LDA	PHPOS	;		    ;SEE IF LEFT YET
    176  e77d		       c9 52		      CMP	#INITHPOS+3
    177  e77f		       b0 e4		      BCS	TMOVEPAC
    178  e781		       a2 17		      LDX	#$17	;		     ;WAIT A BIT BEFORE CONTINUING
    179  e783		       20 8a e7    TMPLOOP    JSR	TWAIT
    180  e786		       ca		      DEX
    181  e787		       10 fa		      BPL	TMPLOOP
    182  e789		       60		      RTS
    183  e78a
    184  e78a
    185  e78a							;*  THIS IS THE WAIT ROUTINE FOR MONSTER AND PAC MOVEMENT
    186  e78a							;*  PRESERVES X
    187  e78a		       8a	   TWAIT      TXA		;			      ;STORE X
    188  e78b		       48		      PHA
    189  e78c		       a5 a1		      LDA	RTLOCAL+1	;		;FIND TIME TO LEAVE
    190  e78e		       18		      CLC
    191  e78f		       69 01		      ADC	#$01
    192  e791		       85 c0		      STA	TEMP16	;		   ;STORE IT
    193  e793		       20 a2 e7 	      JSR	ROTMARQ	;		  ;ROTATE MARQUIS
    194  e796
    195  e796		       20 15 cb    TWLOOP     JSR	SEEBAUTO	;		 ;SEE IF TIME TO START
    196  e799		       a5 c0		      LDA	TEMP16
    197  e79b		       c5 a1		      CMP	RTLOCAL+1	;		;AND WAIT TILL OUR TIME IS OVER
    198  e79d		       10 f7		      BPL	TWLOOP
    199  e79f
    200  e79f		       68		      PLA		;			      ;RESTORE X
    201  e7a0		       aa		      TAX
    202  e7a1		       60		      RTS
    203  e7a2
    204  e7a2
    205  e7a2							;*  THIS ROTATES THE MARQUIS
    206  e7a2		       a9 08	   ROTMARQ    LDA	#$08	;		     ;START AT ZONE 8
    207  e7a4		       85 b0		      STA	TEMP0
    208  e7a6		       a9 05	   RMLOOP0    LDA	#$05	;		     ;START EACH ZONE AT COLUMN 5
    209  e7a8		       85 b1		      STA	TEMP1
    210  e7aa		       20 0d f6    RMLOOP1    JSR	GETCHAR	;		  ;GET EXISTING CHARACTER
    211  e7ad		       c9 7b		      CMP	#MARQCHAR	;		;SEE IF MARQUIS CHARACTER
    212  e7af		       30 07		      BMI	RMNEXT
    213  e7b1		       aa		      TAX
    214  e7b2		       20 c9 e7 	      JSR	NEXTMARQ	;		 ;ROTATE MARQUIS CHARACTER
    215  e7b5		       20 f7 f5 	      JSR	PLOPCHAR	;		 ;PUT NEW CHARACTER
    216  e7b8		       e6 b1	   RMNEXT     INC	TEMP1	;		    ;NEXT COLUMN
    217  e7ba		       a5 b1		      LDA	TEMP1
    218  e7bc		       c9 16		      CMP	#$16	;		     ;UP TO COLUMN $16
    219  e7be		       30 ea		      BMI	RMLOOP1
    220  e7c0		       e6 b0		      INC	TEMP0	;		    ;NEXT ZONE
    221  e7c2		       a5 b0		      LDA	TEMP0
    222  e7c4		       c9 14		      CMP	#$14	;		     ;UP TO ZONE $14
    223  e7c6		       30 de		      BMI	RMLOOP0
    224  e7c8		       60		      RTS
    225  e7c9
    226  e7c9
    227  e7c9							;*  THIS "INCREMENTS" X WITH WRAP TO INCREMENT THROUGH MARQUIS DOTS
    228  e7c9							;*  INPUT:  X
    229  e7c9							;*  OUTPUT: X
    230  e7c9		       e8	   NEXTMARQ   INX
    231  e7ca		       e0 83		      CPX	#MARQCHAR+8
    232  e7cc		       30 02		      BMI	NMOUT
    233  e7ce		       a2 7b		      LDX	#MARQCHAR
    234  e7d0		       60	   NMOUT      RTS
    235  e7d1
    236  e7d1
    237  e7d1							;*  THIS DOES THE WORK FOR THE MENU PAGE
    238  e7d1		       20 5f e6    MENU       JSR	TITLESET	;		 ;DO BASIC SET UP
    239  e7d4		       20 a7 e8 	      JSR	MENUMSGS	;		 ;PUT UP NUMBER PLAYERS AND FRUIT
    240  e7d7
    241  e7d7		       a0 0d		      LDY	#$0D	;		     ;WRITE INSTRUCTIONS
    242  e7d9		       20 9e f8 	      JSR	WRTMESG
    243  e7dc		       a0 0e		      LDY	#$0E
    244  e7de		       20 9e f8 	      JSR	WRTMESG
    245  e7e1
    246  e7e1		       20 58 e8 	      JSR	DTBOUNCE	;		 ;DEBOUNCE JOYSTICK
    247  e7e4		       20 5d e8 	      JSR	DTSELBNC	;		 ;DEBOUNCE SELECT SWITCH
    248  e7e7		       20 62 e8 	      JSR	DTSAVE	;		   ;WE DID SOMETHING, SAVE THE TIME
    249  e7ea
    250  e7ea		       20 7b cb    DTBODY     JSR	SEEBMENU	;		 ;SEE IF TIME TO START
    251  e7ed		       a5 d0		      LDA	NEWDIR	;		   ;SEE IF CENTERED - ZERO TEMP17 IF SO
    252  e7ef		       c9 04		      CMP	#DCENTER
    253  e7f1		       30 0e		      BMI	DTBJMP1	;		  ;IF NEGATIVE, JUST INTERPRET IT
    254  e7f3		       d0 07		      BNE	DTBJMP1A	;		 ;IF POSITIVE, DROP IT TO A "REAL" VALUE
    255  e7f5		       a9 00		      LDA	#$00	;		     ;NOT HIT, CLEAR JOYSTICK WAIT
    256  e7f7		       85 c1		      STA	TEMP17
    257  e7f9		       4c 22 e8 	      JMP	DTBSEL
    258  e7fc		       38	   DTBJMP1A   SEC		;			      ;TURN DIAGNALS INTO ADJACENT DIRECTIONS
    259  e7fd		       e9 05		      SBC	#DDWRIGHT
    260  e7ff		       85 d0		      STA	NEWDIR
    261  e801		       c6 c1	   DTBJMP1    DEC	TEMP17	;		   ;SEE IF LOOK AT JOYSTICK
    262  e803		       10 1d		      BPL	DTBSEL
    263  e805		       20 58 e8 	      JSR	DTBOUNCE	;		 ;DEBOUNCE THE JOYSTICK
    264  e808
    265  e808		       a5 d0		      LDA	NEWDIR
    266  e80a		       c9 02		      CMP	#DLEFT	;		   ;SEE WHAT TO DO
    267  e80c		       d0 03		      BNE	DTBRIGHT
    268  e80e		       4c 77 e8 	      JMP	DECDIFF
    269  e811		       c9 00	   DTBRIGHT   CMP	#DRIGHT
    270  e813		       d0 03		      BNE	DTBUP
    271  e815		       4c 68 e8 	      JMP	INCDIFF
    272  e818		       c9 03	   DTBUP      CMP	#DUP
    273  e81a		       d0 03		      BNE	DTBDOWN
    274  e81c		       4c 84 e8 	      JMP	INCPLYR
    275  e81f		       4c 8b e8    DTBDOWN    JMP	DECPLYR
    276  e822
    277  e822		       ad 82 02    DTBSEL     LDA	SWCHB	;		    ;SEE IF SELECT SWITCH HIT
    278  e825		       29 02		      AND	#$02
    279  e827		       f0 07		      BEQ	DTBSJMP
    280  e829		       a9 00		      LDA	#$00	;		     ;NOT HIT, CLEAR SELECT WAIT
    281  e82b		       85 c2		      STA	TEMP18
    282  e82d		       4c 43 e8 	      JMP	DTBNEXT
    283  e830		       c6 c2	   DTBSJMP    DEC	TEMP18	;		   ;SEE IF LOOK AT SWITCH
    284  e832		       10 0f		      BPL	DTBNEXT
    285  e834		       20 5d e8 	      JSR	DTSELBNC	;		 ;DEBOUNCE THE JOYSTICK
    286  e837		       20 92 e8 	      JSR	OADVANCE	;		 ;ADVANCE THE OPTION
    287  e83a
    288  e83a		       20 62 e8    DTBDIDIT   JSR	DTSAVE	;		   ;SAVE THE TIME - WE DID SOMETHING
    289  e83d		       20 a7 e8 	      JSR	MENUMSGS	;		 ;UPDATE THE MESSAGES
    290  e840		       20 1f e7 	      JSR	TITLEIND	;		 ;UPDATE THE INDICATORS
    291  e843
    292  e843		       a5 a0	   DTBNEXT    LDA	RTLOCAL	;		  ;SEE IF WE"VE WAITED TOO LONG
    293  e845		       c5 c3		      CMP	TEMP19
    294  e847		       d0 03		      BNE	DTBNJMP
    295  e849		       4c 91 cb 	      JMP	DOATRACT	;		 ;TIME OUT - GO TO TITLE PAGE
    296  e84c		       a5 a1	   DTBNJMP    LDA	RTLOCAL+1	;		;WAIT A FRAME
    297  e84e		       c5 a1	   DTBNLOOP   CMP	RTLOCAL+1
    298  e850		       f0 fc		      BEQ	DTBNLOOP
    299  e852		       20 a2 e7 	      JSR	ROTMARQ	;		  ;ROTATE MARQUIS
    300  e855		       4c ea e7 	      JMP	DTBODY
    301  e858
    302  e858
    303  e858							;*  DEBOUNCE CODE FOR JOYSTICK
    304  e858		       a9 0c	   DTBOUNCE   LDA	#$0C	;		     ;PUT A LITTLE DEBOUNCING INTO JOYSTICK
    305  e85a		       85 c1		      STA	TEMP17
    306  e85c		       60		      RTS
    307  e85d
    308  e85d
    309  e85d							;*  DEBOUNCE CODE FOR SELECT SWITCH
    310  e85d		       a9 0c	   DTSELBNC   LDA	#$0C	;		     ;PUT A LITTLE DEBOUNCING INTO SELECT
    311  e85f		       85 c2		      STA	TEMP18
    312  e861		       60		      RTS
    313  e862
    314  e862
    315  e862							;*  THIS ROUTINE SAVES THE CURRENT TIME AWAY
    316  e862		       a6 a0	   DTSAVE     LDX	RTLOCAL
    317  e864		       ca		      DEX		;			      ;SUBTRACT 1 FOR EASY COMPARES
    318  e865		       86 c3		      STX	TEMP19
    319  e867		       60		      RTS
    320  e868
    321  e868
    322  e868							;*  THIS ROUTINE INCREMENTS DIFFICULTY
    323  e868		       a6 40	   INCDIFF    LDX	STLEVEL
    324  e86a		       e0 07		      CPX	#$07
    325  e86c		       10 06		      BPL	IDOUT
    326  e86e		       e8		      INX
    327  e86f		       86 40		      STX	STLEVEL
    328  e871		       20 cd cd 	      JSR	ZEROSCOR
    329  e874		       4c 3a e8    IDOUT      JMP	DTBDIDIT
    330  e877
    331  e877
    332  e877							;*  THIS ROUTINE INCREMENTS DIFFICULTY
    333  e877		       a6 40	   DECDIFF    LDX	STLEVEL
    334  e879		       f0 f9		      BEQ	IDOUT
    335  e87b		       ca		      DEX
    336  e87c		       86 40		      STX	STLEVEL
    337  e87e		       20 cd cd 	      JSR	ZEROSCOR
    338  e881		       4c 3a e8    DDOUT      JMP	DTBDIDIT
    339  e884
    340  e884
    341  e884							;*  THIS ROUTINE INCREMENTS PLAYERS
    342  e884		       a9 01	   INCPLYR    LDA	#$01
    343  e886		       85 41		      STA	TWOPLAYR
    344  e888		       4c 3a e8 	      JMP	DTBDIDIT
    345  e88b
    346  e88b
    347  e88b							;*  THIS ROUTINE DECREMENTS PLAYERS
    348  e88b		       a9 00	   DECPLYR    LDA	#$00
    349  e88d		       85 41		      STA	TWOPLAYR
    350  e88f		       4c 3a e8 	      JMP	DTBDIDIT
    351  e892
    352  e892
    353  e892							;*  THIS ROUTINE ADVANCES THE OPTION
    354  e892		       e6 40	   OADVANCE   INC	STLEVEL	;		  ;GO TO NEXT STARTING LEVEL
    355  e894		       a5 40		      LDA	STLEVEL	;		  ;SEE IF WE WENT OVER THE TOP
    356  e896		       c9 08		      CMP	#$08
    357  e898		       30 0a		      BMI	OAOUT
    358  e89a		       a9 00		      LDA	#$00	;		     ;WRAP LEVEL TO 0
    359  e89c		       85 40		      STA	STLEVEL
    360  e89e		       a5 41		      LDA	TWOPLAYR	;		 ;CHANGE NUMBER OF PLAYERS
    361  e8a0		       49 01		      EOR	#$01
    362  e8a2		       85 41		      STA	TWOPLAYR
    363  e8a4		       4c cd cd    OAOUT      JMP	ZEROSCOR	;		 ;OPTION CHANGED, ZERO SCORE
    364  e8a7
    365  e8a7
    366  e8a7							;*  THIS ROUTINE WRITES THE NUMBER OF PLAYERS AND FRUIT
    367  e8a7		       a6 41	   MENUMSGS   LDX	TWOPLAYR	;		 ;DO NUMBER OF PLAYERS
    368  e8a9		       bc bb e8 	      LDY	PLAYRMSG,X
    369  e8ac		       20 9e f8 	      JSR	WRTMESG
    370  e8af		       a6 40		      LDX	STLEVEL	;		  ;NOW DO FRUIT
    371  e8b1		       bc bd e8 	      LDY	FRUITMSG,X
    372  e8b4		       4c 9e f8 	      JMP	WRTMESG
    373  e8b7
    374  e8b7
    375  e8b7							;*  THIS TELLS HOW HI THE MONSTERS GO
    376  e8b7		       09 0c 0f 12 TENDZONE   DC.B	$09,$0C,$0F,$12
    377  e8bb
    378  e8bb							;*  THESE TABLES CONTROL MESSAGES FOR NUM PLAYERS AND FRUIT
    379  e8bb		       11 12	   PLAYRMSG   DC.B	$11,$12
    380  e8bd		       13 14 15 16*FRUITMSG   DC.B	$13,$14,$15,$16,$17,$18,$19,$1A
    381  e8c5
    382  e8c5							; END
------- FILE MDOIT.ASM
------- FILE HIGH.ASM LEVEL 2 PASS 2
      0  e8c5					      include	"HIGH.ASM"
      1  e8c5					      processor	6502
      2  e8c5
      3  e8c5							;*  HIGH	    HIGH SCORE ROUTINES
      4  e8c5
      5  e8c5
      6  e8c5							;*  THIS ROUTINE DISPLAYS THE HIGH SCORES FOR THE GAME
      7  e8c5		       a5 9c	   HOLDSCOR   LDA	HSCHERE	;		  ;SEE IF HI SCORE CART IS THERE
      8  e8c7		       f0 19		      BEQ	HOSOUT
      9  e8c9
     10  e8c9		       a2 07		      LDX	#$07
     11  e8cb		       8a	   HOSLOOP    TXA		;			      ;SAVE X
     12  e8cc		       48		      PHA
     13  e8cd		       20 2c e9 	      JSR	HSETTEMP	;		 ;SET UP TEMPLATE FOR HSC DATA BLOCK
     14  e8d0		       a9 04		      LDA	#$04	;		     ;SET TIME TO SEE TABLE
     15  e8d2		       8d 0e 18 	      STA	HSCRAM+$0E
     16  e8d5		       68		      PLA		;			      ;GET OUR X BACK
     17  e8d6		       48		      PHA
     18  e8d7		       20 3f e9 	      JSR	HSETDIF	;		  ;UPDATE HSC DATA BLOCK FOR DIFFICULTY
     19  e8da		       20 12 e9 	      JSR	HSCATRCT
     20  e8dd		       68		      PLA		;			      ;RESTORE X
     21  e8de		       aa		      TAX
     22  e8df		       ca		      DEX
     23  e8e0		       10 e9		      BPL	HOSLOOP
     24  e8e2		       60	   HOSOUT     RTS
     25  e8e3
     26  e8e3
     27  e8e3							;*  THIS ROUTINE ENTERS A NEW HI SCORE AND SHOWS THE HI SCORE TABLE
     28  e8e3		       a5 9c	   HNEWSCOR   LDA	HSCHERE	;		  ;SEE IF HI SCORE CART IS THERE
     29  e8e5		       f0 fb		      BEQ	HOSOUT
     30  e8e7
     31  e8e7		       20 2c e9 	      JSR	HSETTEMP	;		 ;SET UP TEMPLATE FOR HSC DATA BLOCK
     32  e8ea		       20 3d e9 	      JSR	HSETDIFC	;		 ;SET DIFFICULTY
     33  e8ed		       a9 00		      LDA	#$00
     34  e8ef		       20 61 e9 	      JSR	HSETPLAY	;		 ;SET PLAYER 1
     35  e8f2		       20 1f e9 	      JSR	HSCENTER	;		 ;SHOW HSC TABLE
     36  e8f5		       a5 41		      LDA	TWOPLAYR
     37  e8f7		       f0 0e		      BEQ	HNSOUT
     38  e8f9
     39  e8f9		       20 2c e9 	      JSR	HSETTEMP	;		 ;SET UP TEMPLATE FOR HSC DATA BLOCK
     40  e8fc		       20 3d e9 	      JSR	HSETDIFC	;		 ;SET DIFFICULTY
     41  e8ff		       a9 01		      LDA	#$01
     42  e901		       20 61 e9 	      JSR	HSETPLAY	;		 ;SET PLAYER 2
     43  e904		       20 1f e9 	      JSR	HSCENTER
     44  e907
     45  e907		       20 2c e9    HNSOUT     JSR	HSETTEMP	;		 ;SET UP TEMPLATE FOR HSC DATA BLOCK
     46  e90a		       a9 09		      LDA	#$09	;		     ;SET TIME TO SEE TABLE - 10 SECONDS
     47  e90c		       8d 0e 18 	      STA	HSCRAM+$0E
     48  e90f		       20 3d e9 	      JSR	HSETDIFC
     49  e912							;				 ;FALL THROUGH
     50  e912
     51  e912							;*  DO THE HSCATRCT
     52  e912		       a2 00	   HSCATRCT   LDX	#<HSCRAM	;	       ;AND DO IT
     53  e914		       a0 18		      LDY	#>HSCRAM
     54  e916		       20 fa 3f 	      JSR	$3FFA	;		    ;DO HSCATRCT
     55  e919		       20 d1 cb 	      JSR	OURINIT	;		  ;FIX OUR STATE
     56  e91c		       4c 15 cb 	      JMP	SEEBAUTO
     57  e91f
     58  e91f
     59  e91f							;*  DO THE HSCENTER
     60  e91f		       a2 00	   HSCENTER   LDX	#<HSCRAM	;	       ;AND DO IT
     61  e921		       a0 18		      LDY	#>HSCRAM
     62  e923		       20 fd 3f 	      JSR	$3FFD	;		    ;DO HSCENTER
     63  e926		       20 d1 cb 	      JSR	OURINIT	;		  ;FIX OUR STATE
     64  e929		       4c 44 cb 	      JMP	SEEBALL
     65  e92c
     66  e92c
     67  e92c							;*  THIS ROUTINE SETS UP A DEFAULT HSC TABLE IN THE START OF HSC RAM
     68  e92c		       a2 1f	   HSETTEMP   LDX	#$1F
     69  e92e		       bd 7d e9    HSTLOOP    LDA	HSCTEMP,X	;		;INITIALIZE HI SCORE TEMPLATE
     70  e931		       9d 00 18 	      STA	HSCRAM,X
     71  e934		       a9 1d		      LDA	#$1D	;		     ;CLEAR DIFFICULTY NAME
     72  e936		       9d 00 1a 	      STA	HSCDIF,X
     73  e939		       ca		      DEX
     74  e93a		       10 f2		      BPL	HSTLOOP
     75  e93c		       60		      RTS
     76  e93d
     77  e93d
     78  e93d							;*  THIS ROUTINE SETS THE DIFFICULTY IN A FOR THE HSCRAM
     79  e93d		       a5 40	   HSETDIFC   LDA	STLEVEL	;		  ;DEFAULT STARTING LEVEL
     80  e93f		       aa	   HSETDIF    TAX
     81  e940		       0a		      ASL		;			;SHIFT IT LEFT TWICE
     82  e941		       0a		      ASL
     83  e942		       8d 02 18 	      STA	HSCRAM+2	;		 ;STORE IT IN DIFFICULTY
     84  e945
     85  e945		       bc e7 f8 	      LDY	HSCOFF,X	;		 ;MOVE THE NAME IN
     86  e948		       a2 08		      LDX	#$08
     87  e94a		       b9 29 fa    HSDLOOP    LDA	TMESSAG2,Y
     88  e94d		       d0 05		      BNE	HSDLNORM
     89  e94f		       a9 1d		      LDA	#$1D
     90  e951		       4c 57 e9 	      JMP	HSDLSTOR
     91  e954		       38	   HSDLNORM   SEC
     92  e955		       e9 5e		      SBC	#$5E
     93  e957		       9d 00 1a    HSDLSTOR   STA	HSCDIF,X
     94  e95a		       c8		      INY
     95  e95b		       e8		      INX
     96  e95c		       e0 12		      CPX	#$12
     97  e95e		       30 ea		      BMI	HSDLOOP
     98  e960
     99  e960		       60		      RTS
    100  e961
    101  e961
    102  e961							;*  THIS ROUTINE SETS THE PLAYER.  A IS THE PLAYER.  HSCDIF MUST BE CALLED FIRST.
    103  e961							;*  PLAYER 1 MUST BE DONE BEFORE PLAYER 2.
    104  e961		       aa	   HSETPLAY   TAX
    105  e962		       0d 02 18 	      ORA	HSCRAM+2	;		 ;OR IN THE DIFFICULTY
    106  e965		       8d 02 18 	      STA	HSCRAM+2
    107  e968
    108  e968		       a9 00		      LDA	#>P1SCORE	;	      ;SET HI BYTE OF SCORE
    109  e96a		       8d 09 18 	      STA	HSCRAM+9
    110  e96d		       e0 00		      CPX	#$00	;		     ;SEE WHICH PLAYER
    111  e96f		       d0 06		      BNE	HSCP2
    112  e971
    113  e971		       a9 46		      LDA	#<P1SCORE	;	      ;SET SCORE FOR PLAYER 1
    114  e973		       8d 08 18 	      STA	HSCRAM+8
    115  e976		       60		      RTS
    116  e977
    117  e977		       a9 4c	   HSCP2      LDA	#<P2SCORE	;	      ;SET SCORE FOR PLAYER 2
    118  e979		       8d 08 18 	      STA	HSCRAM+8
    119  e97c
    120  e97c							;*  WE HAVE NO SOUND FOR HSC
    121  e97c		       60	   HSCSOUND   RTS
    122  e97d
    123  e97d
    124  e97d							;*  TEMPLATE FOR HSC TABLE
    125  e97d		       80 01	   HSCTEMP    DC.B	$80,$01	;		  ;ID NUMBER AND TRAILING ZERO
    126  e97f		       00		      DC.B	$00	;		      ;DIFFICULTY [7..2] AND PLAYER [1..0]
    127  e980		       01		      DC.B	$01	;		      ;CONTROLLER TYPE
    128  e981		       8c e9		      DC.B	<HSCMS,>HSCMS	;POINTER TO MS PAC-MAN NAME
    129  e983		       00 1a		      DC.B	<HSCDIF,>HSCDIF	;POINTER TO DIFFICULTY NAME
    130  e985		       00 00		      DC.B	$00,$00	;		  ;POINTER TO SCORE
    131  e987		       00 00		      DC.B	$00,$00	;		  ;POINTER TO DLL FOR LOGO
    132  e989		       7c e9		      DC.B	<HSCSOUND,>HSCSOUND	;POINTER TO SOUND ROUTINE
    133  e98b		       00		      DC.B	$00	;		      ;TIME TO WAIT TILL RETURN
    134  e98c
    135  e98c							;*  WORDS FOR HSC - NAME OF GAME AND DIFFICULTIES
    136  e98c		       1d 1d 1d 1d*HSCMS      DC.B	$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D
    137  e994		       0c 12 1d 0f*	      DC.B	$0C,$12,$1D,$0F,$00,$02,$1C,$0C,$00,$0D	;MS PAC-MAN
    138  e99e		       1d 1d 1d 1d*	      DC.B	$1D,$1D,$1D,$1D,$1D,$1D,$1D,$1D
    139  e9a6
    140  e9a6							; END
------- FILE MDOIT.ASM
     63  e9a6					      align	2
------- FILE UTIL.ASM LEVEL 2 PASS 2
      0  e9a6					      include	"UTIL.ASM"
      1  e9a6					      processor	6502
      2  e9a6
      3  e9a6							;*  UTIL.S	    GENERAL UTILITY ROUTINES
      4  e9a6
      5  e9a6
      6  e9a6							;*  MOVE A CREATURE HORIZONTALLY
      7  e9a6							;*  INPUT: A - CURRENT HORIZONTAL POS, Y - DIRECTION CREATURE FACING
      8  e9a6							;*  OUTPUT:A - NEW HORIZONTAL POS
      9  e9a6		       18	   HPOSADJ    CLC
     10  e9a7		       79 04 ea 	      ADC	PHPOSTAB,Y
     11  e9aa		       60		      RTS
     12  e9ab
     13  e9ab							;*  MOVE A CREATURE VERTICALLY
     14  e9ab							;*  INPUT: A - CURRENT VERTICAL POS, Y - DIRECTION CREATURE FACING
     15  e9ab							;*	    X - CURRENT VERTICAL OFFSET
     16  e9ab							;*  OUTPUT:A - NEW VERTICAL POS
     17  e9ab		       c0 03	   VPOSADJ    CPY	#DUP
     18  e9ad		       f0 09		      BEQ	VPAUP
     19  e9af		       c0 01		      CPY	#DDOWN
     20  e9b1		       d0 09		      BNE	VPAOUT
     21  e9b3		       18		      CLC		;			      ;MOVE IT DOWN
     22  e9b4		       7d 08 ea 	      ADC	DNADJUST,X
     23  e9b7		       60		      RTS
     24  e9b8		       38	   VPAUP      SEC		;			      ;MOVE IT UP
     25  e9b9		       fd 0e ea 	      SBC	UPADJUST,X
     26  e9bc		       60	   VPAOUT     RTS
     27  e9bd
     28  e9bd
     29  e9bd							;*  BODY OF MACRO PFILL
     30  e9bd		       a0 00	   PFILLIT    LDY	#0
     31  e9bf		       91 b0	   PFLOOP     STA	(TEMP0),Y
     32  e9c1		       88		      DEY
     33  e9c2		       d0 fb		      BNE	PFLOOP
     34  e9c4		       e6 b1		      INC	TEMP1
     35  e9c6		       ca		      DEX
     36  e9c7		       d0 f6		      BNE	PFLOOP
     37  e9c9		       60		      RTS
     38  e9ca
     39  e9ca							;*  BODY OF MACRO PLOAD
     40  e9ca		       a0 00	   PLOADIT    LDY	#0
     41  e9cc		       b1 b2	   PLLOOP     LDA	(TEMP2),Y
     42  e9ce		       91 b0		      STA	(TEMP0),Y
     43  e9d0		       88		      DEY
     44  e9d1		       d0 f9		      BNE	PLLOOP
     45  e9d3		       e6 b1		      INC	TEMP1
     46  e9d5		       e6 b3		      INC	TEMP3
     47  e9d7		       ca		      DEX
     48  e9d8		       d0 f2		      BNE	PLLOOP
     49  e9da		       60		      RTS
     50  e9db
     51  e9db							;*  CONVERT HORIZONTAL BIT COUNT TO COLUMN
     52  e9db		       38	   HTOC       SEC
     53  e9dc		       e9 18		      SBC	#LEFTSIDE	;		;SHIFT ORIGIN
     54  e9de		       4a		      LSR
     55  e9df		       4a		      LSR		;			;AND SCALE
     56  e9e0		       60		      RTS
     57  e9e1
     58  e9e1							;*  CONVERT COLUMN TO HORIZONTAL BIT COUNT
     59  e9e1		       0a	   CTOH       ASL		;			;SCALE
     60  e9e2		       0a		      ASL
     61  e9e3		       18		      CLC
     62  e9e4		       69 18		      ADC	#LEFTSIDE	;		;SHIFT ORIGIN
     63  e9e6		       60		      RTS
     64  e9e7
     65  e9e7							;*  CONVERT VERTICAL BIT TO ZONE AND OFFSET
     66  e9e7							;*  OUTPUT:  ZONE IN Y, OFFSET IN A
     67  e9e7							;*  USES Y!
     68  e9e7		       a0 00	   VTOZO      LDY	#$00	;		     ;BRUTE FORCE - SLOW
     69  e9e9		       c9 06	   VTZAGAIN   CMP	#$06	;		     ;SEE IF ANYTHING TO DO
     70  e9eb		       b0 01		      BCS	VTZDOIT
     71  e9ed		       60		      RTS
     72  e9ee		       c8	   VTZDOIT    INY		;			      ;INCREMENT ZONE
     73  e9ef		       38		      SEC		;			      ;SUBTRACT 6
     74  e9f0		       e9 06		      SBC	#$06
     75  e9f2		       4c e9 e9 	      JMP	VTZAGAIN
     76  e9f5
     77  e9f5							;*  CONVERT ZONE TO VERTICAL BIT
     78  e9f5							;*  USES Y!
     79  e9f5		       a8	   ZTOV       TAY
     80  e9f6		       a9 00		      LDA	#$00
     81  e9f8		       c0 00	   ZVLOOP     CPY	#$00
     82  e9fa		       f0 07		      BEQ	ZVOUT
     83  e9fc		       18		      CLC
     84  e9fd		       69 06		      ADC	#$06
     85  e9ff		       88		      DEY
     86  ea00		       4c f8 e9 	      JMP	ZVLOOP
     87  ea03		       60	   ZVOUT      RTS
     88  ea04
     89  ea04
     90  ea04							;*  TABLES FOR EASY MOVEMENT
     91  ea04		       01 00 ff 00 PHPOSTAB   DC.B	$01,$00,$FF,$00
     92  ea08		       02 01 01 02*DNADJUST   DC.B	$02,$01,$01,$02,$01,$01
     93  ea0e		       01 01 02 01*UPADJUST   DC.B	$01,$01,$02,$01,$01,$02
     94  ea14							; END
------- FILE MDOIT.ASM
------- FILE TUNES.ASM LEVEL 2 PASS 2
      0  ea14					      include	"TUNES.ASM"
      1  ea14					      processor	6502
      2  ea14
      3  ea14							;*  TUNES.S - SOUND DRIVER
      4  ea14
      5  ea14
      6  ea14							;*  TURN OFF ALL SOUNDS
      7  ea14		       a9 00	   STOPTUN    LDA	#$00	;		     ;TURN OFF SOUNDS
      8  ea16		       85 19		      STA	AUDV0
      9  ea18		       85 1a		      STA	AUDV1
     10  ea1a		       a9 01		      LDA	#$01
     11  ea1c		       8d 2f 1d 	      STA	TUNOFF
     12  ea1f		       60		      RTS
     13  ea20
     14  ea20
     15  ea20							;*  TURN ON ALL SOUNDS
     16  ea20		       a2 01	   STARTTUN   LDX	#$01
     17  ea22		       bd 00 1d    STTLOOP    LDA	TUNON,X	;		  ;SEE IF TUNE IS ON
     18  ea25		       f0 13		      BEQ	STTLNEXT
     19  ea27		       bc 1c 1d 	      LDY	VOLOFF,X	;		 ;GET OFFSET FOR VOLUME
     20  ea2a		       88		      DEY
     21  ea2b		       88		      DEY
     22  ea2c		       bd 0c 1d 	      LDA	TUNBASE,X	;		;GET ADDRESS OF TUNE
     23  ea2f		       85 c8		      STA	SOUNDZP
     24  ea31		       bd 10 1d 	      LDA	TUNBASE1,X
     25  ea34		       85 c9		      STA	SOUNDZP+1
     26  ea36		       b1 c8		      LDA	(SOUNDZP),Y	;	      ;STORE THE VOLUME
     27  ea38		       95 19		      STA	AUDV0,X
     28  ea3a		       ca	   STTLNEXT   DEX
     29  ea3b		       10 e5		      BPL	STTLOOP
     30  ea3d		       a9 00		      LDA	#$00
     31  ea3f		       8d 2f 1d 	      STA	TUNOFF
     32  ea42		       60		      RTS
     33  ea43
     34  ea43
     35  ea43							;*  THIS ROUTINE ENTERS A TUNE INTO ONE OF THE SOUND CHANNELS IF IT CAN
     36  ea43							;*  INPUT:  TUNE NUMBER IN A
     37  ea43							;*  X AND Y ARE PRESERVED
     38  ea43		       8d 2c 1d    DOTUNE     STA	TUNNUM	;		   ;SAVE IT
     39  ea46		       a5 42		      LDA	AUTOPLAY	;		 ;IF IN AUTOPLAY - NO SOUND
     40  ea48		       f0 01		      BEQ	DTCONT
     41  ea4a		       60		      RTS
     42  ea4b		       8a	   DTCONT     TXA		;			      ;STACK REGISTERS
     43  ea4c		       48		      PHA
     44  ea4d		       98		      TYA
     45  ea4e		       48		      PHA
     46  ea4f
     47  ea4f		       ac 2c 1d 	      LDY	TUNNUM	;		   ;SEE IF WE CAN PUT IT IN
     48  ea52		       be eb eb 	      LDX	TCHANNEL,Y	;	       ;GET WHAT CHANNEL TO TRY TO PUT IT IN
     49  ea55		       bd 00 1d 	      LDA	TUNON,X	;		  ;SEE IF CHANNEL OPEN
     50  ea58		       f0 08		      BEQ	DTDOIT
     51  ea5a		       b9 d6 eb 	      LDA	TPRIOR,Y	;		 ;SEE IF WE CAN BUMP CHANNEL
     52  ea5d		       dd 08 1d 	      CMP	TUNPRIOR,X
     53  ea60		       30 06		      BMI	DTOUT
     54  ea62
     55  ea62		       ad 2c 1d    DTDOIT     LDA	TUNNUM
     56  ea65		       20 47 eb 	      JSR	BEGINTUN	;		 ;GOT IT
     57  ea68
     58  ea68		       68	   DTOUT      PLA		;			      ;UNSTACK REGISTERS
     59  ea69		       a8		      TAY
     60  ea6a		       68		      PLA
     61  ea6b		       aa		      TAX
     62  ea6c		       60		      RTS
     63  ea6d
     64  ea6d
     65  ea6d							;*  ROUTINE TO KILL A PARTICULAR TUNE - IF IT IS RUNNING
     66  ea6d							;*  INPUT: TUNE NUMBER IN A
     67  ea6d							;*  X AND Y ARE PRESERVED
     68  ea6d		       8d 2c 1d    KILLTUNE   STA	TUNNUM	;		   ;SAVE IT
     69  ea70		       8a		      TXA		;			      ;STACK REGISTERS
     70  ea71		       48		      PHA
     71  ea72		       98		      TYA
     72  ea73		       48		      PHA
     73  ea74		       a2 01		      LDX	#$01	;		     ;CHECK ALL CHANNELS
     74  ea76		       bd 00 1d    KTLOOP     LDA	TUNON,X	;		  ;SEE IF CHANNEL ON
     75  ea79		       f0 0b		      BEQ	KTNEXT
     76  ea7b		       bd 04 1d 	      LDA	TUNINDEX,X	;	       ;SEE IF HAS TUNE TO BE KILLED
     77  ea7e		       cd 2c 1d 	      CMP	TUNNUM
     78  ea81		       d0 03		      BNE	KTNEXT
     79  ea83		       20 3e eb 	      JSR	ENDTUNE	;		  ;ERASE IT
     80  ea86		       ca	   KTNEXT     DEX
     81  ea87		       10 ed		      BPL	KTLOOP
     82  ea89		       68		      PLA		;			      ;UNSTACK REGISTERS
     83  ea8a		       a8		      TAY
     84  ea8b		       68		      PLA
     85  ea8c		       aa		      TAX
     86  ea8d		       60		      RTS
     87  ea8e
     88  ea8e
     89  ea8e							;*  THIS ROUTINE ERASES ALL TUNES
     90  ea8e							;*  X AND Y ARE PRESERVED
     91  ea8e		       8a	   CLEARTUN   TXA		;			      ;STACK REGISTERS
     92  ea8f		       48		      PHA
     93  ea90		       98		      TYA
     94  ea91		       48		      PHA
     95  ea92		       a2 01		      LDX	#$01
     96  ea94		       20 3e eb    CTLOOP     JSR	ENDTUNE	;		  ;ERASE CURRENT TUNE
     97  ea97		       ca		      DEX
     98  ea98		       10 fa		      BPL	CTLOOP
     99  ea9a		       68		      PLA		;			      ;UNSTACK REGISTERS
    100  ea9b		       a8		      TAY
    101  ea9c		       68		      PLA
    102  ea9d		       aa		      TAX
    103  ea9e		       60		      RTS
    104  ea9f
    105  ea9f
    106  ea9f							;*  THIS ROUTINE IS CALLED EVERY VBLANK TO TAKE CARE OF TUNES
    107  ea9f							;*  REGISTERS ARE NOT SAVED
    108  ea9f		       a2 01	   TUNER      LDX	#$01	;		     ;TWO TUNES CHANNELS, START WITH SECOND
    109  eaa1		       ad 2f 1d 	      LDA	TUNOFF
    110  eaa4		       f0 01		      BEQ	TUNLOOP
    111  eaa6		       60		      RTS
    112  eaa7
    113  eaa7		       bd 00 1d    TUNLOOP    LDA	TUNON,X
    114  eaaa		       d0 05		      BNE	TUNBODY
    115  eaac		       95 19		      STA	AUDV0,X	;		  ;CHANNEL OFF - MAKE SURE VOLUME OFF
    116  eaae		       4c dd ea 	      JMP	TUNNEXT
    117  eab1
    118  eab1		       bd 0c 1d    TUNBODY    LDA	TUNBASE,X	;		;GET ADDRESS OF TUNE
    119  eab4		       85 c8		      STA	SOUNDZP
    120  eab6		       bd 10 1d 	      LDA	TUNBASE1,X
    121  eab9		       85 c9		      STA	SOUNDZP+1
    122  eabb
    123  eabb		       de 20 1d 	      DEC	FREQTIME,X	;	       ;DO FREQUENCY
    124  eabe		       d0 03		      BNE	TUNCTL
    125  eac0		       20 e1 ea 	      JSR	TNXTFREQ	;		 ;TIME FOR NEXT FREQUENCY
    126  eac3		       bd 24 1d    TUNCTL     LDA	CTLTIME,X	;		;DO CONTROL
    127  eac6		       f0 08		      BEQ	TUNVOL	;		   ;IS CTL CONSTANT? (STARTS AT 0)
    128  eac8		       de 24 1d 	      DEC	CTLTIME,X
    129  eacb		       d0 03		      BNE	TUNVOL
    130  eacd		       20 18 eb 	      JSR	TNXTCTL	;		  ;TIME FOR NEXT CTL
    131  ead0		       bd 28 1d    TUNVOL     LDA	VOLTIME,X	;		;DO VOLUME
    132  ead3		       f0 08		      BEQ	TUNNEXT	;		  ;IS VOLUME CONSTANT? (STARTS AT 0)
    133  ead5		       de 28 1d 	      DEC	VOLTIME,X
    134  ead8		       d0 03		      BNE	TUNNEXT
    135  eada		       20 2b eb 	      JSR	TNXTVOL	;		  ;TIME FOR NEXT VOLUME
    136  eadd
    137  eadd		       ca	   TUNNEXT    DEX		;			      ;DONE WITH THAT TUNE, IS THERE ANOTHER?
    138  eade		       10 c7		      BPL	TUNLOOP
    139  eae0		       60		      RTS		;			      ;ALL DONE
    140  eae1
    141  eae1							;*  ROUTINES TO GET NEXT FREQUENCY, CTL, OR VOLUME
    142  eae1
    143  eae1							;*  THIS ROUTINE GETS NEXT FREQUENCY
    144  eae1		       bc 14 1d    TNXTFREQ   LDY	FREQOFF,X	;		;GET INDEX INTO TABLE
    145  eae4		       b1 c8		      LDA	(SOUNDZP),Y	;	      ;GET FREQUENCY
    146  eae6		       30 0e		      BMI	TNFENDT	;		  ;IS THIS THE END OF THE TUNE?
    147  eae8		       95 17		      STA	AUDF0,X
    148  eaea		       c8		      INY
    149  eaeb		       b1 c8		      LDA	(SOUNDZP),Y	;	      ;GET DURATION
    150  eaed		       9d 20 1d 	      STA	FREQTIME,X
    151  eaf0		       c8		      INY
    152  eaf1		       98		      TYA
    153  eaf2		       9d 14 1d 	      STA	FREQOFF,X
    154  eaf5		       60		      RTS
    155  eaf6		       c9 ff	   TNFENDT    CMP	#$FF	;		     ;SEE IF TUNE OVER
    156  eaf8		       f0 16		      BEQ	TNFEOVER
    157  eafa		       c9 fe		      CMP	#$FE	;		     ;SEE IF TUNE REPEATS
    158  eafc		       f0 09		      BEQ	TNFEREPT
    159  eafe		       c8		      INY		;			      ;ANOTHER TUNE COMING
    160  eaff		       b1 c8		      LDA	(SOUNDZP),Y	;	      ;FIND OUT WHICH TUNE
    161  eb01		       20 47 eb 	      JSR	BEGINTUN	;		 ;START TUNE
    162  eb04		       4c 13 eb 	      JMP	TNFEOUT
    163  eb07
    164  eb07		       bd 04 1d    TNFEREPT   LDA	TUNINDEX,X	;	       ;TUNE REPEATS - RESTART IT
    165  eb0a		       20 47 eb 	      JSR	BEGINTUN	;		 ;START TUNE
    166  eb0d		       4c 13 eb 	      JMP	TNFEOUT
    167  eb10
    168  eb10		       20 3e eb    TNFEOVER   JSR	ENDTUNE	;		  ;TUNE FINISHED
    169  eb13		       68	   TNFEOUT    PLA		;			      ;END OF TUNE
    170  eb14		       68		      PLA		;			      ;GET RID OF WHERE WE ARE RTS"ING TO
    171  eb15		       4c a7 ea 	      JMP	TUNLOOP	;		  ;UPDATE THIS CHANNEL
    172  eb18
    173  eb18
    174  eb18							;*  THIS ROUTINE GETS NEXT CONTROL BYTE
    175  eb18		       bc 18 1d    TNXTCTL    LDY	CTLOFF,X	;		 ;GET INDEX INTO TABLE
    176  eb1b		       b1 c8		      LDA	(SOUNDZP),Y	;	      ;GET FREQUENCY
    177  eb1d		       95 15		      STA	AUDC0,X
    178  eb1f		       c8		      INY
    179  eb20		       b1 c8		      LDA	(SOUNDZP),Y	;	      ;GET DURATION
    180  eb22		       9d 24 1d 	      STA	CTLTIME,X
    181  eb25		       c8		      INY
    182  eb26		       98		      TYA
    183  eb27		       9d 18 1d 	      STA	CTLOFF,X
    184  eb2a		       60		      RTS
    185  eb2b
    186  eb2b
    187  eb2b							;*  THIS ROUTINE GETS NEXT VOLUME BYTE
    188  eb2b		       bc 1c 1d    TNXTVOL    LDY	VOLOFF,X	;		 ;GET INDEX INTO TABLE
    189  eb2e		       b1 c8		      LDA	(SOUNDZP),Y	;	      ;GET FREQUENCY
    190  eb30		       95 19		      STA	AUDV0,X
    191  eb32		       c8		      INY
    192  eb33		       b1 c8		      LDA	(SOUNDZP),Y	;	      ;GET DURATION
    193  eb35		       9d 28 1d 	      STA	VOLTIME,X
    194  eb38		       c8		      INY
    195  eb39		       98		      TYA
    196  eb3a		       9d 1c 1d 	      STA	VOLOFF,X
    197  eb3d		       60		      RTS
    198  eb3e
    199  eb3e
    200  eb3e							;*  THIS ROUTINE CLEARS OUT A TUNE CHANNEL
    201  eb3e							;*  INPUT: X IS CHANNEL
    202  eb3e		       a9 00	   ENDTUNE    LDA	#$00
    203  eb40		       9d 00 1d 	      STA	TUNON,X	;		  ;INDICATE CHANNEL CLEAR
    204  eb43		       9d 04 1d 	      STA	TUNINDEX,X	;	       ;CLEAR TUNE INDEX
    205  eb46		       60		      RTS
    206  eb47
    207  eb47
    208  eb47							;*  THIS ROUTINE STARTS A TUNE IN A CHANNEL
    209  eb47							;*  INPUT: X IS CHANNEL, A IS TUNE
    210  eb47							;*  USES:  Y
    211  eb47		       a8	   BEGINTUN   TAY		;			      ;PUT TUNE IN Y
    212  eb48		       9d 04 1d 	      STA	TUNINDEX,X	;	       ;SET THE TUNE INDEX
    213  eb4b		       a9 00		      LDA	#$00	;		     ;TURN TUNE OFF WHILE CHANGING IT
    214  eb4d		       9d 00 1d 	      STA	TUNON,X
    215  eb50		       b9 82 eb 	      LDA	TBASE,Y	;		  ;SET THE BASE ADDRESS FOR TUNE
    216  eb53		       9d 0c 1d 	      STA	TUNBASE,X
    217  eb56		       b9 97 eb 	      LDA	TBASE1,Y
    218  eb59		       9d 10 1d 	      STA	TUNBASE1,X
    219  eb5c		       a9 00		      LDA	#$00	;		     ;FREQUENCY IS AT START OF TUNE
    220  eb5e		       9d 14 1d 	      STA	FREQOFF,X
    221  eb61		       b9 ac eb 	      LDA	TCTLOFF,Y	;		;SET CONTROL OFFSET
    222  eb64		       9d 18 1d 	      STA	CTLOFF,X
    223  eb67		       b9 c1 eb 	      LDA	TVOLOFF,Y	;		;SET VOLUME OFFSET
    224  eb6a		       9d 1c 1d 	      STA	VOLOFF,X
    225  eb6d		       b9 d6 eb 	      LDA	TPRIOR,Y	;		 ;SET PRIORITY
    226  eb70		       9d 08 1d 	      STA	TUNPRIOR,X
    227  eb73		       a9 01		      LDA	#$01	;		     ;SET FREQ, CTL, AND VOL TO BE SET
    228  eb75		       9d 20 1d 	      STA	FREQTIME,X	;	       ;  NEXT VBLANK (TICK DOWN TO 0 EACH)
    229  eb78		       9d 24 1d 	      STA	CTLTIME,X
    230  eb7b		       9d 28 1d 	      STA	VOLTIME,X
    231  eb7e		       9d 00 1d 	      STA	TUNON,X	;		  ;AND TURN THE TUNE ON!
    232  eb81		       60		      RTS
    233  eb82
    234  eb82
    235  eb82							;*  DATA FOR TUNES
    236  eb82
    237  eb82							;*  TUNE TABLES, BASE ADDRESSES FOR TUNES AND THE OFFSETS WITHIN THE TUNES WHERE
    238  eb82							;*  THE CTL AND VOL INFORMATION START
    239  eb82		       00 31 6c e9*TBASE      DC.B	<TINTRO0,<TINTRO1,<TANIM10,<TANIM11,<TANIM20A
    240  eb87		       e2 57 1d d0*	      DC.B	<TANIM20B,<TANIM21A,<TANIM21B,<TANIM30,<TANIM31
    241  eb8c		       50 65 6c e9*	      DC.B	<TBACKG,<TFRTBNC,<TPACDTH,<TENERGA,<TENERGB
    242  eb91		       51 5e 73 b6*	      DC.B	<TENERGC,<TMUNCH,<TEATMON,<TEATFRT,<TEYES
    243  eb96		       06		      DC.B	<TBONUS
    244  eb97		       ec ec ec ec*TBASE1     DC.B	>TINTRO0,>TINTRO1,>TANIM10,>TANIM11,>TANIM20A
    245  eb9c		       ed ee ef ef*	      DC.B	>TANIM20B,>TANIM21A,>TANIM21B,>TANIM30,>TANIM31
    246  eba1		       f0 f0 f0 f0*	      DC.B	>TBACKG,>TFRTBNC,>TPACDTH,>TENERGA,>TENERGB
    247  eba6		       f2 f2 f2 f2*	      DC.B	>TENERGC,>TMUNCH,>TEATMON,>TEATFRT,>TEYES
    248  ebab		       f3		      DC.B	>TBONUS
    249  ebac		       2d 2b 63 1f*TCTLOFF    DC.B	$2D,$2B,$63,$1F,$82,$5D,$42,$3F,$37,$25
    250  ebb6		       11 03 51 62*	      DC.B	$11,$03,$51,$62,$52,$09,$07,$1F,$27,$15
    251  ebc0		       03		      DC.B	$03
    252  ebc1		       2f 2d 7b 21*TVOLOFF    DC.B	$2F,$2D,$7B,$21,$92,$73,$44,$41,$3D,$27
    253  ebcb		       13 05 55 64*	      DC.B	$13,$05,$55,$64,$54,$0B,$13,$21,$29,$17
    254  ebd5		       05		      DC.B	$05
    255  ebd6		       00 00 00 00*TPRIOR     DC.B	0,0,0,0,0,0,0,0,0,0
    256  ebe0		       00 04 08 04*	      DC.B	0,4,8,4,4,4,0,6,5,8
    257  ebea		       09		      DC.B	9
    258  ebeb		       00 01 00 01*TCHANNEL   DC.B	0,1,0,1,0,0,1,1,0,1
    259  ebf5		       00 01 01 00*	      DC.B	0,1,1,0,0,0,1,1,1,0
    260  ebff		       01		      DC.B	1
    261  ec00
    262  ec00							;*  TUNE 0 - FIRST VOICE OF INTRODUCTION
    263  ec00		       00 0c 1b 10*TINTRO0    DC.B	$00,$0C,$1B,$10,$15,$10,$18,$10,$14,$10	;FREQ
    264  ec0a		       15 08 14 08*	      DC.B	$15,$08,$14,$08,$12,$08,$15,$08,$18,$10,$14,$10
    265  ec16		       15 08 14 08*	      DC.B	$15,$08,$14,$08,$12,$08,$15,$08
    266  ec1e		       14 08 12 08*	      DC.B	$14,$08,$12,$08,$10,$08,$0E,$08
    267  ec26		       0d 10 0e 10*	      DC.B	$0D,$10,$0E,$10,$0D,$10,$FF
    268  ec2d		       04 00		      DC.B	$04,$00	;					  ;CTL
    269  ec2f		       0c 00		      DC.B	$0C,$00	;					  ;VOL
    270  ec31
    271  ec31							;*  TUNE 1 - SECOND VOICE OF INTRODUCTION
    272  ec31		       0b 04 0a 04*TINTRO1    DC.B	$0B,$04,$0A,$04,$09,$04,$12,$20	;		  ;FREQ
    273  ec39		       18 20 12 20	      DC.B	$18,$20,$12,$20
    274  ec3d		       13 08 12 08*	      DC.B	$13,$08,$12,$08,$10,$08,$13,$08
    275  ec45		       12 08 10 08*	      DC.B	$12,$08,$10,$08,$0E,$08,$12,$08
    276  ec4d		       10 08 12 08*	      DC.B	$10,$08,$12,$08,$13,$08,$10,$08
    277  ec55		       12 10 18 10*	      DC.B	$12,$10,$18,$10,$12,$10,$FF
    278  ec5c		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    279  ec5e		       08 1c 00 10*	      DC.B	$08,$1C,$00,$10,$08,$10,$00,$10,$08,$10	;VOL
    280  ec68		       00 10 08 00	      DC.B	$00,$10,$08,$00
    281  ec6c
    282  ec6c							;*  TUNE 2 - FIRST VOICE, FIRST ANIMATION
    283  ec6c		       1a 08 17 08*TANIM10    DC.B	$1A,$08,$17,$08,$1A,$08,$1F,$10	;		  ;FREQ
    284  ec74		       0d 08 0b 08*	      DC.B	$0D,$08,$0B,$08,$0A,$08,$1F,$20
    285  ec7c		       0b 08 1f 08*	      DC.B	$0B,$08,$1F,$08,$0B,$08,$0D,$08
    286  ec84		       1a 08 17 08*	      DC.B	$1A,$08,$17,$08,$1A,$08,$1F,$10
    287  ec8c		       0d 08 0b 10*	      DC.B	$0D,$08,$0B,$10,$0D,$28,$14,$08,$11,$08,$10,$08
    288  ec98		       0f 08 00 08*	      DC.B	$0F,$08,$00,$08,$0F,$04,$00,$04,$11,$04,$0F,$04
    289  eca4		       11 08 14 08*	      DC.B	$11,$08,$14,$08,$17,$08,$1A,$08
    290  ecac		       17 08 1a 08*	      DC.B	$17,$08,$1A,$08,$17,$08,$14,$08
    291  ecb4		       14 08 17 08*	      DC.B	$14,$08,$17,$08,$1A,$08,$1F,$08
    292  ecbc		       0b 08 1f 08*	      DC.B	$0B,$08,$1F,$08,$0B,$08,$0D,$08
    293  ecc4		       0b 08 0d 08*	      DC.B	$0B,$08,$0D,$08,$0F,$08,$11,$08,$14,$18,$FF
    294  eccf		       04 28 0d 18*	      DC.B	$04,$28,$0D,$18,$04,$20,$0D,$08,$04,$08,$0D,$10	;CTL
    295  ecdb		       04 28 0d 40*	      DC.B	$04,$28,$0D,$40,$04,$98,$0D,$08,$04,$08,$0D,$00
    296  ece7		       0c 00		      DC.B	$0C,$00	;					  ;VOL
    297  ece9
    298  ece9							;*  TUNE 3 - SECOND VOICE, FIRST ANIMATION
    299  ece9		       14 c0 1b 40 TANIM11    DC.B	$14,$C0,$1B,$40	;				  ;FREQ
    300  eced		       14 20 17 20*	      DC.B	$14,$20,$17,$20,$1A,$20,$1B,$20
    301  ecf5		       14 10 11 10	      DC.B	$14,$10,$11,$10
    302  ecf9		       0f 10 0d 10	      DC.B	$0F,$10,$0D,$10
    303  ecfd		       0b 08 0d 08*	      DC.B	$0B,$08,$0D,$08,$0F,$08,$11,$08,$14,$10,$FF
    304  ed08		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    305  ed0a		       00 08 09 08*	      DC.B	$00,$08,$09,$08,$00,$08,$09,$04,$00,$04	;VOL
    306  ed14		       09 10 00 18	      DC.B	$09,$10,$00,$18
    307  ed18		       09 08 00 08*	      DC.B	$09,$08,$00,$08,$09,$04,$00,$04
    308  ed20		       09 10 00 18	      DC.B	$09,$10,$00,$18
    309  ed24		       09 08 00 08*	      DC.B	$09,$08,$00,$08,$09,$04,$00,$04
    310  ed2c		       09 10 00 18	      DC.B	$09,$10,$00,$18
    311  ed30		       09 08 00 08*	      DC.B	$09,$08,$00,$08,$09,$04,$00,$04
    312  ed38		       09 10 00 10	      DC.B	$09,$10,$00,$10
    313  ed3c		       09 88 00 08*	      DC.B	$09,$88,$00,$08,$09,$08,$00,$08
    314  ed44		       09 08 00 08*	      DC.B	$09,$08,$00,$08,$09,$08,$00,$08,$09,$00
    315  ed4e
    316  ed4e							;*  TUNE 4 - FIRST VOICE, SECOND ANIMATION
    317  ed4e		       0b 06 1f 06*TANIM20A   DC.B	$0B,$06,$1F,$06,$1D,$06,$1B,$0C,$1D,$06,$1B,$06,$00,$06	;FREQ
    318  ed5c		       1b 06 1a 06*	      DC.B	$1B,$06,$1A,$06,$18,$06,$17,$0C,$18,$06,$17,$06,$00,$06
    319  ed6a		       0d 06 0f 06*	      DC.B	$0D,$06,$0F,$06,$11,$06,$13,$06
    320  ed72		       14 06 13 06*	      DC.B	$14,$06,$13,$06,$1F,$06,$1B,$06
    321  ed7a		       1a 18 00 0c*	      DC.B	$1A,$18,$00,$0C,$0B,$06,$00,$06
    322  ed82		       14 06 13 06*	      DC.B	$14,$06,$13,$06,$12,$06,$11,$06
    323  ed8a		       1a 06 17 06*	      DC.B	$1A,$06,$17,$06,$15,$06,$14,$06
    324  ed92		       1a 06 14 06*	      DC.B	$1A,$06,$14,$06,$1A,$06,$0B,$0C,$0C,$06,$0B,$06,$0C,$06
    325  eda0		       0b 18 1d 18*	      DC.B	$0B,$18,$1D,$18,$1B,$1E,$00,$12
    326  eda8		       13 06 14 06*	      DC.B	$13,$06,$14,$06,$1B,$06,$1A,$06
    327  edb0		       14 06 17 06*	      DC.B	$14,$06,$17,$06,$1F,$06,$1D,$06
    328  edb8		       1b 06 17 06*	      DC.B	$1B,$06,$17,$06,$0D,$06,$0F,$0C,$11,$06,$13,$06,$17,$06
    329  edc6		       1f 12 00 06*	      DC.B	$1F,$12,$00,$06,$0B,$12,$00,$06,$FD,$05
    330  edd0		       0d 06 04 ae*	      DC.B	$0D,$06,$04,$AE,$0D,$06,$04,$48,$0D,$36	;CTL
    331  edda		       04 c0 0d 12*	      DC.B	$04,$C0,$0D,$12,$04,$00
    332  ede0		       0c 00		      DC.B	$0C,$00	;					  ;VOL
    333  ede2
    334  ede2							;*  TUNE 5 - SECOND PART TO TUNE 4
    335  ede2		       14 06 13 06*TANIM20B   DC.B	$14,$06,$13,$06,$12,$06,$11,$06	;		  ;FREQ
    336  edea		       0b 06 1f 06*	      DC.B	$0B,$06,$1F,$06,$1D,$06,$1B,$06
    337  edf2		       14 06 13 06*	      DC.B	$14,$06,$13,$06,$12,$06,$11,$06
    338  edfa		       1a 06 17 06*	      DC.B	$1A,$06,$17,$06,$15,$06,$14,$06
    339  ee02		       1a 06 14 06*	      DC.B	$1A,$06,$14,$06,$1A,$06,$0B,$12,$0D,$06,$0B,$06
    340  ee0e		       1f 18 0a 18*	      DC.B	$1F,$18,$0A,$18,$1F,$24,$00,$0C
    341  ee16		       13 06 14 06*	      DC.B	$13,$06,$14,$06,$17,$06,$1A,$0C,$17,$06,$14,$06,$00,$06
    342  ee24		       14 06 17 06*	      DC.B	$14,$06,$17,$06,$1A,$06,$0B,$0C,$1A,$06,$1B,$06,$1F,$06
    343  ee32		       0b 18 1b 06*	      DC.B	$0B,$18,$1B,$06,$13,$06,$1F,$06,$1B,$06,$1A,$24,$FF
    344  ee3f		       04 18 0d 06*	      DC.B	$04,$18,$0D,$06,$04,$54,$0D,$1E	;		  ;CTL
    345  ee47		       04 18 0d 18*	      DC.B	$04,$18,$0D,$18,$04,$72,$0D,$0C,$04,$12
    346  ee51		       0d 18 04 00	      DC.B	$0D,$18,$04,$00
    347  ee55		       0c 00		      DC.B	$0C,$00	;					  ;VOL
    348  ee57
    349  ee57							;*  TUNE 6 - SECOND VOICE, SECOND ANIMATION
    350  ee57		       17 8a 14 03*TANIM21A   DC.B	$17,$8A,$14,$03,$12,$03	;			  ;FREQ
    351  ee5d		       11 0c 0d 0c*	      DC.B	$11,$0C,$0D,$0C,$17,$0C,$0D,$0C
    352  ee65		       11 0c 0d 0c*	      DC.B	$11,$0C,$0D,$0C,$17,$0C,$0D,$0C
    353  ee6d		       11 0c 0d 0c*	      DC.B	$11,$0C,$0D,$0C,$17,$0C,$0D,$0C
    354  ee75		       11 0c 0d 0c*	      DC.B	$11,$0C,$0D,$0C,$17,$0C,$0E,$0C
    355  ee7d		       0f 0c 0b 0c*	      DC.B	$0F,$0C,$0B,$0C,$17,$0C,$0B,$06,$0E,$06
    356  ee87		       0f 0c 0b 0c*	      DC.B	$0F,$0C,$0B,$0C,$17,$0C,$0B,$0C
    357  ee8f		       0f 0c 0b 0c*	      DC.B	$0F,$0C,$0B,$0C,$17,$0C,$0B,$0C,$FD,$07
    358  ee99		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    359  ee9b		       09 18 00 18*	      DC.B	$09,$18,$00,$18,$09,$18,$00,$18	;		  ;VOL
    360  eea3		       09 0c 00 0c*	      DC.B	$09,$0C,$00,$0C,$09,$0C,$00,$06,$09,$12
    361  eead		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    362  eeb5		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    363  eebd		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    364  eec5		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    365  eecd		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    366  eed5		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    367  eedd		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    368  eee5		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    369  eeed		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    370  eef5		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    371  eefd		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    372  ef05		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    373  ef0d		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    374  ef15		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    375  ef1d
    376  ef1d							;*  TUNE 7 - SECOND PART TO TUNE 6
    377  ef1d		       0f 18 17 18 TANIM21B   DC.B	$0F,$18,$17,$18	;				  ;FREQ
    378  ef21		       11 06 0f 06*	      DC.B	$11,$06,$0F,$06,$0E,$06,$0D,$12,$0F,$06,$17,$06
    379  ef2d		       11 0c 0d 0c*	      DC.B	$11,$0C,$0D,$0C,$17,$0C,$0D,$0C
    380  ef35		       11 0c 0d 0c*	      DC.B	$11,$0C,$0D,$0C,$17,$0C,$0D,$0C
    381  ef3d		       1a 0c 0f 0c*	      DC.B	$1A,$0C,$0F,$0C,$14,$0C,$0D,$0C
    382  ef45		       1a 0c 0f 0c*	      DC.B	$1A,$0C,$0F,$0C,$14,$0C,$17,$0C
    383  ef4d		       1a 30 17 30*	      DC.B	$1A,$30,$17,$30,$12,$18,$17,$18
    384  ef55		       11 0c 17 0c*	      DC.B	$11,$0C,$17,$0C,$11,$0C,$FF
    385  ef5c		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    386  ef5e		       09 06 00 12*	      DC.B	$09,$06,$00,$12,$09,$06,$00,$12	;		  ;VOL
    387  ef66		       09 18 00 06*	      DC.B	$09,$18,$00,$06,$09,$12
    388  ef6c		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    389  ef74		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    390  ef7c		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    391  ef84		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    392  ef8c		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    393  ef94		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    394  ef9c		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    395  efa4		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06
    396  efac		       09 06 00 1e*	      DC.B	$09,$06,$00,$1E,$09,$06,$00,$06
    397  efb4		       09 06 00 1e*	      DC.B	$09,$06,$00,$1E,$09,$06,$00,$12
    398  efbc		       09 06 00 12*	      DC.B	$09,$06,$00,$12,$09,$06,$00,$06
    399  efc4		       09 06 00 06*	      DC.B	$09,$06,$00,$06,$09,$06,$00,$06,$09,$06,$00,$06
    400  efd0
    401  efd0							;*  TUNE 8 - FIRST VOICE, THIRD ANIMATION
    402  efd0		       1b 0a 1d 0a*TANIM30    DC.B	$1B,$0A,$1D,$0A,$1B,$0A,$17,$14,$18,$0A,$17,$14	;FREQ
    403  efdc		       0b 0a 1f 0a*	      DC.B	$0B,$0A,$1F,$0A,$1D,$0A,$1B,$14,$1D,$0A,$1B,$14
    404  efe8		       14 0a 17 0a*	      DC.B	$14,$0A,$17,$0A,$14,$0A,$12,$14,$0D,$0A,$0F,$14
    405  eff4		       00 14 11 0a*	      DC.B	$00,$14,$11,$0A,$00,$1E,$11,$0A,$00,$0A
    406  effe		       00 0a 14 14*	      DC.B	$00,$0A,$14,$14,$17,$0A,$11,$0A,$FF
    407  f007		       04 50 0d 0a*	      DC.B	$04,$50,$0D,$0A,$04,$00	;			  ;CTL
    408  f00d		       0c 00		      DC.B	$0C,$00	;					  ;VOL
    409  f00f
    410  f00f							;*  TUNE 9 - SECOND VOICE, THIRD ANIMATION
    411  f00f		       0f 1e 12 14*TANIM31    DC.B	$0F,$1E,$12,$14,$0F,$0A,$10,$0A,$11,$0A	;FREQ
    412  f019		       12 1e 0f 14*	      DC.B	$12,$1E,$0F,$14,$17,$0A,$12,$0A,$0F,$0A
    413  f023		       11 1e 0f 1e*	      DC.B	$11,$1E,$0F,$1E,$11,$14
    414  f029		       12 3c 12 1e	      DC.B	$12,$3C,$12,$1E
    415  f02d		       11 14 0f 0a*	      DC.B	$11,$14,$0F,$0A,$12,$0A,$FF
    416  f034		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    417  f036		       09 0a 00 14*	      DC.B	$09,$0A,$00,$14,$09,$3C,$00,$14,$09,$3C	;VOL
    418  f040		       00 14 09 32*	      DC.B	$00,$14,$09,$32,$00,$14,$09,$0A,$00,$1E,$09,$0A
    419  f04c		       00 14 09 00	      DC.B	$00,$14,$09,$00
    420  f050
    421  f050							;*  TUNE A - BACKGROUND SOUND
    422  f050		       19 01 04 01*TBACKG     DC.B	$19,$01,$04,$01,$15,$01,$03,$01	;		  ;FREQ
    423  f058		       11 01 02 01*	      DC.B	$11,$01,$02,$01,$0C,$01,$01,$01,$FE
    424  f061		       04 00		      DC.B	$04,$00	;					  ;CTL
    425  f063		       04 00		      DC.B	$04,$00	;					  ;VOL
    426  f065
    427  f065							;*  TUNE B - FRUIT BOUNCE
    428  f065		       1f 06 ff    TFRTBNC    DC.B	$1F,$06,$FF	;				      ;FREQ
    429  f068		       0f 00		      DC.B	$0F,$00	;					  ;CTL
    430  f06a		       0c 00		      DC.B	$0C,$00	;					  ;VOL
    431  f06c
    432  f06c							;*  TUNE C - PAC DEATH
    433  f06c		       18 02 19 02*TPACDTH    DC.B	$18,$02,$19,$02,$1A,$02,$1B,$02	;		  ;FREQ
    434  f074		       1c 02 1d 02*	      DC.B	$1C,$02,$1D,$02,$1E,$02,$1F,$02
    435  f07c		       1c 02 1d 02*	      DC.B	$1C,$02,$1D,$02,$1E,$02,$1F,$02
    436  f084		       0a 02 0b 02*	      DC.B	$0A,$02,$0B,$02,$0C,$02,$0D,$02
    437  f08c		       0a 02 0b 02*	      DC.B	$0A,$02,$0B,$02,$0C,$02,$0D,$02
    438  f094		       0e 02 0f 02*	      DC.B	$0E,$02,$0F,$02,$10,$02,$11,$02
    439  f09c		       0e 02 0f 02*	      DC.B	$0E,$02,$0F,$02,$10,$02,$11,$02
    440  f0a4		       12 02 13 02*	      DC.B	$12,$02,$13,$02,$14,$02,$15,$02
    441  f0ac		       12 02 13 02*	      DC.B	$12,$02,$13,$02,$14,$02,$15,$02
    442  f0b4		       16 02 17 02*	      DC.B	$16,$02,$17,$02,$18,$02,$19,$02,$FF
    443  f0bd		       04 18 0d 00	      DC.B	$04,$18,$0D,$00	;				  ;CTL
    444  f0c1		       0c 04 0b 04*	      DC.B	$0C,$04,$0B,$04,$0A,$04,$09,$04	;		  ;VOL
    445  f0c9		       0b 04 0a 04*	      DC.B	$0B,$04,$0A,$04,$09,$04,$08,$04
    446  f0d1		       0a 04 09 04*	      DC.B	$0A,$04,$09,$04,$08,$04,$07,$04
    447  f0d9		       09 04 08 04*	      DC.B	$09,$04,$08,$04,$07,$04,$06,$04
    448  f0e1		       08 04 07 04*	      DC.B	$08,$04,$07,$04,$06,$04,$05,$04
    449  f0e9
    450  f0e9							;* SOUND D - ENERGIZE SOUND
    451  f0e9		       1f 02 1e 02*TENERGA    DC.B	$1F,$02,$1E,$02,$1D,$02,$1C,$02	;		  ;FREQ
    452  f0f1		       1f 02 1e 02*	      DC.B	$1F,$02,$1E,$02,$1D,$02,$1C,$02
    453  f0f9		       1e 02 1d 02*	      DC.B	$1E,$02,$1D,$02,$1C,$02,$1B,$02
    454  f101		       1d 02 1c 02*	      DC.B	$1D,$02,$1C,$02,$1B,$02,$1A,$02
    455  f109		       1c 02 1b 02*	      DC.B	$1C,$02,$1B,$02,$1A,$02,$19,$02
    456  f111		       1b 02 1a 02*	      DC.B	$1B,$02,$1A,$02,$19,$02,$18,$02
    457  f119		       1a 02 19 02*	      DC.B	$1A,$02,$19,$02,$18,$02,$17,$02
    458  f121		       19 02 18 02*	      DC.B	$19,$02,$18,$02,$17,$02,$16,$02
    459  f129		       18 02 17 02*	      DC.B	$18,$02,$17,$02,$16,$02,$15,$02
    460  f131		       17 02 16 02*	      DC.B	$17,$02,$16,$02,$15,$02,$14,$02
    461  f139		       16 02 15 02*	      DC.B	$16,$02,$15,$02,$14,$02,$13,$02
    462  f141		       15 02 14 02*	      DC.B	$15,$02,$14,$02,$13,$02,$12,$02,$FD,$0E
    463  f14b		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    464  f14d		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02	;		  ;VOL
    465  f155		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    466  f15d		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    467  f165		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    468  f16d		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    469  f175		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    470  f17d		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    471  f185		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    472  f18d		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    473  f195		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    474  f19d		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    475  f1a5		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    476  f1ad
    477  f1ad							;*  TUNE E - SECOND PART OF TUNE D
    478  f1ad		       14 02 13 02*TENERGB    DC.B	$14,$02,$13,$02,$12,$02,$11,$02
    479  f1b5		       13 02 12 02*	      DC.B	$13,$02,$12,$02,$11,$02,$10,$02
    480  f1bd		       12 02 11 02*	      DC.B	$12,$02,$11,$02,$10,$02,$0F,$02
    481  f1c5		       11 02 10 02*	      DC.B	$11,$02,$10,$02,$0F,$02,$0E,$02
    482  f1cd		       10 02 0f 02*	      DC.B	$10,$02,$0F,$02,$0E,$02,$0D,$02
    483  f1d5		       0f 02 0e 02*	      DC.B	$0F,$02,$0E,$02,$0D,$02,$0C,$02
    484  f1dd		       0e 02 0d 02*	      DC.B	$0E,$02,$0D,$02,$0C,$02,$0B,$02
    485  f1e5		       0d 02 0c 02*	      DC.B	$0D,$02,$0C,$02,$0B,$02,$0A,$02
    486  f1ed		       0c 02 0b 02*	      DC.B	$0C,$02,$0B,$02,$0A,$02,$09,$02
    487  f1f5		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02,$FD,$0F
    488  f1ff		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    489  f201		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02	;		  ;VOL
    490  f209		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    491  f211		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    492  f219		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    493  f221		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    494  f229		       0b 02 0a 02*	      DC.B	$0B,$02,$0A,$02,$09,$02,$08,$02
    495  f231		       0a 02 09 02*	      DC.B	$0A,$02,$09,$02,$08,$02,$07,$02
    496  f239		       09 02 08 02*	      DC.B	$09,$02,$08,$02,$07,$02,$06,$02
    497  f241		       08 02 07 02*	      DC.B	$08,$02,$07,$02,$06,$02,$05,$02
    498  f249		       07 02 06 02*	      DC.B	$07,$02,$06,$02,$05,$02,$04,$02
    499  f251
    500  f251							;* SOUND F - THIRD PART OF SOUND D
    501  f251		       09 02 08 02*TENERGC    DC.B	$09,$02,$08,$02,$07,$02,$06,$02,$FE	;	      ;FREQ
    502  f25a		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    503  f25c		       05 00		      DC.B	$05,$00	;					  ;VOL
    504  f25e
    505  f25e							;* SOUND 10 - MUNCH SOUND
    506  f25e		       18 01 14 01*TMUNCH     DC.B	$18,$01,$14,$01,$12,$01,$FF	;		      ;FREQ
    507  f265		       0d 01 04 01*	      DC.B	$0D,$01,$04,$01,$0D,$01,$04,$01,$0D,$01,$04,$01	;CTL
    508  f271		       08 00		      DC.B	$08,$00	;					  ;VOL
    509  f273
    510  f273							;* SOUND 11 - EAT MONSTER
    511  f273		       18 02 17 02*TEATMON    DC.B	$18,$02,$17,$02,$16,$04	;			  ;FREQ
    512  f279		       15 02 14 02*	      DC.B	$15,$02,$14,$02,$13,$04
    513  f27f		       13 01 12 01*	      DC.B	$13,$01,$12,$01,$11,$01,$10,$01
    514  f287		       0f 01 0e 01*	      DC.B	$0F,$01,$0E,$01,$0D,$01,$0C,$01,$0B,$01,$FF
    515  f292		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    516  f294		       0a 01 09 01*	      DC.B	$0A,$01,$09,$01,$08,$01,$07,$01,$06,$02,$00,$02	;VOL
    517  f2a0		       0a 01 09 01*	      DC.B	$0A,$01,$09,$01,$08,$01,$07,$01,$06,$02,$00,$02
    518  f2ac		       0a 02 09 02*	      DC.B	$0A,$02,$09,$02,$08,$01,$07,$01,$06,$02
    519  f2b6
    520  f2b6							;* SOUND 12 - EAT FRUIT
    521  f2b6		       0d 01 0e 01*TEATFRT    DC.B	$0D,$01,$0E,$01,$0D,$01,$0E,$01	;		  ;FREQ
    522  f2be		       0f 01 10 01*	      DC.B	$0F,$01,$10,$01,$11,$01,$12,$01
    523  f2c6		       13 01 14 02*	      DC.B	$13,$01,$14,$02,$13,$01
    524  f2cc		       12 01 11 01*	      DC.B	$12,$01,$11,$01,$10,$01,$0F,$01
    525  f2d4		       0e 01 0d 01*	      DC.B	$0E,$01,$0D,$01,$0C,$01,$0B,$01,$FF
    526  f2dd		       0d 00		      DC.B	$0D,$00	;					  ;CTL
    527  f2df		       08 02 07 02*	      DC.B	$08,$02,$07,$02,$06,$02,$04,$04	;		  ;VOL
    528  f2e7		       06 02 07 02*	      DC.B	$06,$02,$07,$02,$08,$00
    529  f2ed
    530  f2ed							;* SOUND 13 - EYES
    531  f2ed		       12 01 00 01*TEYES      DC.B	$12,$01,$00,$01,$11,$01,$00,$01,$10,$01	;FREQ
    532  f2f7		       00 01 0e 01*	      DC.B	$00,$01,$0E,$01,$00,$01,$0C,$01,$00,$01,$FE
    533  f302		       04 00		      DC.B	$04,$00	;					  ;CTL
    534  f304		       08 00		      DC.B	$08,$00	;					  ;VOL
    535  f306
    536  f306							;* SOUND 14 - DING DING (BONUS LIFE)
    537  f306		       0a 50 ff    TBONUS     DC.B	$0A,$50,$FF	;				      ;FREQ
    538  f309		       04 00		      DC.B	$04,$00	;					  ;CTL
    539  f30b		       0c 05 00 05*	      DC.B	$0C,$05,$00,$05,$0C,$05,$00,$05
    540  f313		       0c 05 00 05*	      DC.B	$0C,$05,$00,$05,$0C,$05,$00,$05
    541  f31b		       0b 05 00 05*	      DC.B	$0B,$05,$00,$05,$0A,$05,$00,$05
    542  f323		       09 05 00 05*	      DC.B	$09,$05,$00,$05,$08,$05,$00,$05
    543  f32b							; END
------- FILE MDOIT.ASM
     66  f32c		       00		      align	2
------- FILE KERNAL.ASM LEVEL 2 PASS 2
      0  f32c					      include	"KERNAL.ASM"
      1  f32c					      processor	6502
      2  f32c
      3  f32c							;* KERNAL	    THE KERNAL AND LOADER FOR MARIA MS PAC-MAN
      4  f32c
      5  f32c
      6  f32c							;*  THIS IS THE DLI FOR THE FRUIT - CHANGES COLORS FOR FRUIT
      7  f32c		       a9 32	   DLIFRUIT   LDA	#RED	;		     ;ADJUST COLORS FOR FRUIT PALETTES
      8  f32e		       85 2d		      STA	Z3C1
      9  f330		       85 31		      STA	Z4C1
     10  f332		       a9 0c		      LDA	#WHITE
     11  f334		       85 2e		      STA	Z3C2
     12  f336		       85 32		      STA	Z4C2
     13  f338		       85 3a		      STA	Z6C2
     14  f33a		       a9 35		      LDA	#ORANGE
     15  f33c		       85 35		      STA	Z5C1
     16  f33e		       a9 15		      LDA	#BROWN	;		   ;ADJUST COLORS FOR FRUIT PALETTES
     17  f340		       85 2f		      STA	Z3C3
     18  f342		       85 36		      STA	Z5C2
     19  f344		       85 3b		      STA	Z6C3
     20  f346		       a9 e7		      LDA	#GREEN	;		   ;ADJUST COLORS FOR FRUIT PALETTES
     21  f348		       85 33		      STA	Z4C3
     22  f34a		       85 37		      STA	Z5C3
     23  f34c		       85 39		      STA	Z6C1
     24  f34e		       a9 1e		      LDA	#YELLOW	;		  ;MAKE SURE BANANA AND MS GET RIGHT CLR
     25  f350		       85 25		      STA	Z1C1
     26  f352		       85 3d		      STA	Z7C1
     27  f354
     28  f354		       a9 00		      LDA	#$00	;		     ;SET "VBLANK" TO HAPPEN NEXT
     29  f356		       85 54		      STA	KNLTEMP0
     30  f358		       4c 27 f4 	      JMP	DLIOUT
     31  f35b
     32  f35b
     33  f35b							;*  MAINTAIN THE ON-SCREEN DISPLAY
     34  f35b		       48	   DLI	      PHA		;			      ;STACK REGISTERS
     35  f35c		       8a		      TXA
     36  f35d		       48		      PHA
     37  f35e
     38  f35e		       a5 54		      LDA	KNLTEMP0	;		 ;SEE WHAT DLI HANDLER TO GO TO
     39  f360		       f0 51		      BEQ	OTHERDLI
     40  f362		       30 58		      BMI	TOPDLIS
     41  f364		       a6 55		      LDX	KNLTEMP1	;		 ;"NORMAL" DLI, SEE WHICH ZONE
     42  f366		       e0 1e		      CPX	#LASTZONE
     43  f368		       10 c2		      BPL	DLIFRUIT	;		 ;IF ZONES FINISHED, THEN SET FRUIT CLR
     44  f36a		       8a		      TXA
     45  f36b		       29 01		      AND	#$01
     46  f36d		       f0 0f		      BEQ	DLI0
     47  f36f		       4c cc f3 	      JMP	DLI1
     48  f372
     49  f372
     50  f372							;*  THIS IS THE DLI FOR THE SCORE
     51  f372		       a9 0c	   DLISCORE   LDA	#WHITE	;		   ;SET UP SCORE COLORS
     52  f374		       85 23		      STA	Z0C3
     53  f376		       a9 35		      LDA	#ORANGE
     54  f378		       85 22		      STA	Z0C2
     55  f37a		       a9 00		      LDA	#BLACK
     56  f37c		       85 20		      STA	BACKGRND
     57  f37e
     58  f37e
     59  f37e							;*  THIS ROUTINE TAKES CARE OF DLI HANDLERS WHERE THE OTHER DISPLAY LIST IS
     60  f37e							;*  MODIFIED WHILE THE CURRENT DISPLAY LIST IS BEING USED
     61  f37e		       bd 80 1e    DLI0       LDA	M0ADDR,X	;		 ;UPDATE MONSTER 0 STAMP
     62  f381		       8d 0d 1f 	      STA	DLIST0+$0D
     63  f384		       bd a0 1e 	      LDA	M1ADDR,X	;		 ;UPDATE MONSTER 1 STAMP
     64  f387		       8d 11 1f 	      STA	DLIST0+$11
     65  f38a		       bd c0 1e 	      LDA	M2ADDR,X	;		 ;UPDATE MONSTER 2 STAMP
     66  f38d		       8d 15 1f 	      STA	DLIST0+$15
     67  f390		       bd e0 1e 	      LDA	M3ADDR,X	;		 ;UPDATE MONSTER 3 STAMP
     68  f393		       8d 19 1f 	      STA	DLIST0+$19
     69  f396		       bd 3a f5 	      LDA	SCRLOW,X	;		 ;UPDATE PLAY FIELD LOW ADDR
     70  f399		       8d 00 1f 	      STA	DLIST0+$00
     71  f39c		       bd 59 f5 	      LDA	SCRHI,X	;		  ;UPDATE PLAY FIELD HI ADDR
     72  f39f		       8d 02 1f 	      STA	DLIST0+$02
     73  f3a2		       bd 40 1e 	      LDA	MSADDR,X	;		 ;UPDATE MS STAMP
     74  f3a5		       8d 05 1f 	      STA	DLIST0+$05
     75  f3a8		       bd 60 1e 	      LDA	FRTADDR,X	;		;UPDATE FRUIT STAMP
     76  f3ab		       8d 09 1f 	      STA	DLIST0+$09
     77  f3ae		       e6 55		      INC	KNLTEMP1
     78  f3b0		       4c 27 f4 	      JMP	DLIOUT
     79  f3b3
     80  f3b3
     81  f3b3							;*  THIS HANDLES THE "ODD-BALL" DLIS, VBLANK AND NULL
     82  f3b3		       a6 55	   OTHERDLI   LDX	KNLTEMP1	;		 ;SEE WHAT TO DO
     83  f3b5		       f0 02		      BEQ	DLIWAIT	;		  ;IF ZERO, THEN "VERTICAL BLANK"
     84  f3b7		       10 48		      BPL	DLILAST	;		  ;IF NEGATIVE, WE ARE WAITING FOR SYNC
     85  f3b9
     86  f3b9		       4c 27 f4    DLIWAIT    JMP	DLIOUT	;		   ;WAITING FOR DLI"S TO SYNC
     87  f3bc
     88  f3bc
     89  f3bc							;*  THIS TAKES CARE OF DLIS ON THE TOP OF THE SCREEN
     90  f3bc		       a6 55	   TOPDLIS    LDX	KNLTEMP1
     91  f3be		       f0 b2		      BEQ	DLISCORE
     92  f3c0
     93  f3c0		       a9 01		      LDA	#$01	;		     ;SET UP FOR NORMAL DLIS
     94  f3c2		       85 54		      STA	KNLTEMP0
     95  f3c4		       a5 83		      LDA	P0C3	;		     ;RESTORE PLAYFIELD COLORS
     96  f3c6		       85 23		      STA	Z0C3
     97  f3c8		       a5 82		      LDA	P0C2
     98  f3ca		       85 22		      STA	Z0C2
     99  f3cc
    100  f3cc
    101  f3cc							;*  THIS IS THE NORMAL DLI TO SET UP FOR ODD ZONES
    102  f3cc		       bd 80 1e    DLI1       LDA	M0ADDR,X	;		 ;UPDATE MONSTER 0 STAMP
    103  f3cf		       8d 66 1f 	      STA	DLIST1+$0D
    104  f3d2		       bd a0 1e 	      LDA	M1ADDR,X	;		 ;UPDATE MONSTER 1 STAMP
    105  f3d5		       8d 6a 1f 	      STA	DLIST1+$11
    106  f3d8		       bd c0 1e 	      LDA	M2ADDR,X	;		 ;UPDATE MONSTER 2 STAMP
    107  f3db		       8d 6e 1f 	      STA	DLIST1+$15
    108  f3de		       bd e0 1e 	      LDA	M3ADDR,X	;		 ;UPDATE MONSTER 3 STAMP
    109  f3e1		       8d 72 1f 	      STA	DLIST1+$19
    110  f3e4		       bd 3a f5 	      LDA	SCRLOW,X	;		 ;UPDATE PLAY FIELD LOW ADDR
    111  f3e7		       8d 59 1f 	      STA	DLIST1+$00
    112  f3ea		       bd 59 f5 	      LDA	SCRHI,X	;		  ;UPDATE PLAY FIELD HI ADDR
    113  f3ed		       8d 5b 1f 	      STA	DLIST1+$02
    114  f3f0		       bd 40 1e 	      LDA	MSADDR,X	;		 ;UPDATE MS STAMP
    115  f3f3		       8d 5e 1f 	      STA	DLIST1+$05
    116  f3f6		       bd 60 1e 	      LDA	FRTADDR,X	;		;UPDATE FRUIT STAMP
    117  f3f9		       8d 62 1f 	      STA	DLIST1+$09
    118  f3fc		       e6 55		      INC	KNLTEMP1
    119  f3fe		       4c 27 f4 	      JMP	DLIOUT
    120  f401
    121  f401
    122  f401							;*  THIS ROUTINE TAKES CARE OF THE LAST DLI ON THE SCREEN, THE "VERTICAL BLANK
    123  f401							;*  ROUTINE".
    124  f401		       a9 00	   DLILAST    LDA	#$00
    125  f403		       85 55		      STA	KNLTEMP1	;		 ;TURN DLI"S OFF TILL WE ARE DONE
    126  f405		       85 cf		      STA	LDRTEMP7	;		 ;NO NOTICES OF VBLANK YET
    127  f407		       98		      TYA		;			      ;WE NEED TO STACK Y
    128  f408		       48		      PHA
    129  f409
    130  f409		       20 13 f5 	      JSR	RAND	;		     ;UPDATE RANDOM NUMBER
    131  f40c		       20 2b f4 	      JSR	LOADER	;		   ;LOAD UP NEXT FRAME
    132  f40f
    133  f40f		       e6 a1		      INC	RTLOCAL+1	;		;INCREMENT CLOCK
    134  f411		       d0 02		      BNE	DLITUNE
    135  f413		       e6 a0		      INC	RTLOCAL
    136  f415
    137  f415		       20 9f ea    DLITUNE    JSR	TUNER	;		    ;DO TUNES
    138  f418
    139  f418		       a5 cf		      LDA	LDRTEMP7	;		 ;IS VBLANK STARTED YET?
    140  f41a		       d0 04		      BNE	DLLCOLOR
    141  f41c		       24 28	   DLLWAIT    BIT	MSTAT	;		    ;IF NOT, BUSY WAIT
    142  f41e		       10 fc		      BPL	DLLWAIT
    143  f420
    144  f420		       20 22 f5    DLLCOLOR   JSR	GETCOLOR	;		 ;UPDATE PALETTES
    145  f423
    146  f423		       c6 54		      DEC	KNLTEMP0	;		 ;SET SCORE DLI TO HAPPEN NEXT
    147  f425
    148  f425		       68		      PLA		;			      ;UNSTACK AND LEAVE
    149  f426		       a8		      TAY
    150  f427		       68	   DLIOUT     PLA		;			      ;THIS IS WHERE MOST DLI"S LEAVE
    151  f428		       aa		      TAX
    152  f429		       68		      PLA
    153  f42a		       40	   NULLRTI    RTI
    154  f42b
    155  f42b
    156  f42b							;*  UPDATE BASE HEADER INFORMATION FOR NEXT RUN OF KERNAL
    157  f42b		       a2 05	   LOADER     LDX	#$05
    158  f42d		       b5 74	   LUPDATLP   LDA	DOLIST,X	;		 ;SEE IF ANYTHING TO DO
    159  f42f		       d0 03		      BNE	LULBODY
    160  f431		       4c 06 f5 	      JMP	LULNEXT
    161  f434
    162  f434		       8a	   LULBODY    TXA
    163  f435		       0a		      ASL
    164  f436		       0a		      ASL
    165  f437		       a8		      TAY		;			      ;Y = 4;*X
    166  f438		       b5 56		      LDA	HPLIST,X	;		 ;UPDATE HPOS
    167  f43a		       99 08 1f 	      STA	DLIST0+8,Y
    168  f43d		       99 61 1f 	      STA	DLIST1+8,Y
    169  f440
    170  f440		       bd 7e f5 	      LDA	STDATALO,X	;	       ;GET RID OF OLD STAMP DATA
    171  f443		       85 c8		      STA	LDRTEMP0
    172  f445		       bd 84 f5 	      LDA	STDATAHI,X
    173  f448		       85 c9		      STA	LDRTEMP1
    174  f44a		       a9 00		      LDA	#$00
    175  f44c		       b4 7a		      LDY	OLDZONE,X
    176  f44e		       91 c8		      STA	(LDRTEMP0),Y
    177  f450		       c8		      INY
    178  f451		       91 c8		      STA	(LDRTEMP0),Y
    179  f453		       c8		      INY
    180  f454		       91 c8		      STA	(LDRTEMP0),Y
    181  f456
    182  f456		       b5 5c		      LDA	VZLIST,X	;		 ;PUT IN THE NEW STAMP DATA
    183  f458		       95 7a		      STA	OLDZONE,X	;		;SAVE AWAY WHERE IT IS
    184  f45a		       a8		      TAY
    185  f45b		       bd 78 f5 	      LDA	STAMPOFF,X
    186  f45e		       91 c8		      STA	(LDRTEMP0),Y
    187  f460		       c8		      INY
    188  f461		       18		      CLC
    189  f462		       69 02		      ADC	#$02
    190  f464		       91 c8		      STA	(LDRTEMP0),Y
    191  f466		       c8		      INY
    192  f467		       18		      CLC
    193  f468		       69 02		      ADC	#$02
    194  f46a		       91 c8		      STA	(LDRTEMP0),Y
    195  f46c
    196  f46c		       a9 00		      LDA	#<STAMPS	;	       ;AND NOW, UPDATE THE STAMPS
    197  f46e		       18		      CLC
    198  f46f		       7d 78 f5 	      ADC	STAMPOFF,X
    199  f472		       85 c8		      STA	LDRTEMP0	;		 ;(LDRTEMP0) IS THE OUTPUT
    200  f474		       b5 68		      LDA	SLLIST,X	;		 ;(LDRTEMP2) IS THE INPUT
    201  f476		       85 ca		      STA	LDRTEMP2
    202  f478		       b5 6e		      LDA	SHLIST,X
    203  f47a		       85 cb		      STA	LDRTEMP3
    204  f47c		       b5 62		      LDA	VOLIST,X	;		 ;FIND THE OFFSET - HOW MANY LEADING 0"S
    205  f47e		       85 cd		      STA	LDRTEMP5
    206  f480		       85 ce		      STA	LDRTEMP6
    207  f482		       86 cc		      STX	LDRTEMP4	;		 ;STORE X
    208  f484
KERNAL.ASM (209): error: Value in 'lda #>STAMPS+$500' must be <$100.
    209  f484		       a9 22		      LDA	#>STAMPS+$500	;RESET OUTPUT POINTER TO BEGINNING
    210  f486		       85 c9		      STA	LDRTEMP1
    211  f488		       a2 05		      LDX	#$05
    212  f48a		       a0 00	   LSLOOP0    LDY	#$00
    213  f48c		       c6 cd		      DEC	LDRTEMP5	;		 ;SEE IF ANY STARTING BLANK PADDING
    214  f48e		       30 09		      BMI	LSLJMP00
    215  f490		       98		      TYA		;			      ;BLANK PADDING
    216  f491		       91 c8		      STA	(LDRTEMP0),Y
    217  f493		       c8		      INY
    218  f494		       91 c8		      STA	(LDRTEMP0),Y
    219  f496		       4c aa f4 	      JMP	LDLJMP01
    220  f499		       b1 ca	   LSLJMP00   LDA	(LDRTEMP2),Y	;	     ;GET DATA
    221  f49b		       91 c8		      STA	(LDRTEMP0),Y
    222  f49d		       c8		      INY
    223  f49e		       b1 ca		      LDA	(LDRTEMP2),Y	;	     ;GET DATA
    224  f4a0		       91 c8		      STA	(LDRTEMP0),Y
    225  f4a2		       e6 ca		      INC	LDRTEMP2	;		 ;INCREASE LDRTEMP2 BY 2
    226  f4a4		       e6 ca		      INC	LDRTEMP2
    227  f4a6		       d0 02		      BNE	LDLJMP01	;		 ;SEE IF PAGE BOUNDARY
    228  f4a8		       e6 cb		      INC	LDRTEMP3
    229  f4aa		       c6 c9	   LDLJMP01   DEC	LDRTEMP1	;		 ;INCREASE LDRTEMP0 BY 1 PAGE
    230  f4ac		       ca		      DEX
    231  f4ad		       10 db		      BPL	LSLOOP0
    232  f4af
    233  f4af		       e6 c8		      INC	LDRTEMP0	;		 ;MOVE TO NEXT STAMP
    234  f4b1		       e6 c8		      INC	LDRTEMP0
KERNAL.ASM (235): error: Value in 'lda #>STAMPS+$500' must be <$100.
    235  f4b3		       a9 22		      LDA	#>STAMPS+$500	;RESET OUTPUT POINTER TO BEGINNING
    236  f4b5		       85 c9		      STA	LDRTEMP1
    237  f4b7		       a2 05		      LDX	#$05
    238  f4b9		       a0 00	   LSLOOP1    LDY	#$00
    239  f4bb		       b1 ca		      LDA	(LDRTEMP2),Y	;	     ;GET DATA
    240  f4bd		       91 c8		      STA	(LDRTEMP0),Y
    241  f4bf		       c8		      INY
    242  f4c0		       b1 ca		      LDA	(LDRTEMP2),Y	;	     ;GET DATA
    243  f4c2		       91 c8		      STA	(LDRTEMP0),Y
    244  f4c4		       e6 ca		      INC	LDRTEMP2	;		 ;INCREASE LDRTEMP2 BY 2
    245  f4c6		       e6 ca		      INC	LDRTEMP2
    246  f4c8		       d0 02		      BNE	LDLPAGE1	;		 ;SEE IF PAGE BOUNDARY
    247  f4ca		       e6 cb		      INC	LDRTEMP3
    248  f4cc		       c6 c9	   LDLPAGE1   DEC	LDRTEMP1	;		 ;INCREASE LDRTEMP0 BY 1 PAGE
    249  f4ce		       ca		      DEX
    250  f4cf		       10 e8		      BPL	LSLOOP1
    251  f4d1
    252  f4d1		       e6 c8		      INC	LDRTEMP0	;		 ;MOVE TO NEXT STAMP
    253  f4d3		       e6 c8		      INC	LDRTEMP0
KERNAL.ASM (254): error: Value in 'lda #>STAMPS+$500' must be <$100.
    254  f4d5		       a9 22		      LDA	#>STAMPS+$500	;RESET OUTPUT POINTER TO BEGINNING
    255  f4d7		       85 c9		      STA	LDRTEMP1
    256  f4d9		       a2 05		      LDX	#$05
    257  f4db		       a0 00	   LSLOOP2    LDY	#$00
    258  f4dd		       c6 ce		      DEC	LDRTEMP6	;		 ;SEE IF TIME FOR ANY ENDING BLANKS
    259  f4df		       10 09		      BPL	LSLJMP20
    260  f4e1		       98		      TYA		;			      ;BLANK PADDING
    261  f4e2		       91 c8		      STA	(LDRTEMP0),Y
    262  f4e4		       c8		      INY
    263  f4e5		       91 c8		      STA	(LDRTEMP0),Y
    264  f4e7		       4c fb f4 	      JMP	LSLJMP21
    265  f4ea		       b1 ca	   LSLJMP20   LDA	(LDRTEMP2),Y	;	     ;GET DATA
    266  f4ec		       91 c8		      STA	(LDRTEMP0),Y
    267  f4ee		       c8		      INY
    268  f4ef		       b1 ca		      LDA	(LDRTEMP2),Y	;	     ;GET DATA
    269  f4f1		       91 c8		      STA	(LDRTEMP0),Y
    270  f4f3		       e6 ca		      INC	LDRTEMP2	;		 ;INCREASE LDRTEMP2 BY 2
    271  f4f5		       e6 ca		      INC	LDRTEMP2
    272  f4f7		       d0 02		      BNE	LSLJMP21	;		 ;SEE IF PAGE BOUNDARY
    273  f4f9		       e6 cb		      INC	LDRTEMP3
    274  f4fb		       c6 c9	   LSLJMP21   DEC	LDRTEMP1	;		 ;INCREASE LDRTEMP0 BY 1 PAGE
    275  f4fd		       ca		      DEX
    276  f4fe		       10 db		      BPL	LSLOOP2
    277  f500
    278  f500		       a6 cc		      LDX	LDRTEMP4
    279  f502		       a9 00		      LDA	#$00
    280  f504		       95 74		      STA	DOLIST,X	;		 ;DON"T DO SAME AGAIN - Y IS STILL 0
    281  f506
    282  f506		       24 28	   LULNEXT    BIT	MSTAT	;		    ;SEE IF VBLANK STARTED YET
    283  f508		       10 02		      BPL	LULNJMP
    284  f50a		       e6 cf		      INC	LDRTEMP7	;		 ;STARTED
    285  f50c		       ca	   LULNJMP    DEX
    286  f50d		       30 03		      BMI	LULOUT
    287  f50f		       4c 2d f4 	      JMP	LUPDATLP
    288  f512		       60	   LULOUT     RTS
    289  f513
    290  f513
    291  f513							;*  RANDOM NUMBER GENERATOR - BOTH MAKES A NEW ONE AND LEAVES IT IN A
    292  f513		       65 a1	   RAND       ADC	RTLOCAL+1	;		;MAKE A PRETTY RANDOM VALUE
    293  f515		       65 43		      ADC	NEWRAND
    294  f517		       65 44		      ADC	OLDRAND
    295  f519		       48		      PHA
    296  f51a		       a5 43		      LDA	NEWRAND	;		  ;BACK UP NEWRAND
    297  f51c		       85 44		      STA	OLDRAND
    298  f51e		       68		      PLA
    299  f51f		       85 43		      STA	NEWRAND	;		  ;NEW VALUE - LEFT IN A
    300  f521		       60		      RTS
    301  f522
    302  f522
    303  f522							;*  THIS ROUTINE HITS THE PALETTES EVERY FRAME
    304  f522		       a2 02	   GETCOLOR   LDX	#$02
    305  f524		       a0 07		      LDY	#$07
    306  f526		       b5 7f	   GCLOOP     LDA	P0C1-2,X
    307  f528		       95 1f		      STA	Z0C1-2,X
    308  f52a		       e8		      INX
    309  f52b		       b5 7f		      LDA	P0C1-2,X
    310  f52d		       95 1f		      STA	Z0C1-2,X
    311  f52f		       e8		      INX
    312  f530		       b5 7f		      LDA	P0C1-2,X
    313  f532		       95 1f		      STA	Z0C1-2,X
    314  f534		       e8		      INX
    315  f535		       e8		      INX
    316  f536		       88		      DEY
    317  f537		       10 ed		      BPL	GCLOOP
    318  f539		       60		      RTS
    319  f53a
    320  f53a
    321  f53a							;*  TABLE OF LOW AND HI BYTES OF PLAYFIELD ADDRESSES FOR ZONES
    322  f53a		       00 1c 38 54*SCRLOW     DC.B	$00,$1C,$38,$54,$70,$8C,$A8,$C4
    323  f542		       e0 fc 18 34*	      DC.B	$E0,$FC,$18,$34,$50,$6C,$88,$A4
    324  f54a		       c0 dc f8 14*	      DC.B	$C0,$DC,$F8,$14,$30,$4C,$68,$84
    325  f552		       a0 bc d8 f4*	      DC.B	$A0,$BC,$D8,$F4,$10,$2C,$48
    326  f559		       18 18 18 18 SCRHI      DC.B	>SCREEN+$000,>SCREEN+$000,>SCREEN+$000,>SCREEN+$000
    327  f55d		       18 18 18 18	      DC.B	>SCREEN+$000,>SCREEN+$000,>SCREEN+$000,>SCREEN+$000
KERNAL.ASM (328): error: Value in 'byte dc 280' must be <$100.
KERNAL.ASM (328): error: Value in 'byte dc 280' must be <$100.
    328  f561		       18 18 18 18	      DC.B	>SCREEN+$000,>SCREEN+$000,>SCREEN+$100,>SCREEN+$100
KERNAL.ASM (329): error: Value in 'byte dc 280' must be <$100.
KERNAL.ASM (329): error: Value in 'byte dc 280' must be <$100.
KERNAL.ASM (329): error: Value in 'byte dc 280' must be <$100.
KERNAL.ASM (329): error: Value in 'byte dc 280' must be <$100.
    329  f565		       18 18 18 18	      DC.B	>SCREEN+$100,>SCREEN+$100,>SCREEN+$100,>SCREEN+$100
KERNAL.ASM (330): error: Value in 'byte dc 280' must be <$100.
KERNAL.ASM (330): error: Value in 'byte dc 280' must be <$100.
KERNAL.ASM (330): error: Value in 'byte dc 280' must be <$100.
KERNAL.ASM (330): error: Value in 'byte dc 536' must be <$100.
    330  f569		       18 18 18 18	      DC.B	>SCREEN+$100,>SCREEN+$100,>SCREEN+$100,>SCREEN+$200
KERNAL.ASM (331): error: Value in 'byte dc 536' must be <$100.
KERNAL.ASM (331): error: Value in 'byte dc 536' must be <$100.
KERNAL.ASM (331): error: Value in 'byte dc 536' must be <$100.
KERNAL.ASM (331): error: Value in 'byte dc 536' must be <$100.
    331  f56d		       18 18 18 18	      DC.B	>SCREEN+$200,>SCREEN+$200,>SCREEN+$200,>SCREEN+$200
KERNAL.ASM (332): error: Value in 'byte dc 536' must be <$100.
KERNAL.ASM (332): error: Value in 'byte dc 536' must be <$100.
KERNAL.ASM (332): error: Value in 'byte dc 536' must be <$100.
KERNAL.ASM (332): error: Value in 'byte dc 536' must be <$100.
    332  f571		       18 18 18 18	      DC.B	>SCREEN+$200,>SCREEN+$200,>SCREEN+$200,>SCREEN+$200
KERNAL.ASM (333): error: Value in 'byte dc 792' must be <$100.
KERNAL.ASM (333): error: Value in 'byte dc 792' must be <$100.
KERNAL.ASM (333): error: Value in 'byte dc 792' must be <$100.
    333  f575		       18 18 18 	      DC.B	>SCREEN+$300,>SCREEN+$300,>SCREEN+$300
    334  f578
    335  f578							;*  TABLE FROM STAMP INDEX TO WHERE THE STAMP STARTS IN STAMP PAGE
    336  f578		       04 0a 10 16*STAMPOFF   DC.B	4,10,16,22,28,34
    337  f57e
    338  f57e							;*  TABLE FROM STAMP INDEX TO WHAT TABLE THE STAMP OFFSET GOES IN
    339  f57e		       40 60 80 a0 STDATALO   DC.B	<MSADDR,<FRTADDR,<M0ADDR,<M1ADDR
    340  f582		       c0 e0		      DC.B	<M2ADDR,<M3ADDR
    341  f584		       1e 1e 1e 1e STDATAHI   DC.B	>MSADDR,>FRTADDR,>M0ADDR,>M1ADDR
    342  f588		       1e 1e		      DC.B	>M2ADDR,>M3ADDR
    343  f58a
    344  f58a							;*  THE LAST ZONE OF THE MAZE
    345  f58a		       00 1e	   LASTZONE   EQU	30
    346  f58a							; END
------- FILE MDOIT.ASM
------- FILE GETJOY.ASM LEVEL 2 PASS 2
      0  f58a					      include	"GETJOY.ASM"
      1  f58a					      processor	6502
      2  f58a
      3  f58a							;*  GETJOY.S
      4  f58a							;*  READ JOYSTICK DATA
      5  f58a							;*
      6  f58a							;*  GAME PLAY JOYSTICK ROUTINE
      7  f58a		       8a	   GETJOY     TXA		;			      ;STORE X
      8  f58b		       48		      PHA
      9  f58c		       a6 45		      LDX	PLAYER	;		   ;USE APPROPRIATE PORT
     10  f58e
     11  f58e		       20 9b f5    GJDOIT     JSR	GETBUT	;		   ;FIND BUTTON STATE
     12  f591		       85 d2		      STA	BUTSTATE	;		 ;STORE IT
     13  f593		       20 a2 f5 	      JSR	GETSTICK
     14  f596		       85 d0		      STA	NEWDIR
     15  f598
     16  f598		       68		      PLA		;			      ;GET X BACK
     17  f599		       aa		      TAX
     18  f59a		       60		      RTS
     19  f59b
     20  f59b
     21  f59b							;*  GET THE BUTTON STATE
     22  f59b							;*  INPUT: PORT IN X
     23  f59b							;*  OUTPUT: STATE IN A (0 IF NOT DEPRESSED)
     24  f59b		       b5 0c	   GETBUT     LDA	INPT4,X	;		  ;GET BUTTON BIT
     25  f59d		       29 80		      AND	#$80	;		     ;ISOLATE IT
     26  f59f		       49 80		      EOR	#$80	;		     ;INVERT IT
     27  f5a1		       60		      RTS
     28  f5a2
     29  f5a2
     30  f5a2							;*  GET THE STICK STATE
     31  f5a2							;*  INPUT: JOYSTICK PORT IN X
     32  f5a2							;*  OUTPUT: DIRECTION IN A
     33  f5a2							;*  SMASHES: X
     34  f5a2		       ad 80 02    GETSTICK   LDA	SWCHA	;		    ;GET JOYSTICK BITS
     35  f5a5		       e0 00		      CPX	#$00
     36  f5a7		       d0 04		      BNE	GSJMP0
     37  f5a9		       4a		      LSR		;			;GET PLAYER 0 JOYSTICK IN LOW BITS
     38  f5aa		       4a		      LSR
     39  f5ab		       4a		      LSR
     40  f5ac		       4a		      LSR
     41  f5ad		       29 0f	   GSJMP0     AND	#$0F	;		     ;GET RID OF ANY EXTRA BITS
     42  f5af		       aa		      TAX
     43  f5b0		       bd b4 f5 	      LDA	JOYTAB,X	;		 ;LOOK IT UP IN TABLE
     44  f5b3		       60		      RTS
     45  f5b4
     46  f5b4
     47  f5b4							;* TABLE OF JOYSTICK DIRECTIONS VS BIT READINGS
     48  f5b4		       04 04 04 04 JOYTAB     DC.B	DCENTER,DCENTER,DCENTER,DCENTER
     49  f5b8		       04 05 08 00	      DC.B	DCENTER,DDWRIGHT,DUPRIGHT,DRIGHT
     50  f5bc		       04 06 07 02	      DC.B	DCENTER,DDWLEFT,DUPLEFT,DLEFT
     51  f5c0		       04 01 03 04	      DC.B	DCENTER,DDOWN,DUP,DCENTER
     52  f5c4							; END
------- FILE MDOIT.ASM
     69  f5c4					      align	2
------- FILE PUTCHAR.ASM LEVEL 2 PASS 2
      0  f5c4					      include	"PUTCHAR.ASM"
      1  f5c4					      processor	6502
      2  f5c4
      3  f5c4							;*  PUTCHAR.S	    THIS PROVIDES ROUTINES FOR MODIFYING THE SCREEN
      4  f5c4
      5  f5c4							;*  THIS ROUTINE PUTS UP A SET OF CHARACTERS IN A BLOCK ON THE SCREEN.  IT"S
      6  f5c4							;*  PARAMETERS ARE:
      7  f5c4							;*	    TEMP0   THE NUMBER OF LINES TO BE CHANGED
      8  f5c4							;*	    TEMP1   THE NUMBER OF COLUMNS TO BE CHANGED
      9  f5c4							;*	    TEMP2   WHAT CHARACTER IN THE FONT TO START WITH (THIS IS INCREMENTED)
     10  f5c4							;*	    TEMP3   WHAT ZONE THE MODIFICATION STARTS IN
     11  f5c4							;*	    TEMP4   WHAT COLUMN IN THE ZONE IT STARTS IN
     12  f5c4							;*	    TEMP5, 6, AND 7 ARE USED FOR INTERNAL USE
     13  f5c4		       a9 01	   PUTCHARS   LDA	#$01
     14  f5c6		       85 b5		      STA	TEMP5
     15  f5c8		       4c d2 f5 	      JMP	PCHAR
     16  f5cb
     17  f5cb
     18  f5cb							;*  THIS ROUTINE IS THE SAME AS PUTCHARS, BUT THE CHARACTER USED FOR MODIFICATION
     19  f5cb							;*  DOES NOT CHANGE.
     20  f5cb		       a9 00	   PUTCHAR    LDA	#$00
     21  f5cd		       85 b5		      STA	TEMP5
     22  f5cf		       4c d2 f5 	      JMP	PCHAR
     23  f5d2
     24  f5d2
     25  f5d2							;*  THIS ROUTINE DOES THE WORK FOR PUTCHARS AND PUTCHAR
     26  f5d2		       a6 b3	   PCHAR      LDX	TEMP3	;		    ;THE ZONE
     27  f5d4		       bd 3a f5 	      LDA	SCRLOW,X	;		 ;LOW BYTE OF ADDRESS FOR ZONE
     28  f5d7		       85 b6		      STA	TEMP6	;		    ;TEMP LOCATION
     29  f5d9		       bd 59 f5 	      LDA	SCRHI,X	;		  ;HI BYTE OF ADDRESS FOR ZONE
     30  f5dc		       85 b7		      STA	TEMP7
     31  f5de
     32  f5de		       a6 b1		      LDX	TEMP1	;		    ;NUMBER OF COLUMNS
     33  f5e0		       a4 b4		      LDY	TEMP4	;		    ;STARTING COLUMN
     34  f5e2		       a5 b2	   PLOOP      LDA	TEMP2	;		    ;STARTING CHAR
     35  f5e4		       91 b6		      STA	(TEMP6),Y
     36  f5e6		       a5 b5		      LDA	TEMP5	;		    ;SEE IF STARTING CHAR IS INCREMENTED
     37  f5e8		       f0 02		      BEQ	PJMP0
     38  f5ea		       e6 b2		      INC	TEMP2	;		    ;NEXT CHAR
     39  f5ec		       c8	   PJMP0      INY
     40  f5ed		       ca		      DEX
     41  f5ee		       d0 f2		      BNE	PLOOP
     42  f5f0
     43  f5f0		       e6 b3		      INC	TEMP3	;		    ;NEXT ZONE
     44  f5f2		       c6 b0		      DEC	TEMP0	;		    ;ONE LESS LINE
     45  f5f4		       d0 dc		      BNE	PCHAR	;		    ;DO IT AGAIN IF MORE LINES
     46  f5f6		       60		      RTS
     47  f5f7
     48  f5f7
     49  f5f7							;*  THIS ROUTINE PUTS A SINGLE CHARACTER INTO A SINGLE PLACE ON THE SCREEN.
     50  f5f7							;*  PARAMETERS:
     51  f5f7							;*	    TEMP0   ZONE
     52  f5f7							;*	    TEMP1   COLUMN
     53  f5f7							;*	    X	    CHARACTER
     54  f5f7							;*  TEMP2-3 ARE USED.
     55  f5f7		       84 c7	   PLOPCHAR   STY	TEMP23
     56  f5f9		       a4 b0		      LDY	TEMP0	;		    ;THE ZONE
     57  f5fb		       b9 3a f5 	      LDA	SCRLOW,Y	;		 ;LOW BYTE OF ADDRESS FOR ZONE
     58  f5fe		       85 b2		      STA	TEMP2	;		    ;TEMP LOCATION
     59  f600		       b9 59 f5 	      LDA	SCRHI,Y	;		  ;HI BYTE OF ADDRESS FOR ZONE
     60  f603		       85 b3		      STA	TEMP3
     61  f605		       a4 b1		      LDY	TEMP1
     62  f607		       8a		      TXA
     63  f608		       91 b2		      STA	(TEMP2),Y
     64  f60a		       a4 c7		      LDY	TEMP23
     65  f60c		       60		      RTS
     66  f60d
     67  f60d
     68  f60d							;*  THIS RETURNS (IN A) THE CONTENTS OF A CHARACTER.
     69  f60d							;*  PARAMETERS:  TEMP0 - ZONE, TEMP1 - COL
     70  f60d							;*  TEMPS:  TEMP2-3
     71  f60d		       84 c7	   GETCHAR    STY	TEMP23
     72  f60f		       a4 b0		      LDY	TEMP0	;		    ;THE ZONE
     73  f611		       b9 3a f5 	      LDA	SCRLOW,Y	;		 ;LOW BYTE OF ADDRESS FOR ZONE
     74  f614		       85 b2		      STA	TEMP2	;		    ;TEMP LOCATION
     75  f616		       b9 59 f5 	      LDA	SCRHI,Y	;		  ;HI BYTE OF ADDRESS FOR ZONE
     76  f619		       85 b3		      STA	TEMP3
     77  f61b
     78  f61b		       a4 b1		      LDY	TEMP1	;		    ;STARTING COLUMN
     79  f61d		       b1 b2		      LDA	(TEMP2),Y
     80  f61f		       a4 c7		      LDY	TEMP23
     81  f621		       60		      RTS
     82  f622
     83  f622
     84  f622							;*  THIS ROUTINE ADDS THE ACCUMULATOR TO THE PRESENT SCORE.  NOTE THAT THE
     85  f622							;*  ACCUMULATOR SHOULD HAVE A DECIMAL NUMBER, THIS WILL BE MULTIPLIED BY 10
     86  f622							;*  TEMP 8-12 ARE USED.  REGISTERS ARE PRESERVED.  TEMP 6-7 ARE USED BY WRTSCORE
     87  f622							;*  IF ADDTOTAL IS CALLED, THE USER SETS UP TEMP11-12 TO THE ADDED SCORE
     88  f622		       85 bc	   ADDSCORE   STA	TEMP12
     89  f624		       a9 00		      LDA	#$00
     90  f626		       85 bb		      STA	TEMP11
     91  f628		       8a	   ADDTOTAL   TXA		;			      ;STACK REGISTERS
     92  f629		       48		      PHA
     93  f62a		       98		      TYA
     94  f62b		       48		      PHA
     95  f62c
     96  f62c		       a9 00		      LDA	#$00	;		     ;CLEAR TOP TWO BYTES OF ADDED VALUE
     97  f62e		       85 b9		      STA	TEMP9
     98  f630		       85 ba		      STA	TEMP10
     99  f632		       a6 42		      LDX	AUTOPLAY
    100  f634		       d0 33		      BNE	ADSOUT
    101  f636		       a4 45		      LDY	PLAYER	;		   ;SEE WHICH PLAYER IS ACTIVE
    102  f638		       d0 19		      BNE	ADSP2
    103  f63a
    104  f63a		       a0 03		      LDY	#$03
    105  f63c		       f8		      SED		;			      ;DECIMAL MODE ON
    106  f63d		       18		      CLC
    107  f63e		       b9 b9 00    ADS1LOOP   LDA	TEMP9,Y
    108  f641		       79 46 00 	      ADC	P1SCORE,Y
    109  f644		       99 46 00 	      STA	P1SCORE,Y
    110  f647		       a9 00		      LDA	#$00
    111  f649		       88		      DEY
    112  f64a		       10 f2		      BPL	ADS1LOOP
    113  f64c		       d8		      CLD		;			      ;DECIMAL MODE OFF
    114  f64d		       20 71 f6 	      JSR	CHKSCOR1
    115  f650		       4c 69 f6 	      JMP	ADSOUT
    116  f653
    117  f653		       a0 03	   ADSP2      LDY	#$03
    118  f655		       f8		      SED		;			      ;DECIMAL MODE ON
    119  f656		       18		      CLC
    120  f657		       b9 b9 00    ADS2LOOP   LDA	TEMP9,Y
    121  f65a		       79 4c 00 	      ADC	P2SCORE,Y
    122  f65d		       99 4c 00 	      STA	P2SCORE,Y
    123  f660		       a9 00		      LDA	#$00
    124  f662		       88		      DEY
    125  f663		       10 f2		      BPL	ADS2LOOP
    126  f665		       d8		      CLD		;			      ;DECIMAL MODE OFF
    127  f666		       20 8c f6 	      JSR	CHKSCOR2
    128  f669
    129  f669		       20 02 f7    ADSOUT     JSR	WRTSCORE
    130  f66c		       68		      PLA		;			      ;UNSTACK REGISTERS
    131  f66d		       a8		      TAY
    132  f66e		       68		      PLA
    133  f66f		       aa		      TAX
    134  f670		       60		      RTS
    135  f671
    136  f671
    137  f671							;*  THIS ROUTINE CHECKS TO SEE IF PLAYER 1 HAS A BONUS LIFE COMING
    138  f671		       a5 4a	   CHKSCOR1   LDA	P1BONUS	;		  ;MAKE SURE BONUS IS ENABLED
    139  f673		       30 16		      BMI	CKS1OUT
    140  f675		       f8		      SED
    141  f676		       38		      SEC		;			      ;DECIMAL MODE ON
    142  f677		       a5 4b		      LDA	P1BONUS+1
    143  f679		       e5 bc		      SBC	TEMP12
    144  f67b		       85 4b		      STA	P1BONUS+1
    145  f67d		       a5 4a		      LDA	P1BONUS
    146  f67f		       e5 bb		      SBC	TEMP11
    147  f681		       85 4a		      STA	P1BONUS
    148  f683		       d8		      CLD		;			      ;DECIMAL MODE OFF
    149  f684		       a5 4a		      LDA	P1BONUS	;		  ;COMPENSATE FOR 6502 BUG
    150  f686		       10 03		      BPL	CKS1OUT
    151  f688		       20 f6 f6 	      JSR	INCLIVES
    152  f68b		       60	   CKS1OUT    RTS
    153  f68c
    154  f68c
    155  f68c							;*  THIS ROUTINE CHECKS TO SEE IF PLAYER 2 HAS A BONUS LIFE COMING
    156  f68c		       a5 50	   CHKSCOR2   LDA	P2BONUS	;		  ;MAKE SURE BONUS IS ENABLED
    157  f68e		       30 16		      BMI	CKS2OUT
    158  f690		       f8		      SED
    159  f691		       38		      SEC		;			      ;DECIMAL MODE ON
    160  f692		       a5 51		      LDA	P2BONUS+1
    161  f694		       e5 bc		      SBC	TEMP12
    162  f696		       85 51		      STA	P2BONUS+1
    163  f698		       a5 50		      LDA	P2BONUS
    164  f69a		       e5 bb		      SBC	TEMP11
    165  f69c		       85 50		      STA	P2BONUS
    166  f69e		       d8		      CLD		;			      ;DECIMAL MODE OFF
    167  f69f		       a5 50		      LDA	P2BONUS	;		  ;COMPENSATE FOR 6502 BUG
    168  f6a1		       10 03		      BPL	CKS2OUT
    169  f6a3		       20 f6 f6 	      JSR	INCLIVES
    170  f6a6		       60	   CKS2OUT    RTS
    171  f6a7
    172  f6a7
    173  f6a7							;*  THIS ROUTINE INITIALIZES THE LIVES
    174  f6a7		       a9 04	   INITLIV    LDA	#$04
    175  f6a9		       85 a4		      STA	LIVES
    176  f6ab		       85 a3		      STA	TOTLIVES
    177  f6ad		       a6 41		      LDX	TWOPLAYR
    178  f6af		       f0 06		      BEQ	ILOUT
    179  f6b1		       85 e4		      STA	BAKLIVES	;		 ;FOR THE OTHER PLAYER
    180  f6b3		       a9 09		      LDA	#$09
    181  f6b5		       85 a3		      STA	TOTLIVES
    182  f6b7		       60	   ILOUT      RTS
    183  f6b8
    184  f6b8
    185  f6b8							;*  THIS ROUTINE DECREMENTS THE LIVES.
    186  f6b8		       a5 42	   DECLIVES   LDA	AUTOPLAY
    187  f6ba		       d0 37		      BNE	DECALT
    188  f6bc		       20 8e ea 	      JSR	CLEARTUN
    189  f6bf		       20 da cd 	      JSR	WAIT
    190  f6c2		       c6 a4		      DEC	LIVES
    191  f6c4		       20 ac f7 	      JSR	WRTLIVES
    192  f6c7		       a5 a4		      LDA	LIVES
    193  f6c9		       10 09		      BPL	DLCONT
    194  f6cb		       20 5d f8 	      JSR	OVER	;		     ;PUT GAME OVER UP
    195  f6ce		       20 da cd 	      JSR	WAIT
    196  f6d1		       20 79 f8 	      JSR	WCLEAR
    197  f6d4		       c6 a3	   DLCONT     DEC	TOTLIVES
    198  f6d6		       30 16		      BMI	DLDEAD
    199  f6d8		       a5 41		      LDA	TWOPLAYR
    200  f6da		       d0 0c		      BNE	DLSWITCH
    201  f6dc		       20 70 cc 	      JSR	LIFEINIT
    202  f6df		       20 55 f8    DLREADY    JSR	READY	;		    ;PUT PLAYER READY UP
    203  f6e2		       20 da cd 	      JSR	WAIT
    204  f6e5		       4c 79 f8 	      JMP	WCLEAR
    205  f6e8		       20 43 cc    DLSWITCH   JSR	OTHRINIT	;		 ;SWITCH TO OTHER PLAYER
    206  f6eb		       4c df f6 	      JMP	DLREADY
    207  f6ee		       a9 01	   DLDEAD     LDA	#$01	;		     ;GAME OVER
    208  f6f0		       85 a2		      STA	GAMEOVER
    209  f6f2		       60		      RTS
    210  f6f3		       4c 0a cd    DECALT     JMP	NEXTRACK	;		 ;IF AUTOPLAY - SWITCH RACKS INSTEAD
    211  f6f6
    212  f6f6
    213  f6f6							;*  THIS ROUTINE INCREMENTS THE LIVES.
    214  f6f6		       e6 a4	   INCLIVES   INC	LIVES
    215  f6f8		       e6 a3		      INC	TOTLIVES
    216  f6fa		       a9 14		      LDA	#$14
    217  f6fc		       20 43 ea 	      JSR	DOTUNE
    218  f6ff		       4c ac f7 	      JMP	WRTLIVES
    219  f702
    220  f702
    221  f702							;*  THIS ROUTINE WRITES THE SCORES OF THE PLAYERS ON THE SCREEN
    222  f702							;*  TEMPS 6-7 AND 10 ARE USED
    223  f702							;*  NOTE:  SCORE+1 IS USED SINCE THE HI BYTE IS ONLY MAINTAINED FOR THE HIGH
    224  f702							;*	    SCORE CART
    225  f702		       a2 1e	   WRTSCORE   LDX	#$1E
    226  f704		       bd 3a f5 	      LDA	SCRLOW,X	;		 ;LOW BYTE OF ADDRESS FOR ZONE
    227  f707		       85 b6		      STA	TEMP6	;		    ;TEMP LOCATION
    228  f709		       bd 59 f5 	      LDA	SCRHI,X	;		  ;HI BYTE OF ADDRESS FOR ZONE
    229  f70c		       85 b7		      STA	TEMP7	;		    ;NOW - ZONE LINE IS SET UP
    230  f70e		       a0 00		      LDY	#P1SCRCOL	;		;STARTING COLUMN
    231  f710
    232  f710		       a6 45		      LDX	PLAYER
    233  f712		       bd b7 fa 	      LDA	NUMCHAR,X
    234  f715		       85 ba		      STA	TEMP10	;		   ;SET STARTING CHARACTER FOR ZERO
    235  f717		       a2 00		      LDX	#$00
    236  f719
    237  f719		       b5 47	   WRSALOOP   LDA	P1SCORE+1,X	;	      ;ELIMINATE LEADING ZEROS
    238  f71b		       4a		      LSR
    239  f71c		       4a		      LSR
    240  f71d		       4a		      LSR
    241  f71e		       4a		      LSR
    242  f71f		       d0 1a		      BNE	WRS1JMP0
    243  f721		       20 a6 f7 	      JSR	WRTBLANK
    244  f724		       b5 47		      LDA	P1SCORE+1,X
    245  f726		       29 0f		      AND	#$0F
    246  f728		       d0 18		      BNE	WRS1JMP1
    247  f72a		       20 a6 f7 	      JSR	WRTBLANK
    248  f72d		       e8		      INX
    249  f72e		       e0 03		      CPX	#$03
    250  f730		       30 e7		      BMI	WRSALOOP
    251  f732		       4c 4a f7 	      JMP	WRS1JMP2
    252  f735
    253  f735		       b5 47	   WRS1LOOP   LDA	P1SCORE+1,X	;	      ;WRITE SCORE FOR PLAYER 1
    254  f737		       4a		      LSR
    255  f738		       4a		      LSR
    256  f739		       4a		      LSR
    257  f73a		       4a		      LSR
    258  f73b		       20 9f f7    WRS1JMP0   JSR	WRTDIGIT
    259  f73e		       b5 47		      LDA	P1SCORE+1,X
    260  f740		       29 0f		      AND	#$0F
    261  f742		       20 9f f7    WRS1JMP1   JSR	WRTDIGIT
    262  f745		       e8		      INX
    263  f746		       e0 03		      CPX	#$03
    264  f748		       30 eb		      BMI	WRS1LOOP
    265  f74a
    266  f74a		       a9 00	   WRS1JMP2   LDA	#$00	;		     ;TRAILING ZERO
    267  f74c		       20 9f f7 	      JSR	WRTDIGIT
    268  f74f
    269  f74f		       a5 41	   WRSB       LDA	TWOPLAYR	;		 ;DON"T DO SECOND IF ONE-PLAYER
    270  f751		       f0 41		      BEQ	WRS2NONE
    271  f753		       a6 45		      LDX	PLAYER
    272  f755		       bd b9 fa 	      LDA	NUMCHAR2,X
    273  f758		       85 ba		      STA	TEMP10	;		   ;SET STARTING CHARACTER FOR ZERO
    274  f75a		       a2 00		      LDX	#$00	;		     ;START WITH HIGH BYTE
    275  f75c		       a0 15		      LDY	#P2SCRCOL	;		;STARTING COLUMN
    276  f75e
    277  f75e		       b5 4d	   WRSBLOOP   LDA	P2SCORE+1,X	;	      ;ELIMINATE LEADING ZEROS
    278  f760		       4a		      LSR
    279  f761		       4a		      LSR
    280  f762		       4a		      LSR
    281  f763		       4a		      LSR
    282  f764		       d0 1a		      BNE	WRS2JMP0
    283  f766		       20 a6 f7 	      JSR	WRTBLANK
    284  f769		       b5 4d		      LDA	P2SCORE+1,X
    285  f76b		       29 0f		      AND	#$0F
    286  f76d		       d0 18		      BNE	WRS2JMP1
    287  f76f		       20 a6 f7 	      JSR	WRTBLANK
    288  f772		       e8		      INX
    289  f773		       e0 03		      CPX	#$03
    290  f775		       30 e7		      BMI	WRSBLOOP
    291  f777		       4c 8f f7 	      JMP	WRS2JMP2
    292  f77a
    293  f77a		       b5 4d	   WRS2LOOP   LDA	P2SCORE+1,X	;	      ;WRITE SCORE FOR PLAYER 2
    294  f77c		       4a		      LSR
    295  f77d		       4a		      LSR
    296  f77e		       4a		      LSR
    297  f77f		       4a		      LSR
    298  f780		       20 9f f7    WRS2JMP0   JSR	WRTDIGIT
    299  f783		       b5 4d		      LDA	P2SCORE+1,X
    300  f785		       29 0f		      AND	#$0F
    301  f787		       20 9f f7    WRS2JMP1   JSR	WRTDIGIT
    302  f78a		       e8		      INX
    303  f78b		       e0 03		      CPX	#$03
    304  f78d		       30 eb		      BMI	WRS2LOOP
    305  f78f
    306  f78f		       a9 00	   WRS2JMP2   LDA	#$00	;		     ;TRAILING ZERO
    307  f791		       4c 9f f7 	      JMP	WRTDIGIT	;		 ;ALL DONE
    308  f794
    309  f794		       a0 15	   WRS2NONE   LDY	#P2SCRCOL	;		;CLEAR OUT PLAYER 2 (JUST IN CASE)
    310  f796		       a2 06		      LDX	#$06
    311  f798		       20 a6 f7    WRS2NLP    JSR	WRTBLANK
    312  f79b		       ca		      DEX
    313  f79c		       10 fa		      BPL	WRS2NLP
    314  f79e		       60		      RTS
    315  f79f
    316  f79f							;*  THIS ROUTINE WRITES A DIGIT (IN THE ACCUMULATOR) TO THE NEXT SPOT ON THE
    317  f79f							;*  SCREEN (TEMP6).  TEMP10 IS ADDED (TO GIVE OFFSET INTO FONT).
    318  f79f		       18	   WRTDIGIT   CLC
    319  f7a0		       65 ba		      ADC	TEMP10
    320  f7a2		       91 b6		      STA	(TEMP6),Y
    321  f7a4		       c8		      INY
    322  f7a5		       60		      RTS
    323  f7a6
    324  f7a6							;*  THIS ROUTINE WRITES A BKANK TO THE NEXT SPOT ON THE SCREEN (TEMP6).
    325  f7a6		       a9 50	   WRTBLANK   LDA	#BLNKCHAR
    326  f7a8		       91 b6		      STA	(TEMP6),Y
    327  f7aa		       c8		      INY
    328  f7ab		       60		      RTS
    329  f7ac
    330  f7ac
    331  f7ac							;*  THIS ROUTINE WRITES THE LIVES ON THE SCREEN
    332  f7ac		       a5 a4	   WRTLIVES   LDA	LIVES	;		    ;GET NUMBER OF LIVES
    333  f7ae		       c9 05		      CMP	#$05	;		     ;MAKE SURE NOT TOO BIG
    334  f7b0		       30 02		      BMI	WLJMP0
    335  f7b2		       a9 05		      LDA	#$05
    336  f7b4		       0a	   WLJMP0     ASL		;			;TURN IT INTO AN INDEX INTO DLISTS
    337  f7b5		       0a		      ASL
    338  f7b6		       85 c0		      STA	TEMP16
    339  f7b8
    340  f7b8		       a2 10		      LDX	#$10	;		     ;NOW, GO THROUGH THE INDICATORS
    341  f7ba		       e4 c0	   WLLOOP     CPX	TEMP16
    342  f7bc		       10 0d		      BPL	WLBLANK
    343  f7be		       a9 28		      LDA	#$28	;		     ;TURN ON AN INDICATOR
    344  f7c0		       9d 27 1f 	      STA	BDLIST0,X
    345  f7c3		       a9 2a		      LDA	#$2A
    346  f7c5		       9d 80 1f 	      STA	BDLIST1,X
    347  f7c8		       4c d3 f7 	      JMP	WLNEXT
    348  f7cb		       a9 00	   WLBLANK    LDA	#$00	;		     ;TURN ON A BLANK
    349  f7cd		       9d 27 1f 	      STA	BDLIST0,X
    350  f7d0		       9d 80 1f 	      STA	BDLIST1,X
    351  f7d3		       ca	   WLNEXT     DEX		;			      ;NEXT ONE IS 4 LESS
    352  f7d4		       ca		      DEX
    353  f7d5		       ca		      DEX
    354  f7d6		       ca		      DEX
    355  f7d7		       10 e1		      BPL	WLLOOP
    356  f7d9
    357  f7d9		       60		      RTS
    358  f7da
    359  f7da
    360  f7da							;*  FLASH THE POWER DOTS
    361  f7da		       20 42 f8    FLASHDOT   JSR	SETFLSH	;		  ;SET NEXT FLASH
    362  f7dd
    363  f7dd		       a4 a5		      LDY	RACK
    364  f7df		       b9 6a ff 	      LDA	EDZONE0,Y
    365  f7e2		       85 b0		      STA	TEMP0
    366  f7e4		       b9 72 ff 	      LDA	EDCOL0,Y
    367  f7e7		       85 b1		      STA	TEMP1
    368  f7e9		       20 04 f8 	      JSR	SWTCHDOT	;		 ;SWITCH ZONE 0 COLUMN 0
    369  f7ec		       b9 76 ff 	      LDA	EDCOL1,Y
    370  f7ef		       85 b1		      STA	TEMP1
    371  f7f1		       20 04 f8 	      JSR	SWTCHDOT	;		 ;SWITCH ZONE 0 COLUMN 1
    372  f7f4		       b9 6e ff 	      LDA	EDZONE1,Y
    373  f7f7		       85 b0		      STA	TEMP0
    374  f7f9		       20 04 f8 	      JSR	SWTCHDOT	;		 ;SWITCH ZONE 1 COLUMN 1
    375  f7fc		       b9 72 ff 	      LDA	EDCOL0,Y
    376  f7ff		       85 b1		      STA	TEMP1
    377  f801		       4c 04 f8 	      JMP	SWTCHDOT	;		 ;SWITCH ZONE 1 COLUMN 0
    378  f804
    379  f804
    380  f804							;*  SWITCH A SINGLE POWER DOT - ZONE AND COL IN TEMP0 AND 1
    381  f804		       20 0d f6    SWTCHDOT   JSR	GETCHAR
    382  f807		       c9 50		      CMP	#BLNKCHAR
    383  f809		       f0 06		      BEQ	SDOUT
    384  f80b		       49 01		      EOR	#$01
    385  f80d		       aa		      TAX
    386  f80e		       4c f7 f5 	      JMP	PLOPCHAR
    387  f811		       60	   SDOUT      RTS
    388  f812
    389  f812
    390  f812							;*  MAKE THE POWER DOTS WHITE FOR END OF RACK
    391  f812		       a4 a5	   FINALDOT   LDY	RACK
    392  f814		       b9 6a ff 	      LDA	EDZONE0,Y
    393  f817		       85 b0		      STA	TEMP0
    394  f819		       b9 72 ff 	      LDA	EDCOL0,Y
    395  f81c		       85 b1		      STA	TEMP1
    396  f81e		       20 39 f8 	      JSR	ONDOT	;		    ;TURN ON ZONE 0 COLUMN 0
    397  f821		       b9 76 ff 	      LDA	EDCOL1,Y
    398  f824		       85 b1		      STA	TEMP1
    399  f826		       20 39 f8 	      JSR	ONDOT	;		    ;TURN ON ZONE 0 COLUMN 1
    400  f829		       b9 6e ff 	      LDA	EDZONE1,Y
    401  f82c		       85 b0		      STA	TEMP0
    402  f82e		       20 39 f8 	      JSR	ONDOT	;		    ;TURN ON ZONE 1 COLUMN 1
    403  f831		       b9 72 ff 	      LDA	EDCOL0,Y
    404  f834		       85 b1		      STA	TEMP1
    405  f836		       4c 39 f8 	      JMP	ONDOT	;		    ;TURN ON ZONE 1 COLUMN 0
    406  f839
    407  f839
    408  f839							;*  TURN ON SINGLE POWER DOT - ZONE AND COL IN TEMP0 AND 1
    409  f839		       20 0d f6    ONDOT      JSR	GETCHAR
    410  f83c		       29 fe		      AND	#$FE
    411  f83e		       aa		      TAX
    412  f83f		       4c f7 f5 	      JMP	PLOPCHAR
    413  f842
    414  f842
    415  f842							;*  SET THE NEXT FLASH MOVE
    416  f842		       a5 a1	   SETFLSH    LDA	RTLOCAL+1
    417  f844		       18		      CLC
    418  f845		       69 08		      ADC	#WAITFLSH
    419  f847		       85 db		      STA	FLSHWAIT
    420  f849		       60		      RTS
    421  f84a
    422  f84a
    423  f84a							;*  THIS JUST SETS TEMP0 AND TEMP1 TO HAVE THE SCREEN LOCATION FOR ZONE Y
    424  f84a		       b9 3a f5    SETSCRN    LDA	SCRLOW,Y	;		 ;LOW BYTE OF ADDRESS FOR ZONE
    425  f84d		       85 b0		      STA	TEMP0	;		    ;TEMP LOCATION
    426  f84f		       b9 59 f5 	      LDA	SCRHI,Y	;		  ;HI BYTE OF ADDRESS FOR ZONE
    427  f852		       85 b1		      STA	TEMP1
    428  f854		       60		      RTS
    429  f855
    430  f855
    431  f855							;*  PUT THE READY MESSAGE UP
    432  f855		       20 65 f8    READY      JSR	WPLAYR	;		   ;WRITE THE PLAYER
    433  f858		       a0 21		      LDY	#$21
    434  f85a		       4c 9e f8 	      JMP	WRTMESG	;		  ;WRITE READY
    435  f85d
    436  f85d
    437  f85d							;*  PUT THE GAME OVER MESSAGE UP
    438  f85d		       20 65 f8    OVER       JSR	WPLAYR	;		   ;WRITE THE PLAYER
    439  f860		       a0 22	   ALLOVER    LDY	#$22
    440  f862		       4c 9e f8 	      JMP	WRTMESG	;		  ;WRITE GAME OVER
    441  f865
    442  f865
    443  f865							;*  PUT A PLAYER UP ON THE SCREEN
    444  f865		       a5 41	   WPLAYR     LDA	TWOPLAYR
    445  f867		       f0 0f		      BEQ	WPLOUT
    446  f869		       a9 b0		      LDA	#OFFSCRN	;		 ;MOVE THE RED GUY AWAY
    447  f86b		       85 57		      STA	HPLIST+1
    448  f86d		       85 75		      STA	DOLIST+1
    449  f86f
    450  f86f		       a5 45		      LDA	PLAYER	;		   ;WRITE THE PLAYER
    451  f871		       18		      CLC
    452  f872		       69 0f		      ADC	#$0F
    453  f874		       a8		      TAY
    454  f875		       20 9e f8 	      JSR	WRTMESG
    455  f878		       60	   WPLOUT     RTS
    456  f879
    457  f879
    458  f879							;*  ERASE ALL THE MESSAGES ON THE SCREEN
    459  f879		       20 8d f8    WCLEAR     JSR	WCSETUP
    460  f87c		       a9 0a		      LDA	#MESHZONE
    461  f87e		       85 b3		      STA	TEMP3	;		    ;ZONE
    462  f880		       20 cb f5 	      JSR	PUTCHAR
    463  f883		       20 8d f8 	      JSR	WCSETUP
    464  f886		       a9 10		      LDA	#MESLZONE
    465  f888		       85 b3		      STA	TEMP3	;		    ;ZONE
    466  f88a		       4c cb f5 	      JMP	PUTCHAR
    467  f88d
    468  f88d
    469  f88d							;*  PREPARE THE TEMPS FOR WCLEAR
    470  f88d		       a9 01	   WCSETUP    LDA	#$01
    471  f88f		       85 b0		      STA	TEMP0	;		    ;ONE LINE
    472  f891		       a9 0a		      LDA	#$0A
    473  f893		       85 b1		      STA	TEMP1	;		    ;10 COLUMNS
    474  f895		       a9 50		      LDA	#BLNKCHAR
    475  f897		       85 b2		      STA	TEMP2	;		    ;CHARACTER
    476  f899		       a9 09		      LDA	#MESCOL
    477  f89b		       85 b4		      STA	TEMP4	;		    ;COLUMN
    478  f89d		       60		      RTS
    479  f89e
    480  f89e
    481  f89e							;*  THIS ROUTINE WRITES ONE OF THE TITLE PAGE MESSAGES ON THE SCREEN
    482  f89e							;*  INPUT:  MESSAGE IN Y (SMASHES Y)
    483  f89e		       86 b5	   WRTMESG    STX	TEMP5	;		    ;SAVE X
    484  f8a0		       b9 f7 f8 	      LDA	TMLENGTH,Y	;	       ;SET LENGTH OF MESSAGE
    485  f8a3		       85 b4		      STA	TEMP4
    486  f8a5		       b9 1a f9 	      LDA	TMZONE,Y	;		 ;SET STARTING ZONE AND COLUMN
    487  f8a8		       85 b0		      STA	TEMP0
    488  f8aa		       b9 3d f9 	      LDA	TMCOL,Y
    489  f8ad		       85 b1		      STA	TEMP1
    490  f8af		       98		      TYA		;			      ;TEMP 6 NON ZERO IF MESSAGE $10 OR OVER
    491  f8b0		       38		      SEC
    492  f8b1		       e9 13		      SBC	#$13
    493  f8b3		       85 b6		      STA	TEMP6
    494  f8b5		       b9 d4 f8 	      LDA	TMOFFSET,Y	;	       ;SET Y TO OFFSET
    495  f8b8		       a8		      TAY
    496  f8b9
    497  f8b9		       a5 b6	   WMLOOP     LDA	TEMP6
    498  f8bb		       10 06		      BPL	WMLJMP0
    499  f8bd		       b9 60 f9 	      LDA	TMESSAGE,Y	;	       ;DO IT
    500  f8c0		       4c c6 f8 	      JMP	WMLJMP1
    501  f8c3		       b9 29 fa    WMLJMP0    LDA	TMESSAG2,Y	;	       ;DO IT - SECOND BANK OF MESSAGES
    502  f8c6		       aa	   WMLJMP1    TAX
    503  f8c7		       20 f7 f5 	      JSR	PLOPCHAR
    504  f8ca		       c8		      INY		;			      ;NEXT INPUT CHAR
    505  f8cb		       e6 b1		      INC	TEMP1	;		    ;NEXT OUTPUT CHAR
    506  f8cd		       c6 b4		      DEC	TEMP4	;		    ;SEE IF DONE
    507  f8cf		       10 e8		      BPL	WMLOOP
    508  f8d1
    509  f8d1		       a6 b5		      LDX	TEMP5	;		    ;RESTORE X
    510  f8d3		       60		      RTS
    511  f8d4
    512  f8d4
    513  f8d4							;*  DATA FOR MESSAGES.  NOTE - MESSAGES OVER $13 COME FROM TMESSAG2, OTHERS COME
    514  f8d4							;*  FROM TMESSAGE.
    515  f8d4
    516  f8d4							;*  THESE ARE OFFSETS INTO THE MESSAGE TABLE
    517  f8d4		       00 06 0c 12*TMOFFSET   DC.B	$00,$06,$0C,$12,$18,$22,$36,$3A	;OFFSETS INTO TMESSAGE
    518  f8dc		       42 52 62 72*	      DC.B	$42,$52,$62,$72,$82,$92,$A1,$BF
    519  f8e4		       b4 b0 bb 	      DC.B	$B4,$B0,$BB
    520  f8e7		       00 0a 14 1e*HSCOFF     DC.B	$00,$0A,$14,$1E,$28,$32,$3C,$46
    521  f8ef		       50 55 5a 5f*	      DC.B	$50,$55,$5A,$5F,$68,$71,$7A,$84
    522  f8f7		       05 05 05 05*TMLENGTH   DC.B	$05,$05,$05,$05,$09,$13,$03,$07	;LENGTH (-1)
    523  f8ff		       0f 0f 0f 0f*	      DC.B	$0F,$0F,$0F,$0F,$0F,$0E,$0E,$09
    524  f907		       09 09 09 	      DC.B	$09,$09,$09
    525  f90a		       09 09 09 09*	      DC.B	$09,$09,$09,$09,$09,$09,$09,$09
    526  f912		       04 04 04 08*	      DC.B	$04,$04,$04,$08,$08,$08,$09,$09
    527  f91a		       0f 0f 0f 0f*TMZONE     DC.B	$0F,$0F,$0F,$0F,$0F,$1C,$0C,$0C	;ZONE MESSAGE APPEARS
    528  f922		       02 03 04 05*	      DC.B	$02,$03,$04,$05,$06,$16,$18,$0A
    529  f92a		       0a 0c 0c 	      DC.B	$0A,$0C,$0C
    530  f92d		       0f 0f 0f 0f*	      DC.B	$0F,$0F,$0F,$0F,$0F,$0F,$0F,$0F
    531  f935		       0f 0f 0f 0e*	      DC.B	$0F,$0F,$0F,$0E,$0E,$0E,$10,$10
    532  f93d		       0a 0a 0a 0a*TMCOL      DC.B	$0A,$0A,$0A,$0A,$0A,$04,$08,$08	;COLUMN FOR MESSAGE
    533  f945		       06 06 06 06*	      DC.B	$06,$06,$06,$06,$06,$06,$06,$09
    534  f94d		       09 09 09 	      DC.B	$09,$09,$09
    535  f950		       09 09 09 09*	      DC.B	$09,$09,$09,$09,$09,$09,$09,$09
    536  f958		       04 04 04 0c*	      DC.B	$04,$04,$04,$0C,$0C,$0C,$09,$09
    537  f960
    538  f960							;*  THESE ARE THE MESSAGES FOR THE TITLE PAGE
    539  f960		       5f 69 66 6b*TMESSAGE   DC.B	$5F,$69,$66,$6B,$68,$76	;		  ;0 - BLINKY
    540  f966		       6d 66 6b 68*	      DC.B	$6D,$66,$6B,$68,$76,$50	;		  ;1 - PINKY
    541  f96c		       66 6b 68 76*	      DC.B	$66,$6B,$68,$76,$50,$50	;		  ;2 - INKY
    542  f972		       70 72 62 50*	      DC.B	$70,$72,$62,$50,$50,$50	;		  ;3 - SUE
    543  f978		       6a 70 50 6d*	      DC.B	$6A,$70,$50,$6D,$5E,$60,$7A,$6A,$5E,$6B	;4 - MS PAC-MAN
    544  f982		       60 6c 6d 76*	      DC.B	$60,$6C,$6D,$76,$6F,$66,$64,$65,$71,$00	;5 - COPYRIGHT
    545  f98c		       5e 71 5e 6f*	      DC.B	$5E,$71,$5E,$6F,$66,$00,$55,$5D,$5C,$58	;    ATARI 1984
    546  f996		       74 66 71 65	      DC.B	$74,$66,$71,$65	;			  ;6 - WITH
    547  f99a		       70 71 5e 6f*	      DC.B	$70,$71,$5E,$6F,$6F,$66,$6B,$64	;7 - STARRING
    548  f9a2		       83 88 8d 92*	      DC.B	$83,$88,$8D,$92,$97,$00,$00,$00	;8 - LINE 1 - MS PAC LO
    549  f9aa		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00
    550  f9b2		       84 89 8e 93*	      DC.B	$84,$89,$8E,$93,$98,$9C,$00,$00	;9 - LINE 2
    551  f9ba		       00 00 00 00*	      DC.B	$00,$00,$00,$00,$00,$00,$00,$00
    552  f9c2		       85 8a 8f 94*	      DC.B	$85,$8A,$8F,$94,$99,$9D,$A0,$00	;A - LINE 3
    553  f9ca		       a4 a7 aa ad*	      DC.B	$A4,$A7,$AA,$AD,$AF,$A4,$B2,$B3
    554  f9d2		       86 8b 90 95*	      DC.B	$86,$8B,$90,$95,$9A,$9E,$A1,$A3	;B - LINE 4
    555  f9da		       a5 a8 ab ae*	      DC.B	$A5,$A8,$AB,$AE,$95,$B0,$A8,$AB
    556  f9e2		       87 8c 91 96*	      DC.B	$87,$8C,$91,$96,$9B,$9F,$A2,$00	;C - LINE 5
    557  f9ea		       a6 a9 ac 91*	      DC.B	$A6,$A9,$AC,$91,$96,$B1,$A9,$AC
    558  f9f2		       72 70 62 00*	      DC.B	$72,$70,$62,$00,$67,$6C,$76,$70	;D - USE JOYS
    559  f9fa		       71 66 60 68*	      DC.B	$71,$66,$60,$68,$00,$71,$6C	;	      ;    TICK TO
    560  fa01		       60 65 5e 6b*	      DC.B	$60,$65,$5E,$6B,$64,$62,$00,$70	;E - CHANGE S
    561  fa09		       62 71 71 66*	      DC.B	$62,$71,$71,$66,$6B,$64,$70	;	      ;    ETTINGS
    562  fa10		       6c 6b 62 00*	      DC.B	$6C,$6B,$62,$00,$6D,$69,$5E,$76,$62,$6F	;11 - ONE PLAYER
    563  fa1a		       00		      DC.B	$00	;					;10 - PLAYER TWO
    564  fa1b		       71 74 6c 00*	      DC.B	$71,$74,$6C,$00,$6D,$69,$5E,$76,$62,$6F	;12 - TWO PLAYER
    565  fa25		       00 6c 6b 62	      DC.B	$00,$6C,$6B,$62	;			    ;F - PLAYER ONE
    566  fa29
    567  fa29		       71 62 61 61*TMESSAG2   DC.B	$71,$62,$61,$61,$76,$00,$5F,$62,$5E,$6F	;13 - TEDDY BEAR
    568  fa33		       00 60 65 62*	      DC.B	$00,$60,$65,$62,$6F,$6F,$66,$62,$70,$00	;14 -	CHERRIES
    569  fa3d		       70 71 6f 5e*	      DC.B	$70,$71,$6F,$5E,$74,$5F,$62,$6F,$6F,$76	;15 - STRAWBERRY
    570  fa47		       00 00 6c 6f*	      DC.B	$00,$00,$6C,$6F,$5E,$6B,$64,$62,$00,$00	;16 -	 ORANGE
    571  fa51		       00 6d 6f 62*	      DC.B	$00,$6D,$6F,$62,$71,$77,$62,$69,$00,$00	;17 -	PRETZEL
    572  fa5b		       00 00 5e 6d*	      DC.B	$00,$00,$5E,$6D,$6D,$69,$62,$00,$00,$00	;18 -	 APPLE
    573  fa65		       00 00 00 6d*	      DC.B	$00,$00,$00,$6D,$62,$5E,$6F,$00,$00,$00	;19 -	  PEAR
    574  fa6f		       00 00 5f 5e*	      DC.B	$00,$00,$5F,$5E,$6B,$5E,$6B,$5E,$00,$00	;1A -	 BANANA
    575  fa79		       5e 60 71 50*	      DC.B	$5E,$60,$71,$50,$55	;			;1B - ACT 1
    576  fa7e		       5e 60 71 50*	      DC.B	$5E,$60,$71,$50,$56	;			;1C - ACT 2
    577  fa83		       5e 60 71 50*	      DC.B	$5E,$60,$71,$50,$57	;			;1D - ACT 3
    578  fa88		       71 65 62 76*	      DC.B	$71,$65,$62,$76,$50,$6A,$62,$62,$71	;1E - THEY MEET
    579  fa91		       71 65 62 50*	      DC.B	$71,$65,$62,$50,$60,$65,$5E,$70,$62	;1F - THE CHASE
    580  fa9a		       67 72 6b 66*	      DC.B	$67,$72,$6B,$66,$6C,$6F,$50,$50,$50	;20 - JUNIOR
    581  faa3		       00 00 6f 62*	      DC.B	$00,$00,$6F,$62,$5E,$61,$76,$78,$00,$00	;21 -	 READY
    582  faad		       64 5e 6a 62*	      DC.B	$64,$5E,$6A,$62,$00,$00,$6C,$73,$62,$6F	;22 - GAME  OVER
    583  fab7
    584  fab7
    585  fab7							;*  START OF DIGITS FOR CURRENT AND NON-CURRENT PLAYERS
    586  fab7		       54 46	   NUMCHAR    DC.B	$54,$46
    587  fab9		       46 54	   NUMCHAR2   DC.B	$46,$54
    588  fabb
    589  fabb							;*  ZONES AND COLUMNS FOR MESSAGES
    590  fabb		       00 0a	   MESHZONE   EQU	$0A
    591  fabb		       00 10	   MESLZONE   EQU	$10
    592  fabb		       00 09	   MESCOL     EQU	$09
    593  fabb
    594  fabb							; END
------- FILE MDOIT.ASM
------- FILE LOADMAP.ASM LEVEL 2 PASS 2
      0  fabb					      include	"LOADMAP.ASM"
      1  fabb					      processor	6502
      2  fabb
      3  fabb							;*  LOADMAP.S	    ROUTINES DEALING WITH MAZE MAINTENANCE
      4  fabb
      5  fabb							;*  MAZE DRAWING ROUTINE: CALLED WITH THE NUMBER OF THE DESIRED MAZE IN RACK,
      6  fabb							;*  WILL DRAW THE APPROPRIATE MAZE.
      7  fabb
      8  fabb							;ZERO PAGE TEMPORARY VARIABLES.
      9  fabb							; TEMP0-7  : EIGHT BYTE SHIFT REGISTER
     10  fabb							; TEMP8-9  : POINTER TO MAZE DATA
     11  fabb							; TEMP10-11: POINTER TO PLAY FIELD (CHARACTER MAP)
     12  fabb							; TEMP12   : TEMPORARY VALUE STORAGE FOR COMPUTATIONS
     13  fabb							; TEMP13   : OFFSET TO PLAYFIELD POINTER FOR LEFT HALF OF MAZE
     14  fabb							; TEMP14   : OFFSET TO PLAYFIELD POINTER FOR RIGHT HALF OF MAZE
     15  fabb							; TEMP15   : COUNTER TO KEEP TRACK OF CURRENT ROW
     16  fabb
     17  fabb		       a9 00	   LOADMAP    LDA	#$00
     18  fabd		       85 a8		      STA	DOTS	;		     ;INITIALIZE DOT COUNTER
     19  fabf		       85 a9		      STA	DOTS+1
     20  fac1
     21  fac1		       a4 a5		      LDY	RACK
     22  fac3		       b9 8a fc 	      LDA	MAZEBEGL,Y
     23  fac6		       85 b8		      STA	TEMP8
     24  fac8		       b9 8e fc 	      LDA	MAZEBEGH,Y
     25  facb		       85 b9		      STA	TEMP8+1
     26  facd
     27  facd		       a9 00		      LDA	#0
     28  facf		       85 bd		      STA	TEMP13
     29  fad1		       a9 1b		      LDA	#WIDTH-1
     30  fad3		       85 be		      STA	TEMP14
     31  fad5
     32  fad5		       20 0a fc 	      JSR	LDSHFTL
     33  fad8
     34  fad8		       20 0e fc    NEXTCOL    JSR	LDSHFTH
     35  fadb
     36  fadb		       a9 00		      LDA	#<SCREEN
     37  fadd		       85 ba		      STA	TEMP10
     38  fadf		       a9 18		      LDA	#>SCREEN
     39  fae1		       85 bb		      STA	TEMP10+1
     40  fae3
     41  fae3		       a9 1e		      LDA	#HEIGHT
     42  fae5		       85 bf		      STA	TEMP15
     43  fae7
     44  fae7		       a5 b0	   NEXTROW    LDA	TEMP0+0
     45  fae9		       29 03		      AND	#$03
     46  faeb		       85 bc		      STA	TEMP12
     47  faed		       a5 b4		      LDA	TEMP0+4
     48  faef		       0a		      ASL
     49  faf0		       0a		      ASL
     50  faf1		       29 0c		      AND	#$0C
     51  faf3		       05 bc		      ORA	TEMP12
     52  faf5		       aa		      TAX
     53  faf6
     54  faf6		       a5 bd		      LDA	TEMP13
     55  faf8		       c9 0a		      CMP	#10
     56  fafa		       90 0c		      BCC	NOTPEN
     57  fafc		       a5 bf		      LDA	TEMP15
     58  fafe		       e9 0f		      SBC	#15
     59  fb00		       c9 05		      CMP	#5
     60  fb02		       b0 04		      BCS	NOTPEN
     61  fb04
     62  fb04							;PEN
     63  fb04		       8a		      TXA
     64  fb05		       69 10		      ADC	#$10
     65  fb07		       aa		      TAX
     66  fb08
     67  fb08				   NOTPEN
     68  fb08							;NORMAL PLAYFIELD
     69  fb08		       8a		      TXA		;			      ;SEE IF SHOULD BE AN EMPTY CHARACTER
     70  fb09		       c9 0f		      CMP	#$0F	;		     ;	NEAR THE BORDER INSTEAD OF FULL
     71  fb0b		       d0 08		      BNE	DOCHAR
     72  fb0d		       a5 bd		      LDA	TEMP13
     73  fb0f		       c9 03		      CMP	#$03
     74  fb11		       10 02		      BPL	DOCHAR
     75  fb13		       a2 00		      LDX	#$00	;		     ;IT SHOULD BE EMPTY
     76  fb15
     77  fb15		       bd ca fb    DOCHAR     LDA	LEFT,X
     78  fb18		       a4 bd		      LDY	TEMP13
     79  fb1a		       91 ba		      STA	(TEMP10),Y
     80  fb1c		       bd ea fb 	      LDA	RIGHT,X
     81  fb1f		       a4 be		      LDY	TEMP14
     82  fb21		       91 ba		      STA	(TEMP10),Y
     83  fb23
     84  fb23		       20 48 fb 	      JSR	SHIFT
     85  fb26
     86  fb26		       18		      CLC
     87  fb27		       a5 ba		      LDA	TEMP10
     88  fb29		       69 1c		      ADC	#WIDTH
     89  fb2b		       85 ba		      STA	TEMP10
     90  fb2d		       90 02		      BCC	NOINC
     91  fb2f		       e6 bb		      INC	TEMP10+1
     92  fb31
     93  fb31		       c6 bf	   NOINC      DEC	TEMP15
     94  fb33		       d0 b2		      BNE	NEXTROW
     95  fb35
     96  fb35		       e6 bd		      INC	TEMP13
     97  fb37		       c6 be		      DEC	TEMP14
     98  fb39		       a5 bd		      LDA	TEMP13
     99  fb3b		       c5 be		      CMP	TEMP14
    100  fb3d		       b0 13		      BCS	LOADDONE
    101  fb3f		       20 48 fb 	      JSR	SHIFT
    102  fb42		       20 48 fb 	      JSR	SHIFT
    103  fb45		       4c d8 fa 	      JMP	NEXTCOL
    104  fb48
    105  fb48		       a2 07	   SHIFT      LDX	#$07
    106  fb4a		       46 b7		      LSR	TEMP0+7
    107  fb4c		       76 af	   SHIFT1     ROR	TEMP0-1,X
    108  fb4e		       ca		      DEX
    109  fb4f		       d0 fb		      BNE	SHIFT1
    110  fb51		       60		      RTS
    111  fb52
    112  fb52		       a9 3d	   LOADDONE   LDA	#DOORCHAR	;		;PEN ENTRANCE CHARACTER
    113  fb54		       8d 1c 18 	      STA	SCREEN+28	;*11+13	;ENTRANCE AT 11TH ROW, 13TH COLUMN
    114  fb57		       8d 1c 18 	      STA	SCREEN+28	;*11+14	; AND 11TH ROW, 14TH COLUMN.
    115  fb5a
    116  fb5a							;*  THIS CODE TAKES CARE OF PUTTING UP THE DOTS
    117  fb5a		       a9 00		      LDA	#$00	;		     ;INITIALIZE EVERYTHING TO ZERO
    118  fb5c		       a8		      TAY
    119  fb5d		       85 b0		      STA	TEMP0
    120  fb5f		       85 b1		      STA	TEMP1
    121  fb61
    122  fb61		       b9 00 1c    LMDLOOP    LDA	DOTARRAY,Y	;	       ;GET NEW SET OF DOT BITS
    123  fb64		       85 bf		      STA	TEMP15
    124  fb66		       20 b8 fb 	      JSR	LMDOTS	;		   ;DO EACH OF THE 8 BITS
    125  fb69		       20 b8 fb 	      JSR	LMDOTS
    126  fb6c		       20 b8 fb 	      JSR	LMDOTS
    127  fb6f		       20 b8 fb 	      JSR	LMDOTS
    128  fb72		       20 b8 fb 	      JSR	LMDOTS
    129  fb75		       20 b8 fb 	      JSR	LMDOTS
    130  fb78		       20 b8 fb 	      JSR	LMDOTS
    131  fb7b		       20 b8 fb 	      JSR	LMDOTS
    132  fb7e		       c8		      INY
    133  fb7f		       c0 78		      CPY	#$78
    134  fb81		       d0 de		      BNE	LMDLOOP
    135  fb83
    136  fb83							;*  AND FINALLY - DO THE POWER DOTS
    137  fb83		       a4 a5		      LDY	RACK	;		     ;GET THE RACK
    138  fb85		       b9 6a ff 	      LDA	EDZONE0,Y
    139  fb88		       85 b0		      STA	TEMP0
    140  fb8a		       b9 72 ff 	      LDA	EDCOL0,Y
    141  fb8d		       85 b1		      STA	TEMP1
    142  fb8f		       20 ab fb 	      JSR	LMEDOTS	;		  ;ZONE 0 COLUMN 0
    143  fb92		       b9 76 ff 	      LDA	EDCOL1,Y
    144  fb95		       85 b1		      STA	TEMP1
    145  fb97		       20 ab fb 	      JSR	LMEDOTS	;		  ;ZONE 0 COLUMN 1
    146  fb9a		       b9 6e ff 	      LDA	EDZONE1,Y
    147  fb9d		       85 b0		      STA	TEMP0
    148  fb9f		       20 ab fb 	      JSR	LMEDOTS	;		  ;ZONE 1 COLUMN 1
    149  fba2		       b9 72 ff 	      LDA	EDCOL0,Y
    150  fba5		       85 b1		      STA	TEMP1
    151  fba7		       20 ab fb 	      JSR	LMEDOTS	;		  ;ZONE 1 COLUMN 0
    152  fbaa
    153  fbaa		       60		      RTS
    154  fbab
    155  fbab
    156  fbab							;*  THIS ROUTINE CHECKS FOR A PARTICULAR POWER DOT
    157  fbab		       20 0d f6    LMEDOTS    JSR	GETCHAR	;		  ;SEE WHAT"S THERE
    158  fbae		       c9 51		      CMP	#DOTCHAR	;		 ;IS IT A DOT?
    159  fbb0		       d0 05		      BNE	LMEDOUT
    160  fbb2		       a2 52		      LDX	#EDOTCHAR	;		;PUT AN EDOT DOWN
    161  fbb4		       20 f7 f5 	      JSR	PLOPCHAR
    162  fbb7		       60	   LMEDOUT    RTS
    163  fbb8
    164  fbb8
    165  fbb8							;*  THIS ROUTINE LOADS IN A PARTICULAR DOT
    166  fbb8		       06 bf	   LMDOTS     ASL	TEMP15	;		   ;GET A BIT OFF
    167  fbba		       90 0b		      BCC	LMDINC	;		   ;SEE IF A DOT HERE
    168  fbbc		       a2 51		      LDX	#DOTCHAR	;		 ;DOT HERE
    169  fbbe		       20 f7 f5 	      JSR	PLOPCHAR	;		 ;PUT IT IN
    170  fbc1		       e6 a8		      INC	DOTS	;		     ;ADD IT TO THE DOT COUNTER
    171  fbc3		       d0 02		      BNE	LMDINC
    172  fbc5		       e6 a9		      INC	DOTS+1
    173  fbc7		       4c 7b fc    LMDINC     JMP	NEXTPLOP	;		 ;INCREMENT COLUMN
    174  fbca
    175  fbca
    176  fbca		       50 30 31 32*LEFT       DC.B	$50,$30,$31,$32,$33,$34,$50,$35,$36,$50,$37,$38,$39,$3A,$3B,$3C
    177  fbda		       50 3e 3f 40*PLEFT      DC.B	$50,$3E,$3F,$40,$41,$42,$50,$50,$43,$50,$44,$50,$45,$50,$50,$50
    178  fbea		       50 33 36 39*RIGHT      DC.B	$50,$33,$36,$39,$30,$34,$50,$3A,$31,$50,$37,$3B,$32,$35,$38,$3C
    179  fbfa		       50 41 43 45*PRIGHT     DC.B	$50,$41,$43,$45,$3E,$42,$50,$50,$3F,$50,$44,$50,$40,$50,$50,$50
    180  fc0a
    181  fc0a		       a2 03	   LDSHFTL    LDX	#$03
    182  fc0c		       d0 02		      BNE	LDSHFT1
    183  fc0e		       a2 07	   LDSHFTH    LDX	#$07
    184  fc10		       a0 03	   LDSHFT1    LDY	#$03
    185  fc12		       b1 b8	   LDSHFT2    LDA	(TEMP8),Y
    186  fc14		       95 b0		      STA	TEMP0,X
    187  fc16		       ca		      DEX
    188  fc17		       88		      DEY
    189  fc18		       10 f8		      BPL	LDSHFT2
    190  fc1a		       18		      CLC
    191  fc1b		       a5 b8		      LDA	TEMP8
    192  fc1d		       69 04		      ADC	#$04
    193  fc1f		       85 b8		      STA	TEMP8
    194  fc21		       90 02		      BCC	LDSHFT3
    195  fc23		       e6 b9		      INC	TEMP8+1
    196  fc25		       60	   LDSHFT3    RTS
    197  fc26
    198  fc26
    199  fc26							; <=======================================================================>
    200  fc26
    201  fc26							;*  THIS ROUTINE LOADS IN THE DOTS FOR A NEW RACK INTO DOTARRAY
    202  fc26							;*  USES:  TEMP0-1, X
    203  fc26		       a6 a5	   LOADDOTS   LDX	RACK	;		     ;SET UP FOR TRANSFER
    204  fc28		       bd 92 fc 	      LDA	DOTBEGL,X
    205  fc2b		       85 b0		      STA	TEMP0
    206  fc2d		       bd 96 fc 	      LDA	DOTBEGH,X
    207  fc30		       85 b1		      STA	TEMP1
    208  fc32
    209  fc32		       a0 7f		      LDY	#$7F
    210  fc34		       b1 b0	   LDDLOOP    LDA	(TEMP0),Y	;		;AND MOVE THEM
    211  fc36		       99 00 1c 	      STA	DOTARRAY,Y
    212  fc39		       88		      DEY
    213  fc3a		       10 f8		      BPL	LDDLOOP
    214  fc3c		       60		      RTS
    215  fc3d
    216  fc3d
    217  fc3d							; <=======================================================================>
    218  fc3d
    219  fc3d							;*  THIS ROUTINE USES THE CHARACTER MAP IN SCREEN TO UPDATE THE INFORMATION
    220  fc3d							;*  IN DOTARRAY.
    221  fc3d		       a9 00	   SAVEDOTS   LDA	#$00	;		     ;INITIALIZE EVERYTHING TO ZERO
    222  fc3f		       a8		      TAY
    223  fc40		       85 b0		      STA	TEMP0
    224  fc42		       85 b1		      STA	TEMP1
    225  fc44
    226  fc44		       20 67 fc    SDLOOP     JSR	SDDOTS	;		   ;DO EACH OF THE 8 BITS
    227  fc47		       20 67 fc 	      JSR	SDDOTS
    228  fc4a		       20 67 fc 	      JSR	SDDOTS
    229  fc4d		       20 67 fc 	      JSR	SDDOTS
    230  fc50		       20 67 fc 	      JSR	SDDOTS
    231  fc53		       20 67 fc 	      JSR	SDDOTS
    232  fc56		       20 67 fc 	      JSR	SDDOTS
    233  fc59		       20 67 fc 	      JSR	SDDOTS
    234  fc5c		       a5 bf		      LDA	TEMP15
    235  fc5e		       99 00 1c 	      STA	DOTARRAY,Y
    236  fc61		       c8		      INY
    237  fc62		       c0 78		      CPY	#$78
    238  fc64		       d0 de		      BNE	SDLOOP
    239  fc66		       60		      RTS
    240  fc67
    241  fc67
    242  fc67							;*  THIS ROUTINE CHECKS FOR A PARTICULAR DOT
    243  fc67		       a5 b1	   SDDOTS     LDA	TEMP1	;		    ;SEE IF OUT OF RANGE
    244  fc69		       c9 1c		      CMP	#$1C
    245  fc6b		       10 0b		      BPL	SDNODOTS
    246  fc6d		       20 0d f6 	      JSR	GETCHAR	;		  ;FIND OUT WHAT IS HERE
    247  fc70		       c9 51		      CMP	#DOTCHAR
    248  fc72		       30 04		      BMI	SDNODOTS
    249  fc74		       38		      SEC		;			      ;SHIFT IN A 1
    250  fc75		       4c 79 fc 	      JMP	SDDOIT
    251  fc78		       18	   SDNODOTS   CLC		;			      ;SHIFT IN A 0
    252  fc79		       26 bf	   SDDOIT     ROL	TEMP15
    253  fc7b
    254  fc7b							;*  THIS ROUTINE INCREMENTS THE COLUMN FOR ROUTINES USING PUT/PLOPCHAR
    255  fc7b		       e6 b1	   NEXTPLOP   INC	TEMP1	;		    ;NEXT COLUMN
    256  fc7d		       a5 b1		      LDA	TEMP1
    257  fc7f		       c9 20		      CMP	#$20
    258  fc81		       30 06		      BMI	NCOUT
    259  fc83		       a9 00		      LDA	#$00	;		     ;NEXT ZONE
    260  fc85		       85 b1		      STA	TEMP1
    261  fc87		       e6 b0		      INC	TEMP0
    262  fc89		       60	   NCOUT      RTS
    263  fc8a
    264  fc8a							; <=======================================================================>
    265  fc8a
    266  fc8a							;TABLES OF POINTERS TO TABLES...
    267  fc8a
    268  fc8a		       9a 4e 02 b6 MAZEBEGL   DC.B	<MAZE1,<MAZE2,<MAZE3,<MAZE4
    269  fc8e		       fc fd fe fe MAZEBEGH   DC.B	>MAZE1,>MAZE2,>MAZE3,>MAZE4
    270  fc92
    271  fc92		       d6 8a 3e f2 DOTBEGL    DC.B	<DOT1,<DOT2,<DOT3,<DOT4
    272  fc96		       fc fd fe fe DOTBEGH    DC.B	>DOT1,>DOT2,>DOT3,>DOT4
    273  fc9a
    274  fc9a							; <=======================================================================>
    275  fc9a
    276  fc9a		       7f fe fc 7f*MAZE1      DC.B	$7F,$FE,$FC,$7F,$41,$FE,$3C,$40,$41,$FE,$3C,$40
    277  fca6		       09 00 00 4f*	      DC.B	$09,$00,$00,$4F,$09,$00,$00,$4F,$C9,$F3,$24,$4F
    278  fcb2		       01 12 24 40*	      DC.B	$01,$12,$24,$40,$01,$12,$24,$40,$4F,$92,$27,$4F
    279  fcbe		       41 00 04 41*	      DC.B	$41,$00,$04,$41,$41,$00,$04,$41,$49,$F2,$24,$49
    280  fcca		       09 f2 20 48*	      DC.B	$09,$F2,$20,$48,$09,$F2,$20,$48,$C9,$F3,$3C,$4F
    281  fcd6
    282  fcd6		       00 00 00 00*DOT1       DC.B	$00,$00,$00,$00,$7E,$7F,$E7,$E0
    283  fcde		       42 40 24 20*	      DC.B	$42,$40,$24,$20,$42,$40,$24,$20
    284  fce6		       7f ff ff e0*	      DC.B	$7F,$FF,$FF,$E0,$12,$09,$04,$80
    285  fcee		       12 09 04 80*	      DC.B	$12,$09,$04,$80,$13,$F9,$FC,$80
    286  fcf6		       10 00 00 80*	      DC.B	$10,$00,$00,$80,$10,$00,$00,$80
    287  fcfe		       10 00 00 80*	      DC.B	$10,$00,$00,$80,$10,$00,$00,$80
    288  fd06		       10 00 00 80*	      DC.B	$10,$00,$00,$80,$10,$00,$00,$80
    289  fd0e		       10 00 00 80*	      DC.B	$10,$00,$00,$80,$10,$00,$00,$80
    290  fd16		       10 00 00 80*	      DC.B	$10,$00,$00,$80,$10,$00,$00,$80
    291  fd1e		       10 00 00 80*	      DC.B	$10,$00,$00,$80,$1F,$C0,$3F,$80
    292  fd26		       10 40 20 80*	      DC.B	$10,$40,$20,$80,$10,$40,$20,$80
    293  fd2e		       7f f9 ff e0*	      DC.B	$7F,$F9,$FF,$E0,$42,$09,$04,$20
    294  fd36		       42 09 04 20*	      DC.B	$42,$09,$04,$20,$42,$79,$E4,$20
    295  fd3e		       42 40 24 20*	      DC.B	$42,$40,$24,$20,$42,$40,$24,$20
    296  fd46		       7f ff ff e0*	      DC.B	$7F,$FF,$FF,$E0,$00,$00,$00,$00
    297  fd4e
    298  fd4e							; <=======================================================================>
    299  fd4e
    300  fd4e		       f9 ff 3f 7f*MAZE2      DC.B	$F9,$FF,$3F,$7F,$09,$10,$3C,$41,$09,$10,$3C,$41
    301  fd5a		       c9 93 00 48*	      DC.B	$C9,$93,$00,$48,$49,$90,$00,$48,$49,$90,$27,$4F
    302  fd66		       41 02 20 40*	      DC.B	$41,$02,$20,$40,$41,$02,$20,$40,$4F,$3E,$E7,$49
    303  fd72		       01 00 24 48*	      DC.B	$01,$00,$24,$48,$01,$00,$24,$48,$C9,$F3,$00,$49
    304  fd7e		       09 f2 00 41*	      DC.B	$09,$F2,$00,$41,$09,$F2,$3C,$41,$79,$F2,$3C,$4F
    305  fd8a
    306  fd8a		       00 00 00 00*DOT2       DC.B	$00,$00,$00,$00,$00,$7F,$E0,$00
    307  fd92		       00 40 20 00*	      DC.B	$00,$40,$20,$00,$00,$40,$20,$00
    308  fd9a		       7f f9 ff e0*	      DC.B	$7F,$F9,$FF,$E0,$40,$49,$20,$20
    309  fda2		       40 49 20 20*	      DC.B	$40,$49,$20,$20,$4F,$CF,$3F,$20
    310  fdaa		       48 00 01 20*	      DC.B	$48,$00,$01,$20,$48,$00,$01,$20
    311  fdb2		       7e 00 07 e0*	      DC.B	$7E,$00,$07,$E0,$02,$00,$04,$00
    312  fdba		       02 00 04 00*	      DC.B	$02,$00,$04,$00,$7E,$00,$07,$E0
    313  fdc2		       42 00 04 20*	      DC.B	$42,$00,$04,$20,$42,$00,$04,$20
    314  fdca		       72 00 04 e0*	      DC.B	$72,$00,$04,$E0,$12,$00,$04,$80
    315  fdd2		       12 00 04 80*	      DC.B	$12,$00,$04,$80,$1F,$F0,$FF,$80
    316  fdda		       10 10 80 80*	      DC.B	$10,$10,$80,$80,$10,$10,$80,$80
    317  fde2		       1e 70 e7 80*	      DC.B	$1E,$70,$E7,$80,$12,$40,$24,$80
    318  fdea		       12 40 24 80*	      DC.B	$12,$40,$24,$80,$73,$F9,$FC,$E0
    319  fdf2		       42 09 04 20*	      DC.B	$42,$09,$04,$20,$42,$09,$04,$20
    320  fdfa		       7f ff ff e0*	      DC.B	$7F,$FF,$FF,$E0,$00,$00,$00,$00
    321  fe02
    322  fe02							; <=======================================================================>
    323  fe02
    324  fe02		       ff fc ff 7f MAZE3      DC.B	$FF,$FC,$FF,$7F
    325  fe06		       81 00 20 40	      DC.B	$81,$00,$20,$40
    326  fe0a		       81 00 20 40	      DC.B	$81,$00,$20,$40
    327  fe0e		       99 9c 07 49	      DC.B	$99,$9C,$07,$49
    328  fe12		       09 10 04 49	      DC.B	$09,$10,$04,$49
    329  fe16		       09 10 e4 49	      DC.B	$09,$10,$E4,$49
    330  fe1a		       c9 83 00 40	      DC.B	$C9,$83,$00,$40
    331  fe1e		       09 82 00 40	      DC.B	$09,$82,$00,$40
    332  fe22		       09 f2 3c 7f	      DC.B	$09,$F2,$3C,$7F
    333  fe26		       41 00 04 41	      DC.B	$41,$00,$04,$41
    334  fe2a		       41 00 04 41	      DC.B	$41,$00,$04,$41
    335  fe2e		       4f f2 24 49	      DC.B	$4F,$F2,$24,$49
    336  fe32		       01 f2 20 48	      DC.B	$01,$F2,$20,$48
    337  fe36		       01 f2 20 48	      DC.B	$01,$F2,$20,$48
    338  fe3a		       79 f2 3c 4f	      DC.B	$79,$F2,$3C,$4F
    339  fe3e
    340  fe3e		       00 00 00 00*DOT3       DC.B	$00,$00,$00,$00,$7F,$CF,$3F,$E0
    341  fe46		       40 49 20 20*	      DC.B	$40,$49,$20,$20,$40,$49,$20,$20
    342  fe4e		       4f f9 ff 20*	      DC.B	$4F,$F9,$FF,$20,$79,$09,$09,$E0
    343  fe56		       09 09 09 00*	      DC.B	$09,$09,$09,$00,$09,$FF,$F9,$00
    344  fe5e		       78 00 01 e0*	      DC.B	$78,$00,$01,$E0,$40,$00,$00,$20
    345  fe66		       40 00 00 20*	      DC.B	$40,$00,$00,$20,$40,$00,$00,$20
    346  fe6e		       40 00 00 20*	      DC.B	$40,$00,$00,$20,$40,$00,$00,$20
    347  fe76		       40 00 00 20*	      DC.B	$40,$00,$00,$20,$40,$00,$00,$20
    348  fe7e		       40 00 00 20*	      DC.B	$40,$00,$00,$20,$40,$00,$00,$20
    349  fe86		       40 00 00 20*	      DC.B	$40,$00,$00,$20,$7E,$79,$E7,$E0
    350  fe8e		       12 40 24 80*	      DC.B	$12,$40,$24,$80,$12,$40,$24,$80
    351  fe96		       73 f9 fc e0*	      DC.B	$73,$F9,$FC,$E0,$42,$09,$04,$20
    352  fe9e		       42 09 04 20*	      DC.B	$42,$09,$04,$20,$7E,$79,$E7,$E0
    353  fea6		       42 40 24 20*	      DC.B	$42,$40,$24,$20,$42,$40,$24,$20
    354  feae		       7e 7f e7 e0*	      DC.B	$7E,$7F,$E7,$E0,$00,$00,$00,$00
    355  feb6
    356  feb6							; <=======================================================================>
    357  feb6
    358  feb6		       ff 4f fe 7f MAZE4      DC.B	$FF,$4F,$FE,$7F
    359  feba		       01 4e 3e 40	      DC.B	$01,$4E,$3E,$40
    360  febe		       01 4e 3e 40	      DC.B	$01,$4E,$3E,$40
    361  fec2		       79 40 00 4f	      DC.B	$79,$40,$00,$4F
    362  fec6		       41 40 00 41	      DC.B	$41,$40,$00,$41
    363  feca		       41 f2 39 41	      DC.B	$41,$F2,$39,$41
    364  fece		       09 02 20 48	      DC.B	$09,$02,$20,$48
    365  fed2		       09 02 20 48	      DC.B	$09,$02,$20,$48
    366  fed6		       c9 9f 27 4f	      DC.B	$C9,$9F,$27,$4F
    367  feda		       01 02 04 48	      DC.B	$01,$02,$04,$48
    368  fede		       01 02 04 48	      DC.B	$01,$02,$04,$48
    369  fee2		       79 f2 e4 49	      DC.B	$79,$F2,$E4,$49
    370  fee6		       09 f0 00 41	      DC.B	$09,$F0,$00,$41
    371  feea		       09 f0 00 41	      DC.B	$09,$F0,$00,$41
    372  feee		       c9 f3 3c 79	      DC.B	$C9,$F3,$3C,$79
    373  fef2
    374  fef2		       00 00 00 00*DOT4       DC.B	$00,$00,$00,$00,$7F,$FF,$FF,$E0
    375  fefa		       48 40 21 20*	      DC.B	$48,$40,$21,$20,$48,$40,$21,$20
    376  ff02		       4f cf 3f 20*	      DC.B	$4F,$CF,$3F,$20,$42,$49,$24,$20
    377  ff0a		       42 49 24 20*	      DC.B	$42,$49,$24,$20,$7E,$79,$E7,$E0
    378  ff12		       10 00 00 80*	      DC.B	$10,$00,$00,$80,$10,$00,$00,$80
    379  ff1a		       1e 00 07 80*	      DC.B	$1E,$00,$07,$80,$02,$00,$04,$00
    380  ff22		       02 00 04 00*	      DC.B	$02,$00,$04,$00,$02,$00,$04,$00
    381  ff2a		       02 00 04 00*	      DC.B	$02,$00,$04,$00,$02,$00,$04,$00
    382  ff32		       02 00 04 00*	      DC.B	$02,$00,$04,$00,$1E,$00,$07,$80
    383  ff3a		       12 00 04 80*	      DC.B	$12,$00,$04,$80,$13,$C0,$3C,$80
    384  ff42		       10 40 20 80*	      DC.B	$10,$40,$20,$80,$10,$40,$20,$80
    385  ff4a		       7f c0 3f e0*	      DC.B	$7F,$C0,$3F,$E0,$42,$40,$24,$20
    386  ff52		       42 40 24 20*	      DC.B	$42,$40,$24,$20,$4E,$7F,$E7,$20
    387  ff5a		       48 09 01 20*	      DC.B	$48,$09,$01,$20,$48,$09,$01,$20
    388  ff62		       7f f9 ff e0*	      DC.B	$7F,$F9,$FF,$E0,$00,$00,$00,$00
    389  ff6a
    390  ff6a							; <=======================================================================>
    391  ff6a
    392  ff6a							;CONSTANT VALUES FOR MS.PACMAN
    393  ff6a		       00 1c	   WIDTH      EQU	28
    394  ff6a		       00 1e	   HEIGHT     EQU	30
    395  ff6a
    396  ff6a							;*  ZONES AND COLUMNS FOR THE ENERGY DOTS - INDEXED BY RACK
    397  ff6a		       03 04 03 03 EDZONE0    DC.B	$03,$04,$03,$03
    398  ff6e		       19 19 16 1a EDZONE1    DC.B	$19,$19,$16,$1A
    399  ff72		       01 01 01 01 EDCOL0     DC.B	$01,$01,$01,$01
    400  ff76		       1a 1a 1a 1a EDCOL1     DC.B	$1A,$1A,$1A,$1A
    401  ff7a
    402  ff7a							; END
------- FILE MDOIT.ASM
     72  ff7a					      align	2
------- FILE END.ASM LEVEL 2 PASS 2
      0  ff7a					      include	"END.ASM"
      1  ff7a					      processor	6502
      2  ff7a
      3  ff7a							;*  END.S	    CONTAINS THE END STATEMENT
      4  ff7a
      5  ff7a		       47 43 43 28*END	      DC.B	"GCC(C)1984"	;	     ;LABEL TO SEE WHERE END OF ROM IS
      6  ff84
      7  fff8					      ORG	$FFF8
      8  fff8		       ff c7		      DC.B	$FF,$C7	;		  ;START AT $C000, + MARIA SIGNATURE
END.ASM (9): error: Value in 'byte dc 62299' must be <$100.
      9  fffa		       5b		      DC.B	DLI	;		      ;INTERRUPT VECTOR
END.ASM (10): error: Value in 'byte dc 51744' must be <$100.
     10  fffb		       20		      DC.B	MAIN	;		     ;START VECTOR
END.ASM (11): error: Value in 'byte dc 62506' must be <$100.
     11  fffc		       2a		      DC.B	NULLRTI	;		  ;UNUSED VECTOR
     12  fffd
     13  fffd
     14  fffd							; END
------- FILE MDOIT.ASM
     74  fffe		       00		      align	2
     75  fffe							; not sure what these macros are for lolz
     76  fffe							; JA
     77  fffe							; SE
     78  fffe							; MS.S
     79  fffe							; MACRO
     80  fffe							; R:1:MS.A
     81  fffe
     82  fffe
     83  fffe							; JL
     84  fffe							; S
     85  fffe							; 1:MS.A
     86  fffe
     87  fffe							; R:1:MS.Z
     88  fffe
     89  fffe
     90  fffe
     91  fffe							; J^^MUP
     92  fffe							; END
