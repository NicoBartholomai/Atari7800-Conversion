------- FILE intro.asm LEVEL 1 PASS 2
      1  10000 ????
      2  10000 ????						;
      3  10000 ????
      4  10000 ????				       PROCESSOR	6502
------- FILE vcs.h LEVEL 2 PASS 2
      0  10000 ????				       INCLUDE	"vcs.h"
      1  10000 ????						; VCS.H
      2  10000 ????						; Version 1.05, 13/November/2003
      3  10000 ????
      4  10000 ????		00 69	    VERSION_VCS =	105
      5  10000 ????
      6  10000 ????			   -	       IFNCONST	TIA_BASE_ADDRESS
      7  10000 ????			   -TIA_BASE_ADDRESS =	0
      8  10000 ????				       ENDIF
      9  10000 ????
     10  10000 ????
     11  10000 ????			   -	       IFNCONST	TIA_BASE_READ_ADDRESS
     12  10000 ????			   -TIA_BASE_READ_ADDRESS =	TIA_BASE_ADDRESS
     13  10000 ????				       ENDIF
     14  10000 ????
     15  10000 ????			   -	       IFNCONST	TIA_BASE_WRITE_ADDRESS
     16  10000 ????			   -TIA_BASE_WRITE_ADDRESS =	TIA_BASE_ADDRESS
     17  10000 ????				       ENDIF
     18  10000 ????
     19  10000 ????
     20 U002d ????				      SEG.U	TIA_REGISTERS_WRITE
     21 U0000					      ORG	TIA_BASE_WRITE_ADDRESS
     22 U0000
     23 U0000							; DO NOT CHANGE THE RELATIVE ORDERING OF REGISTERS!
     24 U0000
     25 U0000		       00	   VSYNC      ds	1	; $00	 0000 00x0   Vertical Sync Set-Clear
     26 U0001		       00	   VBLANK     ds	1	; $01	 xx00 00x0   Vertical Blank Set-Clear
     27 U0002		       00	   WSYNC      ds	1	; $02	 ---- ----   Wait for Horizontal Blank
     28 U0003		       00	   RSYNC      ds	1	; $03	 ---- ----   Reset Horizontal Sync Counter
     29 U0004		       00	   NUSIZ0     ds	1	; $04	 00xx 0xxx   Number-Size player/missle 0
     30 U0005		       00	   NUSIZ1     ds	1	; $05	 00xx 0xxx   Number-Size player/missle 1
     31 U0006		       00	   COLUP0     ds	1	; $06	 xxxx xxx0   Color-Luminance Player 0
     32 U0007		       00	   COLUP1     ds	1	; $07	 xxxx xxx0   Color-Luminance Player 1
     33 U0008		       00	   COLUPF     ds	1	; $08	 xxxx xxx0   Color-Luminance Playfield
     34 U0009		       00	   COLUBK     ds	1	; $09	 xxxx xxx0   Color-Luminance Background
     35 U000a		       00	   CTRLPF     ds	1	; $0A	 00xx 0xxx   Control Playfield, Ball, Collisions
     36 U000b		       00	   REFP0      ds	1	; $0B	 0000 x000   Reflection Player 0
     37 U000c		       00	   REFP1      ds	1	; $0C	 0000 x000   Reflection Player 1
     38 U000d		       00	   PF0	      ds	1	; $0D	 xxxx 0000   Playfield Register Byte 0
     39 U000e		       00	   PF1	      ds	1	; $0E	 xxxx xxxx   Playfield Register Byte 1
     40 U000f		       00	   PF2	      ds	1	; $0F	 xxxx xxxx   Playfield Register Byte 2
     41 U0010		       00	   RESP0      ds	1	; $10	 ---- ----   Reset Player 0
     42 U0011		       00	   RESP1      ds	1	; $11	 ---- ----   Reset Player 1
     43 U0012		       00	   RESM0      ds	1	; $12	 ---- ----   Reset Missle 0
     44 U0013		       00	   RESM1      ds	1	; $13	 ---- ----   Reset Missle 1
     45 U0014		       00	   RESBL      ds	1	; $14	 ---- ----   Reset Ball
     46 U0015		       00	   AUDC0      ds	1	; $15	 0000 xxxx   Audio Control 0
     47 U0016		       00	   AUDC1      ds	1	; $16	 0000 xxxx   Audio Control 1
     48 U0017		       00	   AUDF0      ds	1	; $17	 000x xxxx   Audio Frequency 0
     49 U0018		       00	   AUDF1      ds	1	; $18	 000x xxxx   Audio Frequency 1
     50 U0019		       00	   AUDV0      ds	1	; $19	 0000 xxxx   Audio Volume 0
     51 U001a		       00	   AUDV1      ds	1	; $1A	 0000 xxxx   Audio Volume 1
     52 U001b		       00	   GRP0       ds	1	; $1B	 xxxx xxxx   Graphics Register Player 0
     53 U001c		       00	   GRP1       ds	1	; $1C	 xxxx xxxx   Graphics Register Player 1
     54 U001d		       00	   ENAM0      ds	1	; $1D	 0000 00x0   Graphics Enable Missle 0
     55 U001e		       00	   ENAM1      ds	1	; $1E	 0000 00x0   Graphics Enable Missle 1
     56 U001f		       00	   ENABL      ds	1	; $1F	 0000 00x0   Graphics Enable Ball
     57 U0020		       00	   HMP0       ds	1	; $20	 xxxx 0000   Horizontal Motion Player 0
     58 U0021		       00	   HMP1       ds	1	; $21	 xxxx 0000   Horizontal Motion Player 1
     59 U0022		       00	   HMM0       ds	1	; $22	 xxxx 0000   Horizontal Motion Missle 0
     60 U0023		       00	   HMM1       ds	1	; $23	 xxxx 0000   Horizontal Motion Missle 1
     61 U0024		       00	   HMBL       ds	1	; $24	 xxxx 0000   Horizontal Motion Ball
     62 U0025		       00	   VDELP0     ds	1	; $25	 0000 000x   Vertical Delay Player 0
     63 U0026		       00	   VDELP1     ds	1	; $26	 0000 000x   Vertical Delay Player 1
     64 U0027		       00	   VDELBL     ds	1	; $27	 0000 000x   Vertical Delay Ball
     65 U0028		       00	   RESMP0     ds	1	; $28	 0000 00x0   Reset Missle 0 to Player 0
     66 U0029		       00	   RESMP1     ds	1	; $29	 0000 00x0   Reset Missle 1 to Player 1
     67 U002a		       00	   HMOVE      ds	1	; $2A	 ---- ----   Apply Horizontal Motion
     68 U002b		       00	   HMCLR      ds	1	; $2B	 ---- ----   Clear Horizontal Move Registers
     69 U002c		       00	   CXCLR      ds	1	; $2C	 ---- ----   Clear Collision Latches
     70 U002d
     71 U002d							;-------------------------------------------------------------------------------
     72 U002d
     73 U000e ????				      SEG.U	TIA_REGISTERS_READ
     74 U0000					      ORG	TIA_BASE_READ_ADDRESS
     75 U0000
     76 U0000							;											bit 7	 bit 6
     77 U0000		       00	   CXM0P      ds	1	; $00	     xx00 0000	     Read Collision  M0-P1   M0-P0
     78 U0001		       00	   CXM1P      ds	1	; $01	     xx00 0000			     M1-P0   M1-P1
     79 U0002		       00	   CXP0FB     ds	1	; $02	     xx00 0000			     P0-PF   P0-BL
     80 U0003		       00	   CXP1FB     ds	1	; $03	     xx00 0000			     P1-PF   P1-BL
     81 U0004		       00	   CXM0FB     ds	1	; $04	     xx00 0000			     M0-PF   M0-BL
     82 U0005		       00	   CXM1FB     ds	1	; $05	     xx00 0000			     M1-PF   M1-BL
     83 U0006		       00	   CXBLPF     ds	1	; $06	     x000 0000			     BL-PF   -----
     84 U0007		       00	   CXPPMM     ds	1	; $07	     xx00 0000			     P0-P1   M0-M1
     85 U0008		       00	   INPT0      ds	1	; $08	     x000 0000	     Read Pot Port 0
     86 U0009		       00	   INPT1      ds	1	; $09	     x000 0000	     Read Pot Port 1
     87 U000a		       00	   INPT2      ds	1	; $0A	     x000 0000	     Read Pot Port 2
     88 U000b		       00	   INPT3      ds	1	; $0B	     x000 0000	     Read Pot Port 3
     89 U000c		       00	   INPT4      ds	1	; $0C		x000 0000	 Read Input (Trigger) 0
     90 U000d		       00	   INPT5      ds	1	; $0D		x000 0000	 Read Input (Trigger) 1
     91 U000e
     92 U000e							;-------------------------------------------------------------------------------
     93 U000e
     94 U0298 ????				      SEG.U	RIOT
     95 U0280					      ORG	$280
     96 U0280
     97 U0280							; RIOT MEMORY MAP
     98 U0280
     99 U0280		       00	   SWCHA      ds	1	; $280      Port A data register for joysticks:
    100 U0281							;			Bits 4-7 for player 1.  Bits 0-3 for player 2.
    101 U0281
    102 U0281		       00	   SWACNT     ds	1	; $281      Port A data direction register (DDR)
    103 U0282		       00	   SWCHB      ds	1	; $282		Port B data (console switches)
    104 U0283		       00	   SWBCNT     ds	1	; $283      Port B DDR
    105 U0284		       00	   INTIM      ds	1	; $284		Timer output
    106 U0285
    107 U0285		       00	   TIMINT     ds	1	; $285
    108 U0286
    109 U0286							; Unused/undefined registers ($285-$294)
    110 U0286
    111 U0286		       00		      ds	1	; $286
    112 U0287		       00		      ds	1	; $287
    113 U0288		       00		      ds	1	; $288
    114 U0289		       00		      ds	1	; $289
    115 U028a		       00		      ds	1	; $28A
    116 U028b		       00		      ds	1	; $28B
    117 U028c		       00		      ds	1	; $28C
    118 U028d		       00		      ds	1	; $28D
    119 U028e		       00		      ds	1	; $28E
    120 U028f		       00		      ds	1	; $28F
    121 U0290		       00		      ds	1	; $290
    122 U0291		       00		      ds	1	; $291
    123 U0292		       00		      ds	1	; $292
    124 U0293		       00		      ds	1	; $293
    125 U0294
    126 U0294		       00	   TIM1T      ds	1	; $294		set 1 clock interval
    127 U0295		       00	   TIM8T      ds	1	; $295      set 8 clock interval
    128 U0296		       00	   TIM64T     ds	1	; $296      set 64 clock interval
    129 U0297		       00	   T1024T     ds	1	; $297      set 1024 clock interval
    130 U0298
    131 U0298							;-------------------------------------------------------------------------------
    132 U0298							; The following required for back-compatibility with code which does not use
    133 U0298							; segments.
    134 U0298
    135  10000 ????				       SEG
    136  10000 ????
    137  10000 ????						; EOF
------- FILE intro.asm
      6  10000 ????
      7  f000					      ORG	$F000	; Start of "cart area" (see Atari memory map)
      8  f000
      9  f000				   StartFrame
     10  f000		       a9 02		      lda	#%00000010	; Vertical sync is signaled by VSYNC's bit 1...
     11  f002		       85 00		      sta	VSYNC
     12  f004					      REPEAT	3	; ...and lasts 3 scanlines
     13  f004		       85 02		      sta	WSYNC	; (WSYNC write => wait for end of scanline)
     12  f004					      REPEND
     13  f006		       85 02		      sta	WSYNC	; (WSYNC write => wait for end of scanline)
     12  f006					      REPEND
     13  f008		       85 02		      sta	WSYNC	; (WSYNC write => wait for end of scanline)
     14  f00a					      REPEND
     15  f00a		       a9 00		      lda	#0
     16  f00c		       85 00		      sta	VSYNC	; Signal vertical sync by clearing the bit
     17  f00e
     18  f00e				   PreparePlayfield		; We'll use the first VBLANK scanline for setup
     19  f00e		       a9 00		      lda	#$00	; (could have done it before, just once)
     20  f010		       85 1f		      sta	ENABL	; Turn off ball, missiles and players
     21  f012		       85 1d		      sta	ENAM0
     22  f014		       85 1e		      sta	ENAM1
     23  f016		       85 1b		      sta	GRP0
     24  f018		       85 1c		      sta	GRP1
     25  f01a		       85 09		      sta	COLUBK	; Background color (black)
     26  f01c		       85 0d		      sta	PF0	; PF0 and PF2 will be "off" (we'll focus on PF1)...
     27  f01e		       85 0f		      sta	PF2
     28  f020		       a9 ab		      lda	#$AB	; Playfield collor (yellow-ish)
     29  f022		       85 08		      sta	COLUPF
     30  f024		       a9 00		      lda	#$00	; Ensure we will duplicate (and not reflect) PF
     31  f026		       85 0a		      sta	CTRLPF
     32  f028		       a2 00		      ldx	#0	; X will count visible scanlines, let's reset it
     33  f02a					      REPEAT	37	; Wait until this (and the other 36) vertical blank
     34  f02a		       85 02		      sta	WSYNC	; scanlines are finished
     33  f02a					      REPEND
     34  f02c		       85 02		      sta	WSYNC	; scanlines are finished
     33  f02c					      REPEND
     34  f02e		       85 02		      sta	WSYNC	; scanlines are finished
     33  f02e					      REPEND
     34  f030		       85 02		      sta	WSYNC	; scanlines are finished
     33  f030					      REPEND
     34  f032		       85 02		      sta	WSYNC	; scanlines are finished
     33  f032					      REPEND
     34  f034		       85 02		      sta	WSYNC	; scanlines are finished
     33  f034					      REPEND
     34  f036		       85 02		      sta	WSYNC	; scanlines are finished
     33  f036					      REPEND
     34  f038		       85 02		      sta	WSYNC	; scanlines are finished
     33  f038					      REPEND
     34  f03a		       85 02		      sta	WSYNC	; scanlines are finished
     33  f03a					      REPEND
     34  f03c		       85 02		      sta	WSYNC	; scanlines are finished
     33  f03c					      REPEND
     34  f03e		       85 02		      sta	WSYNC	; scanlines are finished
     33  f03e					      REPEND
     34  f040		       85 02		      sta	WSYNC	; scanlines are finished
     33  f040					      REPEND
     34  f042		       85 02		      sta	WSYNC	; scanlines are finished
     33  f042					      REPEND
     34  f044		       85 02		      sta	WSYNC	; scanlines are finished
     33  f044					      REPEND
     34  f046		       85 02		      sta	WSYNC	; scanlines are finished
     33  f046					      REPEND
     34  f048		       85 02		      sta	WSYNC	; scanlines are finished
     33  f048					      REPEND
     34  f04a		       85 02		      sta	WSYNC	; scanlines are finished
     33  f04a					      REPEND
     34  f04c		       85 02		      sta	WSYNC	; scanlines are finished
     33  f04c					      REPEND
     34  f04e		       85 02		      sta	WSYNC	; scanlines are finished
     33  f04e					      REPEND
     34  f050		       85 02		      sta	WSYNC	; scanlines are finished
     33  f050					      REPEND
     34  f052		       85 02		      sta	WSYNC	; scanlines are finished
     33  f052					      REPEND
     34  f054		       85 02		      sta	WSYNC	; scanlines are finished
     33  f054					      REPEND
     34  f056		       85 02		      sta	WSYNC	; scanlines are finished
     33  f056					      REPEND
     34  f058		       85 02		      sta	WSYNC	; scanlines are finished
     33  f058					      REPEND
     34  f05a		       85 02		      sta	WSYNC	; scanlines are finished
     33  f05a					      REPEND
     34  f05c		       85 02		      sta	WSYNC	; scanlines are finished
     33  f05c					      REPEND
     34  f05e		       85 02		      sta	WSYNC	; scanlines are finished
     33  f05e					      REPEND
     34  f060		       85 02		      sta	WSYNC	; scanlines are finished
     33  f060					      REPEND
     34  f062		       85 02		      sta	WSYNC	; scanlines are finished
     33  f062					      REPEND
     34  f064		       85 02		      sta	WSYNC	; scanlines are finished
     33  f064					      REPEND
     34  f066		       85 02		      sta	WSYNC	; scanlines are finished
     33  f066					      REPEND
     34  f068		       85 02		      sta	WSYNC	; scanlines are finished
     33  f068					      REPEND
     34  f06a		       85 02		      sta	WSYNC	; scanlines are finished
     33  f06a					      REPEND
     34  f06c		       85 02		      sta	WSYNC	; scanlines are finished
     33  f06c					      REPEND
     34  f06e		       85 02		      sta	WSYNC	; scanlines are finished
     33  f06e					      REPEND
     34  f070		       85 02		      sta	WSYNC	; scanlines are finished
     33  f070					      REPEND
     34  f072		       85 02		      sta	WSYNC	; scanlines are finished
     35  f074					      REPEND
     36  f074		       a9 00		      lda	#0	; Vertical blank is done, we can "turn on" the beam
     37  f076		       85 01		      sta	VBLANK
     38  f078
     39  f078				   Scanline
     40  f078		       e0 ae		      cpx	#174	; "HELLO WORLD" = (11 chars x 8 lines - 1) x 2 scanlines =
     41  f07a		       b0 08		      bcs	ScanlineEnd	;   174 (0 to 173). After that, skip drawing code
     42  f07c		       8a		      txa		; We want each byte of the hello world phrase on 2 scanlines,
     43  f07d		       4a		      lsr		;   which means Y (bitmap counter) = X (scanline counter) / 2.
     44  f07e		       a8		      tay		;   For division by two we use (A-only) right-shift
     45  f07f		       b9 ce f0 	      lda	Phrase,y	; "Phrase,Y" = mem(Phrase+Y) (Y-th address after Phrase)
     46  f082		       85 0e		      sta	PF1	; Put the value on PF bits 4-11 (0-3 is PF0, 12-15 is PF2)
     47  f084				   ScanlineEnd
     48  f084		       85 02		      sta	WSYNC	; Wait for scanline end
     49  f086		       e8		      inx		; Increase counter; repeat untill we got all kernel scanlines
     50  f087		       e0 bf		      cpx	#191
     51  f089		       d0 ed		      bne	Scanline
     52  f08b
     53  f08b				   Overscan
     54  f08b		       a9 42		      lda	#%01000010	; "turn off" the beam again...
     55  f08d		       85 01		      sta	VBLANK	;
     56  f08f					      REPEAT	30	; ...for 30 overscan scanlines...
     57  f08f		       85 02		      sta	WSYNC
     56  f08f					      REPEND
     57  f091		       85 02		      sta	WSYNC
     56  f091					      REPEND
     57  f093		       85 02		      sta	WSYNC
     56  f093					      REPEND
     57  f095		       85 02		      sta	WSYNC
     56  f095					      REPEND
     57  f097		       85 02		      sta	WSYNC
     56  f097					      REPEND
     57  f099		       85 02		      sta	WSYNC
     56  f099					      REPEND
     57  f09b		       85 02		      sta	WSYNC
     56  f09b					      REPEND
     57  f09d		       85 02		      sta	WSYNC
     56  f09d					      REPEND
     57  f09f		       85 02		      sta	WSYNC
     56  f09f					      REPEND
     57  f0a1		       85 02		      sta	WSYNC
     56  f0a1					      REPEND
     57  f0a3		       85 02		      sta	WSYNC
     56  f0a3					      REPEND
     57  f0a5		       85 02		      sta	WSYNC
     56  f0a5					      REPEND
     57  f0a7		       85 02		      sta	WSYNC
     56  f0a7					      REPEND
     57  f0a9		       85 02		      sta	WSYNC
     56  f0a9					      REPEND
     57  f0ab		       85 02		      sta	WSYNC
     56  f0ab					      REPEND
     57  f0ad		       85 02		      sta	WSYNC
     56  f0ad					      REPEND
     57  f0af		       85 02		      sta	WSYNC
     56  f0af					      REPEND
     57  f0b1		       85 02		      sta	WSYNC
     56  f0b1					      REPEND
     57  f0b3		       85 02		      sta	WSYNC
     56  f0b3					      REPEND
     57  f0b5		       85 02		      sta	WSYNC
     56  f0b5					      REPEND
     57  f0b7		       85 02		      sta	WSYNC
     56  f0b7					      REPEND
     57  f0b9		       85 02		      sta	WSYNC
     56  f0b9					      REPEND
     57  f0bb		       85 02		      sta	WSYNC
     56  f0bb					      REPEND
     57  f0bd		       85 02		      sta	WSYNC
     56  f0bd					      REPEND
     57  f0bf		       85 02		      sta	WSYNC
     56  f0bf					      REPEND
     57  f0c1		       85 02		      sta	WSYNC
     56  f0c1					      REPEND
     57  f0c3		       85 02		      sta	WSYNC
     56  f0c3					      REPEND
     57  f0c5		       85 02		      sta	WSYNC
     56  f0c5					      REPEND
     57  f0c7		       85 02		      sta	WSYNC
     56  f0c7					      REPEND
     57  f0c9		       85 02		      sta	WSYNC
     58  f0cb					      REPEND
     59  f0cb		       4c 00 f0 	      jmp	StartFrame	; ...and start it over!
     60  f0ce
     61  f0ce				   Phrase
     62  f0ce		       00		      .BYTE.b	%00000000	; H
     63  f0cf		       42		      .BYTE.b	%01000010
     64  f0d0		       7e		      .BYTE.b	%01111110
     65  f0d1		       42		      .BYTE.b	%01000010
     66  f0d2		       42		      .BYTE.b	%01000010
     67  f0d3		       42		      .BYTE.b	%01000010
     68  f0d4		       00		      .BYTE.b	%00000000
     69  f0d5		       00		      .BYTE.b	%00000000	; E
     70  f0d6		       7e		      .BYTE.b	%01111110
     71  f0d7		       40		      .BYTE.b	%01000000
     72  f0d8		       7c		      .BYTE.b	%01111100
     73  f0d9		       40		      .BYTE.b	%01000000
     74  f0da		       40		      .BYTE.b	%01000000
     75  f0db		       7e		      .BYTE.b	%01111110
     76  f0dc		       00		      .BYTE.b	%00000000
     77  f0dd		       00		      .BYTE.b	%00000000	; L
     78  f0de		       40		      .BYTE.b	%01000000
     79  f0df		       40		      .BYTE.b	%01000000
     80  f0e0		       40		      .BYTE.b	%01000000
     81  f0e1		       40		      .BYTE.b	%01000000
     82  f0e2		       40		      .BYTE.b	%01000000
     83  f0e3		       7e		      .BYTE.b	%01111110
     84  f0e4		       00		      .BYTE.b	%00000000
     85  f0e5		       00		      .BYTE.b	%00000000	; L
     86  f0e6		       40		      .BYTE.b	%01000000
     87  f0e7		       40		      .BYTE.b	%01000000
     88  f0e8		       40		      .BYTE.b	%01000000
     89  f0e9		       40		      .BYTE.b	%01000000
     90  f0ea		       40		      .BYTE.b	%01000000
     91  f0eb		       7e		      .BYTE.b	%01111110
     92  f0ec		       00		      .BYTE.b	%00000000	; O
     93  f0ed		       00		      .BYTE.b	%00000000
     94  f0ee		       3c		      .BYTE.b	%00111100
     95  f0ef		       42		      .BYTE.b	%01000010
     96  f0f0		       42		      .BYTE.b	%01000010
     97  f0f1		       42		      .BYTE.b	%01000010
     98  f0f2		       42		      .BYTE.b	%01000010
     99  f0f3		       3c		      .BYTE.b	%00111100
    100  f0f4		       00		      .BYTE.b	%00000000
    101  f0f5		       00		      .BYTE.b	%00000000	; white space
    102  f0f6		       00		      .BYTE.b	%00000000
    103  f0f7		       00		      .BYTE.b	%00000000
    104  f0f8		       00		      .BYTE.b	%00000000
    105  f0f9		       00		      .BYTE.b	%00000000
    106  f0fa		       00		      .BYTE.b	%00000000
    107  f0fb		       00		      .BYTE.b	%00000000
    108  f0fc		       00		      .BYTE.b	%00000000
    109  f0fd		       00		      .BYTE.b	%00000000	; W
    110  f0fe		       42		      .BYTE.b	%01000010
    111  f0ff		       42		      .BYTE.b	%01000010
    112  f100		       42		      .BYTE.b	%01000010
    113  f101		       42		      .BYTE.b	%01000010
    114  f102		       5a		      .BYTE.b	%01011010
    115  f103		       24		      .BYTE.b	%00100100
    116  f104		       00		      .BYTE.b	%00000000
    117  f105		       00		      .BYTE.b	%00000000	; O
    118  f106		       3c		      .BYTE.b	%00111100
    119  f107		       42		      .BYTE.b	%01000010
    120  f108		       42		      .BYTE.b	%01000010
    121  f109		       42		      .BYTE.b	%01000010
    122  f10a		       42		      .BYTE.b	%01000010
    123  f10b		       3c		      .BYTE.b	%00111100
    124  f10c		       00		      .BYTE.b	%00000000
    125  f10d		       00		      .BYTE.b	%00000000	; R
    126  f10e		       7c		      .BYTE.b	%01111100
    127  f10f		       42		      .BYTE.b	%01000010
    128  f110		       42		      .BYTE.b	%01000010
    129  f111		       7c		      .BYTE.b	%01111100
    130  f112		       44		      .BYTE.b	%01000100
    131  f113		       42		      .BYTE.b	%01000010
    132  f114		       00		      .BYTE.b	%00000000
    133  f115		       00		      .BYTE.b	%00000000	; L
    134  f116		       40		      .BYTE.b	%01000000
    135  f117		       40		      .BYTE.b	%01000000
    136  f118		       40		      .BYTE.b	%01000000
    137  f119		       40		      .BYTE.b	%01000000
    138  f11a		       40		      .BYTE.b	%01000000
    139  f11b		       7e		      .BYTE.b	%01111110
    140  f11c		       00		      .BYTE.b	%00000000
    141  f11d		       00		      .BYTE.b	%00000000	; D
    142  f11e		       78		      .BYTE.b	%01111000
    143  f11f		       44		      .BYTE.b	%01000100
    144  f120		       42		      .BYTE.b	%01000010
    145  f121		       42		      .BYTE.b	%01000010
    146  f122		       44		      .BYTE.b	%01000100
    147  f123		       78		      .BYTE.b	%01111000
    148  f124		       00		      .BYTE.b	%00000000	; Last byte written to PF1 (important, ensures lower tip
    149  f125							;			     of letter "D" won't "bleeed")
    150  f125
    151  fffa					      ORG	$FFFA	; Cart config (so 6502 can start it up)
    152  fffa
    153  fffa		       00 f0		      .WORD.w	StartFrame	;     NMI
    154  fffc		       00 f0		      .WORD.w	StartFrame	;     RESET
    155  fffe		       00 f0		      .WORD.w	StartFrame	;     IRQ
    156  10000
    157  10000					       END
